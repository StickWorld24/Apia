{"version":3,"sources":["webpack:///./src/js/utils/supportedBrowsers.js","webpack:///./src/config/default.js","webpack:///./src/config/prod.js","webpack:///./src/js/utils/snaptoolkit.js","webpack:///./src/js/editor/panZoomManager.js","webpack:///./src/js/utils/util.js","webpack:///./src/js/editor/historyManager.js","webpack:///./src/js/editor/poolManager.js","webpack:///./src/js/editor/laneManager.js","webpack:///./src/js/editor/alignManager.js","webpack:///./src/js/editor/clipboardManager.js","webpack:///./src/js/editor/gridManager.js","webpack:///./src/js/editor/lassoManager.js","webpack:///./src/js/editor/keyManager.js","webpack:///./src/js/editor/connectorManager.js","webpack:///./src/js/editor/boundaryEventsManager.js","webpack:///./src/js/ui/controls/contextButton.js","webpack:///./src/js/ui/controls/contextMenu.js","webpack:///./src/js/ui/elements/element.js","webpack:///./src/js/ui/elements/task.js","webpack:///./src/js/ui/elements/eventElement.js","webpack:///./src/js/ui/elements/startEvent.js","webpack:///./src/js/ui/elements/endEvent.js","webpack:///./src/js/ui/elements/intermediateEvent.js","webpack:///./src/js/ui/elements/gateway.js","webpack:///./src/js/ui/elements/subprocess.js","webpack:///./src/js/ui/elements/pool.js","webpack:///./src/js/ui/elements/lane.js","webpack:///./src/js/ui/elements/group.js","webpack:///./src/js/ui/elements/textAnnotation.js","webpack:///./src/js/ui/elements/dataElement.js","webpack:///./src/js/ui/elements/dataObject.js","webpack:///./src/js/ui/elements/dataInput.js","webpack:///./src/js/ui/elements/dataOutput.js","webpack:///./src/js/ui/elements/dataStore.js","webpack:///./src/js/ui/elements/workflow.js","webpack:///./src/js/ui/elements/connector.js","webpack:///./src/js/editor/elementFactory.js","webpack:///./src/js/editor/docManager-online.js","webpack:///./src/js/editor/documentation.js","webpack:///./src/js/utils/convertToJson.js","webpack:///./src/js/ui/components/ConfigToast.js","webpack:///./src/js/ui/components/ToastMessage.js","webpack:///./src/js/ui/components/Component.js","webpack:///./src/js/ui/components/ExpanderComponent.js","webpack:///./src/js/ui/components/ListComponent.js","webpack:///./src/js/ui/components/ConditionComponent.js","webpack:///./src/js/ui/components/SearchComponent.js","webpack:///./src/js/ui/components/DateComponent.js","webpack:///./src/js/ui/components/TabComponent.js","webpack:///./src/js/ui/components/DropdownListComponent.js","webpack:///./src/js/ui/panels/templatePanel.js","webpack:///./src/js/ui/panels/ConfigCmp.js","webpack:///./src/js/ui/panels/facilis/managers/manager.js","webpack:///./src/js/ui/panels/facilis/validator.js","webpack:///./src/js/ui/panels/managers/eventManager.js","webpack:///./src/js/ui/panels/taskPanel.js","webpack:///./src/js/ui/panels/facilis/gatewayFacilis.js","webpack:///./src/js/ui/panels/gatewayPanel.js","webpack:///./src/js/ui/panels/groupPanel.js","webpack:///./src/js/ui/panels/textPanel.js","webpack:///./src/js/ui/panels/poolLanePanel.js","webpack:///./src/js/ui/panels/eventPanel.js","webpack:///./src/js/ui/panels/dataPanel.js","webpack:///./src/js/ui/panels/subprocessPanel.js","webpack:///./src/js/ui/panels/workflowPanel.js","webpack:///./src/js/ui/panels/connectorPanel.js","webpack:///./src/js/ui/panels/propertiesPanel.js","webpack:///./src/js/ui/panels/panels-online.js","webpack:///./src/js/extractor.js","webpack:///./src/js/parser.js","webpack:///./src/js/editor.js","webpack:///./src/js/ui/controls/buttonBar.js","webpack:///./src/js/ui/controls/toolBar.js","webpack:///./src/index.js"],"names":["module","exports","DEFAULTS","ELEMENT_SELECT_SIZE","GRID_SIZE","TASK_SIZE","width","height","DATA_SIZE","GATEWAY_SIZE","EVENT_SIZE","radius","GROUP_SIZE","TEXT_SIZE","POOL_SIZE","HAND_MODE","CONNECTOR_MODE","LASSO_MODE","DELETE","TASK","SUBPROCESS","GATEWAY","END_EVENT","START_EVENT","INTERMEDIATE_EVENT","POOL","LANE","GROUP","TEXT","DATA_OBJECT","DATA_STORE","DATA_INPUT","DATA_OUTPUT","WORKFLOW","CONNECTOR","CONNECTOR_TYPE_ASSOCIATION","CONNECTOR_TYPE_TRANSITION","OPEN_SUBPROCESS","VERSION","DEFAULT_SUBP_COLOR","DEFAULT_TASK_COLOR","START_ID_REMAPPING","TAB_KEYS","window","top","TAB_ID_REQUEST","CONTEXT_INFO","CONTEXT","URL","type","find","ASSOC_ENT","parent","document","getElementById","value","ROOT_URL","CONFIG","DATE_FORMAT","APIA_DATE_FORMAT","NEW_TASK_URL","TASK_URL","WORKFLOW_EVENTS_URL","WORKFLOW_ACTIONS_URL","WORKFLOW_ATTRS_URL","NEW_WORKFLOW_ATTRS_URL","WORKFLOW_BINDINGS_URL","PARTICIPANTS_URL","NEW_PARTICIPANT_URL","TASK_SCHEDULE","SUBPROCESS_URL","SUBPROCESS_TASKS_URL","SUBPROCESS_OPEN_NEW_TAB_URL","ROLES_URL","NEW_ROLE_URL","STATES_EVENTS_URL","STATES_STATUS_URL","TASK_EVENTS_URL","TASK_BUSCLAS_EVENTS_URL","TASK_BINDINGS_URL","TASK_BINDINGS_ATTR_URL","NEW_BINDINGS_ATTR_URL","NEW_ENT_FORM_URL","NEW_PROC_FORM_URL","TASK_ENT_FORMS_URL","TASK_PROC_FORMS_URL","TASK_INPUT_MSG_REF","NEW_TASK_INPUT_MSG_ATTR","TASK_OUTPUT_WS_URL","TASK_MULTIINSTANCE_URL","NEW_NUMERIC_ATTR_URL","SUBP_REUSABLE_ENT_URL","SUBP_REUSABLE_PROC_FORMS_URL","SUBP_REUSABLE_ENT_FORMS_URL","SUBP_MULTIINSTANCE_URL","SUBP_NAME_URL","NEW_SUBP_URL","EVT_MSG_ATTRS_URL","EVT_MSG_WS_URL","EVT_MSG_WS_ATTR_URL","EVT_TIMER_ATTR_URL","EVT_MSG_NEW_ATTRS_URL","EVT_MSG_WS_BINDINGS_URL","VALIDATE_COND_URL","CLASSES_DESCRIPTION_URL","TASK_FORM_DOC","DEFAULT_ATTRS_URL","LOCALIZATION_URL","LOCALIZATION_DEBUG","ENV","Defaults","SVGElement","prototype","getTransformToElement","elem","getScreenCTM","inverse","multiply","this","Snap","Element","Paper","global","stopEventDefaults","ev","stopPropagation","preventDefault","event","cancelBubble","returnValue","getZoomMatrixWithOffset","pt","z","matrix","translate","x","y","scale","ftDragStart","resetStates","ftGetElement","tbb","getTransformedBB","storeScaleFactor","calcDistance","getBBox","cx","cy","tpt","getEventPoint","storeDragStart","storeStartAngle","getStartAngle","getLastAngle","ftDragMove","dx","dy","panMove","ftElement","bb","ftGetJoins","forEach","el","ftUpdateJoin","angle","storeLastAngle","distance","storeNewRotate","scaleBy","getScaleFactor","x1","y1","x2","y2","Math","sqrt","pow","setDefaults","attrs","defaults","k","handleScroll","detail","wheelDelta","getMousePoint","node","viewBox","viewBoxZoom","elementZoom","ftUpdateHandlesIfExist","storeInitialTransform","transform","getInitialTransform","toTransformString","zoomCenter","getBoundingCenter","globalToLocal","globalPoint","paper","e","f","matrixTransform","getCursorPoint","createSVGPoint","vbInfo","getViewboxInfo","newx","newy","newvb","attr","getViewBox","baseVal","createPoint","getInverseScreenPoint","evx","clientX","center","evy","clientY","srcEvent","farthestViewPort","data","createNewViewbox","newPan","getNewPan","getOriginalViewbox","vbw","getNewScale","vbh","updateTransform","vb","newTransform","getNewRotation","getNewPanString","resetNewTransforms","vbRect","fields","i","length","removeData","addTransform","t","localMatrix","storeNewScale","getCurrentRotation","split","rotate","getStartRotation","getCurrentScale","scalex","getCurrentTranslate","decomposed","pinchMove","rotation","getDragStart","storeNewPan","onPanStart","opt","cursorPoint","localPoint","panInc","panBy","rotateInc","rotateBy","scaleInc","factor","animateFunc","from","to","func","timer","easing","callback","animate","bind","addMouseWheelHandler","addEventListener","svgFocus","animateSvgFocus","duration","v","join","getFtHandles","ftSetHandle","ftSetElement","ftUpdateHandlePosition","ftCreateHandles","rotator","circle","class","drag","joinLine","line","fill","stroke","strokeDasharray","handles","g","highlightBBox","outerSvgOption","farthestViewportElement","m","transformedBoundingBox","viewPortOption","svg","ownerSVGElement","parentNode","pts","xMin","Infinity","xMax","yMin","yMax","min","max","ftGetHandles","scaleFactor","selectAll","remove","hbb","bbr","rect","strokeWidth","opacity","markupAnimate","attributeType","repeatCount","markupAnimateTransform","attributeName","additive","markupAnimateColor","markupAnimateMotion","markupMpath","mpath","pathString","path","setAttribute","append","animateFrames","animFrames","nextFrame","frameArray","whichFrame","startFunc","call","animation","dur","PanZoomManager","EventEmitter","constructor","editor","isPanOn","super","_editor","_paper","_viewport","_lastX","_lastY","_MAX_ZOOM_OUT","_MAX_ZOOM_IN","_ZOOM_SCALE","_PAN_FACTOR_SCALE","_PAN_FACTOR_INIT","_pan_factor","_pos","_ZOOM_INIT","_zoom","_mousemoveHandler","_mouseupHandler","_onWheel","enablePanning","init","resetViewPort","isOn","removeClass","unmousedown","_mousedownHandler","addClass","mousedown","target","_pan","emit","removeEventListener","zoomIn","_zoomIt","zoomOut","evt","_keyManager","_isCtrlPressed","deltaY","deltaX","intersectRect","r1","r2","obj1","getBoundingClientRect","obj2","left","right","bottom","getPool","elements","pool","len","elementType","getAllLanes","lanesArray","push","getPreviousLaneByYPos","array","getNextLaneByYPos","getSelected","elArray","selectedArray","selected","numberOfSelectedElements","getMinX","reduce","prev","current","getMaxX","selectionBox","getMinY","getMaxY","getClosestMultiple","roundTo","floor","ceil","curr","abs","getElementsOfType","getProcessElementByID","id","parseInt","getProcessElementByGraphicID","substr","indexOf","getElementsByConnectedType","element","connector","Config","properties","elTo","elFrom","getSquareIntersection","w","h","round","getSVGMapBBox","map","set","graphic","getViewPortBBox","viewport","viewportElements","children","elList","hasClass","getName","gotName","deburr","replace","downloadPDF","filename","binary","bytes","Uint8Array","byteLength","String","fromCharCode","link","createElement","href","btoa","download","click","getTransitionsByElement","filter","getConnectorsByFromTo","fromTo","connectors","getLastYElBounds","transitions","ctxElementBounds","maxYBoundElement","transition","elBounds","visibilityComponent","wrapper","mapInOutParameters","params","inout","input","output","param","indexByProperty","collection","property","acc","HistoryManager","_history","History","create","maxUndos","_checkUndoSize","_checkRedoSize","save","_getElementsData","undo","canUndo","previous","_updateElementsFromHistory","redo","canRedo","next","undos","size","redos","props","cloneDeep","diffs","Diff","updatedValues","first","removed","connectorsArray","_createEl","updated","elToDel","select","elToDelCtxMenu","_removeFromElementsArray","newEl","_connections","_toEl","_fromEl","updateElementConnectors","added","splice","PoolManager","_poolElements","_laneElements","_LANE_MIN_HEIGHT","_isFirstMove","moveStart","elGraphic","moving","moveElement","mx","my","toggleElementConnectorsVisibility","moveEnd","moveElementEnd","resetMovingPointSegment","noMoveEnd","onElementDelete","delete","onResizeStart","onResize","laneNameBoxWidth","totalHeightLanes","lastLaneHeight","lane","_nameBoxWidth","resizeWidth","minHeight","resizeHeight","resize","onResizeEnd","LaneManager","_pool","_nextLane","_DEFAULT_LANE_HEIGHT","_LANE_NAME_BAR_WIDTH","createLane","idIndex","totalLanes","poolHeight","newElement","onLaneDeleted","deletedLane","allLanes","previousLane","resizeStart","lanesHeight","otherLanesHeight","nextLaneHeight","maxHeight","Number","POSITIVE_INFINITY","resizeEnd","AlignManager","history","_historyManager","alignLeft","_getSelected","minXElement","isAligned","isValid","_checkIsValid","includes","oldX","_updateHorizontalBoundaryEventsPos","alignRight","maxXElement","alignTop","minYElement","oldY","_updateVerticalBoundaryEventsPos","alignBottom","maxYElement","newY","alignHorizontalCenter","elementsArray","saveHistory","isCentered","obj","centerY","_isSnapToGridOn","alignVerticalCenter","centerX","newX","distVertical","isDistributed","sort","a","b","freeSpace","usedSpace","delta","useHeight","diff","distHorizontal","useWidth","boundaryEvents","elB","ClipboardManager","_clipboard","_clipboardElements","_pasteOffset","_PASTE_POSITION_OFFSET","copy","isAttached","paste","unSelectAllElements","elProps","nextID","activity","p","GridManager","_gridSize","_grid","_isGridOn","_drawGrid","isGridOn","show","bounds","wv","hv","sq","prependTo","pLine1","pLine2","pattern","hide","LassoManager","_lassoRect","_onHandleDrag","_onHandleDragStart","_onHandleDragEnd","enableLasso","undrag","ep","wx","wy","_checkShapesSelectable","toFront","lasso","lassoBounds","lassoBox","isIntersecting","segmentIsValid","_points","pt1","_convertCoordsToGlobal","pt2","seg","_checkIfValidSelection","every","eventBounds","eventCircle","elBox","objLasso","ShapesInteraction","contain","KeyManager","initKeyBindings","_currentMouseMode","_allElementsSelected","key","tagName","deleteMultipleSelectedElements","copyElements","pasteElements","redoAction","undoAction","doTabProcessElements","mode","_panZoomManager","_lassoManager","_connectorManager","enableConnection","selEls","selectAllElements","ConnectorManager","_isEnabled","_source","_target","_currentTarget","_createFromContextMenu","reset","areConnected","_isConnectorOn","_createGuideLine","mp","_guideLine","connectOneTime","connect","_mode","_contextMenu","_connectElements","closest","w1","h1","cx1","cy1","cx2","cy2","p1","p2","_connectorVisualClues","_isConnectionValid","connectorType","_getConnectorType","points","setInitialDirection","_isNotBoundaryEvent","classList","add","className","BoundaryEventsManager","_boundaryEventsToMove","_removeBoundaryEventsNotIntersecting","some","item","addBoundaryEvents","_checkIntersection","_attached","_checkParentHover","_checkIfAttached","removeBoundaryEvents","elementBounds","box","elementBox","intersection","isMoveEnd","elHover","eventType","taskContainer","taskType","ContextButton","icon","pos","_btn","_bg","_iconGroup","_onButtonClicked","_ICON_OFFSET_X","_ICON_OFFSET_Y","_BG_OFFSET_X","_drawMenu","iconShape","appendTo","updatePosition","newMatrix","ContextMenu","buttonNames","_element","_buttonNames","_buttonBar","_graphic","_selectionBox","_menuItems","_MENU_OFFSET_Y","_initButtons","_updateMenuItemsPosition","offsetY","offsetY2","menuGroup","btn","on","svgTop","isMovable","contextMenuItems","_elementType","_box","_label","_dx","_dy","_tdx","_tdy","_mx","_my","_width","_height","_hSize","_handles","_contextMenuItems","_isMovable","style","getComputedStyle","documentElement","_foregroundColor","getPropertyValue","_stroke_color","_CONTRAST_COLORS_SELECTION","_properties","name","_selected","SELECTSIZE","onElementMouseDown","onElementMoveEnd","onElementMove","throttle","onElementMoveStart","onHandleDrag","onHandleDragStart","onHandleDragEnd","initElement","undefined","elementName","state","resizable","drawResizeHandles","_onSelected","removeResizeHandles","_onDeselected","addProperty","object","drawSelectionBox","handlesGroup","selBox","se","snapInvMatrix","diffMatrix","invert","tdx","tdy","offX","offY","toBack","grid","insertAfter","snap","isSnapOn","snapSize","_isSnapOn","_snapSize","local","deleteEl","useAnime","keyframes","transformOrigin","delay","onfinish","_updateNameLabel","label","bg","text","drawLabel","classname","dominantBaseline","textAnchor","drawForeignObjLabel","title","fobjectSVG","updateTextLabel","innerText","_setColors","color","iconsArray","isReadable","level","mostReadable","includeFallbackColors","toHexString","taskText","documentation","deletePropertyByName","Task","_WIDTH","_HEIGHT","loopType","taskId","condition","drawElement","_updateTaskTypeIcon","_updateLoopTypeIcon","_updateTitleLabel","comments","role","groups","multiplyCount","createDefaultGroup","objectIndex","prop","idCompare","Array","isArray","findIndex","setPropertyObject","propArray","propToChange","index","deleteBindingInIndex","indexEvt","indexBin","events","bindings","createDefaultSchedule","schedule","forms","setSpecificFormInStepByIndex","indexStep","newForm","indexForm","multiInstance","attribute","insertForm","states","createDefaultStates","insertState","newState","setPropertyWithoutSave","setBindingsEventByIndex","setBindingEvent","indexBinding","setSpecificBindingAttribute","eventIndex","attrIndex","bin","busClaParId","busClaParBndType","busClaParBndValue","attId","attTooltip","attName","createDefaultEvents","insertEvent","newEvent","isEmpty","multiInstanceAttribute","attributeId","multiInstanceValue","scheduleName","subprocess","task","taskName","subprocessName","deleteScheduleProperties","inputMessageRef","wsMethodName","attrProc","attrEnt","insertAttributeInputMsgRef","arrayType","cleanAttributesInputMsgRef","editAttributesInputMsgRef","deleteAttributeInputMsgRef","outputMessageRef","createDefaultBPMNAutoComplete","eventId","busClaId","busClaName","order","WS","addWebServiceOutputMsgRef","webService","editWebServiceOutputMsgRef","deleteWebServiceOutputMsgRef","cleanWebServicesOutputMsgRef","deleteBindingWebServiceOutputMsgRef","indexWs","setWebServicePropertyOutputMsgRef","deleteValueWebServiceProperty","deleteAttributeWebServicesProperties","addBindingWebServiceOutputMsgRef","wsIndex","binding","taskBox","typeIconGroup","_drawTaskTypeIcon","loopTypeIconGroup","_drawLoopTypeIcon","typeIcon","toUpperCase","taskTypeIcon","looptypeIcon","taskLoopTypeIcon","deleteFormIfExist","form","deleteFlag","step","EForms","PForms","entity","process","indexEForm","frm","indexPForm","updEnt","toString","updProc","EventElement","_radius","nameEvt","message","trasitions","catchThrow","_createDefaultMessage","getFactorFrequency","unit","addTransition","date","frequency","_createDefaultFrequencyTimer","_createDefaultAttributeTimer","_createDefaultDateTimer","dateTimer","frequencyTimer","attributeTimer","setDateTimerByType","deleteTimerProperty","_defaultAttrsMessageProperties","flag","existMessageAttribute","findMessageAttributeIndex","attributes","addMessageAttribute","editMessageAttribute","position","deleteMessageAttribute","deleteAllMessageAttributes","_defaultWebServices","maxId","existWebService","webServices","ws","existWSBindingParameter","wsId","bindingId","getWebServiceIndexById","getBindingIndexById","addWebService","newWS","editWebService","deleteWebService","editBindingParameter","values","bindIndex","entries","Object","ent","deletePropertyOfBindingParameter","deleteBindingParameter","addBindingParameter","StartEvent","_updateDetailTypeIcon","startEvent","eventName","_drawEventDetailTypeIcon","EndEvent","endEvent","IntermediateEvent","isDifferent","catchThrowMessage","updateMessageProperties","setTypeWithoutSave","outerCircle","innerCircle","intermediateEvent","Gateway","executionType","_updateTypeIcon","getAllConnectorAssociated","conn","deleteAllExecutionOrderConnector","changeAllConnectorsKind","kind","gateway","polygon","_drawGatewayTypeIcon","Subprocess","activitySetId","subprocessId","idToChange","idValue","_updateType","standard","conditionDoc","reusable","entityId","entityAttrName","execution","skipFirst","addReusableForm","reusableForms","deleteReusableForm","editReusableForm","changeReusableFormPosition","actualPos","oldPos","actual","old","formType","formsOther","concat","cleanReusableForm","frmType","subprocessIcon","subProcess","subprocessLoopTypeIcon","Pool","_poolBox","_poolNameBox","_minHeight","vx","lanes","lblGroup","Lane","_maxHeight","_laneBox","_laneNameBox","onElementClick","_drawResizeBar","_removeResizeBar","_handle","Group","groupBox","groupHotSpot","group","onResizingStart","onResizing","TextAnnotation","annotationBox","annotationText","c","_drawTextBorder","elBg","elText","annotationBorder","polyline","DataElement","menu","_shapeNamePrefix","_typeId","dataName","stateValue","_getCurrentState","_updateCollIcon","capacity","unlimit","shape","dataElIcon","parse","bgBox","dataEl","collIcon","_drawCollectionIcon","collIconGroup","DataObject","DataInput","DataOutput","DataStore","Workflow","getConditionEvent","Connector","startMarker","endMarker","expressionMarker","wizardMarker","_path","_selectionPath","_elements","_endMarker","_startMarker","_expressionMarker","_wizardMarker","_segmentPoints","_CONTROL_POINT_RADIUS","_clickCount","_timeout","_ox","_oy","_oldElMoving","srcEl","direction","_onConnectorMouseOver","_onConnectorMouseOut","_onDblClick","expression","executionOrder","_updateConnectorClass","_updateConditionType","_updateDirection","markerEnd","dblclick","pathlen","getTotalLength","centerCoords","getPointAtLength","_drawForeignObjLabel","connectorName","mouseover","mouseout","updateConnection","connectorClass","markerStart","updateConnectionStart","offset","isPoolMoving","selectionSize","w2","h2","NaN","isNaN","d","fo","pBounds","_addNewSegmentToConnector","_drawSegmentPoints","_removeSegmentPoints","clientPoint","point","_closestPoint","pointLength","_getLengthForPointInPath","positionToInsert","_getNextPositionInPointsArray","handle","unmouseout","unmouseover","unclick","clear","_this","r","setTimeout","updateSegmentsPosition","elementMoving","pathNode","best","bestLength","scan","scanDistance","pathLength","precision","bestDistance","scanLength","_distance2","beforeLength","before","after","afterLength","beforeDistance","afterDistance","theSegment","division","theRecord","_p","theDistance","elementFactory","_checkSubprocessID","workflow","DocManager","getPNGCanvas","gridState","_gridManager","resetView","showGrid","mapBounds","svguri","svgAsDataUri","backgroundColor","excludeUnusedCss","canvasObj","_addImage","then","image","canvas","context","getContext","drawImage","generateXPDLFile","xpdl","buildXMLProcess","blob","Blob","saveAs","generateProcessPNG","app","saveSvgAsPng","getPNGDataURL","urlData","toDataURL","substring","uri","Promise","resolve","reject","onload","onerror","src","_h1","_h2","_PAGE_SIZE","generateProcessDocumentation","proName","proDesc","doc","default","parser","DOMParser","eventData","axios","get","xmlEventsDoc","parseFromString","iframe","querySelectorAll","iframeDoc","contentDocument","contentWindow","querySelector","margins","taskCounter","taskDetailCounter","formCounter","setFontSize","i18next","internal","pageSize","getHeight","splitText","splitTextToSize","xOffset","getStringUnitWidth","getFontSize","autoTable","startY","theme","headStyles","fontSize","fontStyle","halign","fillColor","textColor","margin","head","body","addPage","getWidth","widthRatio","heightRatio","ratio","addImage","setFontStyle","content","styles","previousAutoTable","finalY","_getEvents","align","poolArray","columnStyles","0","cellWidth","_getLanes","taskArray","taskGroupArray","taskEventsArray","taskStatesArray","taskBoundaryEvents","fontWeight","_getTaskGroups","annotationsArr","dataObjectsArr","dataStoreArr","dataInputArr","dataOutputArr","doArr","_getTaskDo","_getTaskDtaStore","_getTaskStates","_getFormDataByTaskId","getElementsByTagName","taskFormData","_getTaskFormData","getAttribute","pageBreak","taskFormEvents","formFieldAttributes","taskFieldsEvents","_getBoundaryEvents","gatewayArray","_getGatewayDetails","sanitize","lanesArr","dtaStore","dtaStoreArr","dtaObj","doArray","dtaObjectArr","gatewaysArray","gatewaysDetails","eventsArray","xmlDoc","tskEvents","tskGroups","tskStates","taskBoundaryEventsArray","tskBoundEvts","formData","formTag","tskFldEvtCounter","nodeName","attributeField","Converter","arrayJs","convert","sax","textValid","_isValidTag","convertToJson","xml","onopentag","tag","onclosetag","ontext","write","close","TEMPLATE","OPTIONS_TOAST","ICON_CLASS","infoClass","successClass","warningClass","dangerClass","TYPE_CLASS","neutral","info","success","warning","danger","POSITION_CLASS","ToastMessage","containerToast","_exists","innerHTML","insertAdjacentElement","_title","_icon","_message","cleanClass","cleanFirstAllClass","classType","msg","positions","moveXY","coordinate","waitTime","execFunction","timeout","clearTimeout","fadeIn","display","fadeOut","showMessage","options","showWrongMessage","Component","nameId","panel","_nameId","_panel","modified","_wrapper","_labelEl","labelEl","clean","disabled","showInvalidSession","ExpanderComponent","expandId","_init","JSON","_expandZone","showInput","placeholder","expandBtn","expand","iconUp","iconDown","iconEl","isExpand","showValue","newData","quantity","ListComponent","arrayList","_arrayList","_idItem","_editStatus","_disabledStatus","_rowEditableSelected","MAX_ROWS","_initComponent","_initEvents","_initListTable","_load","addAction","_cleanElementsList","list","_createListElement","toggle","_toggleBlankRow","moveUpAction","moveDownAction","rowById","rowSelected","idItem","unSelectAll","rowEditableSelected","rowElement","updateActionsButtons","count","refreshList","elSelected","editStatus","rowsItem","buttonList","_elementsList","_createdDeleteAll","_setDefaultStateAction","_moveDownItem","_moveUpItem","header","_createRowElement","appendChild","emptyRow","row","cell","_createCellElement","_createDeleteActionElement","del","deleteItem","_createCheckAllActionElement","checkAll","marginLeft","checkAllItems","_createDeleteAllActionElement","deleteAll","_deleteAllItems","_createEditActionElement","edit","fireEdition","_createCheckActionElement","action","checkbox","checkItem","_createAccordingTheActionType","actionEl","th","toLowerCase","actions","thead","cellNode","deleteActionAll","notShow","dataKey","editAction","editCell","deleteAction","deleteCell","selectElement","nodeList","rowNode","contains","_enableOrDisableActionBtn","firstElementChild","previousElementSibling","nextElementSibling","_check","idEdit","keyName","all","addItem","insertEl","_deleteInArray","existEdit","sameRowEdited","targetIndex","showDeleteItem","toast","match","haveCond","confirm","_scrollToRow","executeFn","Node","scrollIntoView","behavior","block","_move","actualPosition","oldPosition","temp","actionParam","ConditionComponent","_conditionArea","help","validate","syntaxRules","_isValid","_hideValidate","hidden","_onConditionAreaValidated","_onConditionAreaChanged","trim","conditionAreaEl","resetValidate","removeAttribute","conditionArea","_validate","url","encodeURI","response","post","error","Error","option","SearchComponent","responseTime","hasLabel","_selectEl","_dataList","valueToFind","valueEl","_url","showData","_alwaysEnableBtn","addBtn","listItems","_responseTime","_searchAction","selectEl","alwaysEnableBtn","blur","_getResultData","focus","_enableBtn","enable","loadData","_loadDataList","_cleanData","load","currentValue","exist","dataList","dataValue","optionEl","DateComponent","fullDate","dateElements","timeElements","_year","_month","_day","_hour","_minute","_actual","Date","time","year","month","day","hour","minutes","_onValidateDateTime","_isNotEmpty","getFullYear","getMonth","getDate","getHours","getMinutes","format","_getNumberOfDay","_isLeapYear","_validateYear","actualYear","_validateMonth","actualMonth","_validateDay","topDay","actualDay","_validateHour","actualHour","_validateMinutes","actualMinutes","TabComponent","tabs","_tabsArray","_wrapperTabs","_tabsElements","tab","getTab","_buildTabs","targetId","tabBody","tabBodyById","_toggleVisible","li","_onActiveTab","_isDisabled","activeTab","visibleTabBody","DropdownListComponent","baseUrl","canReload","_inputSearch","_selectedItem","_isLocal","_toggleClearInput","reloadData","_baseUrl","_appData","_cleanList","_fillList","_caretDown","_clearInput","_itemList","_addButton","_taskTitleInput","_hasLabel","_canReload","_add","_hasPreviousFocus","_isLoad","_actionReload","_eventsHandlers","_toggleVisibleButton","_onDropDown","_onBlurCaretDown","_onFousInputSearch","_onBlurInputSearch","_onFilterInputSearch","onClearInput","toggleDisabledButton","selectFirst","selectedItem","_getData","firstChild","removeChild","slice","span","reloadBtn","_onReloadButton","_onSelect","_toggleList","getItemById","getItemByName","_calculateDatalistTopRender","hInput","clientHeight","posYInput","scrollTop","innerHeight","renderY","setProperty","_applyFilter","TemplatePanel","toastMessage","createDocumentFragment","_documentationInput","_resizeDocumentationHeight","_setTimeoutOnPropertyChanged","_onDocumentationInputChanged","elementSelected","newValue","_elementVisibility","visibility","_changeVisibility","wrapperId","_includeTemplate","templateId","template","container","importNode","documentationInput","_includeComponent","wrap","component","expandZone","TSK_SHOW_CONFIG","NONE","USER","MANUAL","SERVICE","RECEIVE","SEND","SCRIPT","Manager","_id","_inputs","_include","_cleanElements","inputs","_getIndex","selector","_changeElementIDs","_getMaxId","emitChange","disabledAll","normalizeText","regex","validateApiaName","test","validatePositiveInteger","minValue","number","validateDate","validateField","field","now","EventManager","_initElements","elementsCtrl","_initEventsElements","loadEventList","_eventSelect","_busClassSelect","_eventsList","_bindingsList","_eventCondition","wrapBindingAttributeType","_bindingType","_bindingValue","_bindingAttribute","checked","eventSelect","busClassSelect","_disableClearAssociatedWithEvent","EVENT_MANAGER","EVENTS_SEARCH","BUSCLASS_SEARCH","EVENTS_LIST","BINDINGS_LIST","CONDITION","BINDING_ATTR_SEARCH","LIST_INTERFACE","PARAMS_TYPE","S","N","D","eventsUrl","busClassUrl","attributesUrl","_options","_createEventsArrayList","_createBindingsParamsArrayList","_defaultAttrUrl","wrapBindingType","wrapBindingValue","eventSelected","bindingSelected","_onSelectEvent","_onAddEvent","status","_onEditEvent","_onDeleteEvent","_onDeleteAllEvents","_onMoveEvent","_onEventConditionChanged","_onSelectBinding","_onSelectBindingTypeChanged","_onBindingValueChanged","_onSelectBindingAttribute","_onAddNewBindingAttribute","bindingAttributesTypeAll","radio","_onSelectBindingAttributeType","_onUpdateEvent","_refreshAndEmitEvent","eventCondition","bindingType","bindingValue","bindingAttribute","_visibilityBindingsElements","_fillBindingsParameters","_showEventMessageInfo","_getBindings","bindingsUrl","bindingsList","busClass","propId","propName","deleteEvent","newEvents","_getBindingFromParameter","_showAccordingBindingType","_showBindingMessageInfo","_cleanValuesAccordingNewType","_transformBindingFromValues","_deleteBindingParameter","_createNewBindingParameter","busClaParName","busClaParType","_fillValidBindingValue","oldValue","bindingAttributeType","parameter","newBinding","newType","_createBindingAttribute","_createBindingValue","_showBindingAttribute","_showBindingValue","_showErrorMessage","_showSuccessInsertionMessage","setFieldValueEachType","attrType","setUrlAttributeEachType","_toggleNumberFieldAttributes","hasMinAttribute","hasAttribute","hasStepAttribute","MAX_SAFE_INTEGER","arrayListData","classId","parameters","_customBindingsParameters","indexBindings","existBinding","_getEspecificationBinding","isValue","isProcess","isEntity","isAttribute","_insertNewAttribute","attrCreated","attributeValue","TaskPanel","_initComponents","_initEventListenersComponents","_taskNameInput","_taskGroupInput","_taskSearchParticipant","_taskListParticipants","_taskCondParticipant","_taskSkipConditionInput","_taskScheduleInput","_taskScheduleSearch","_taskRoleSearch","_taskDocParticipant","_taskColorInput","_taskColorInputName","_taskTypeSelect","_loopTypeSelect","_taskCommentsInput","_taskScheduleTypeSelect","_taskStatesInput","_taskSearchEventStates","_taskSearchStates","_taskListEventStates","_taskConditionStates","_taskDocStates","_taskEventsInput","_taskFormsInput","_taskListStepForms","_stepForms","_taskTypeForms","_taskSearchForms","_taskListForms","_taskConditionForms","_taskDocumentationForms","_stepSelected","_taskMultiInstanceLoopType","_taskInputOutputGroup","_taskWsMethodName","_taskWsAttributeType","_taskOutputWSBindingType","_taskOutputWSBindingValue","_wrapTaskGroup","_groupExpandZone","_scheduleExpandZone","_statesExpandZone","_eventsExpandZone","_formsExpandZone","_wrapTaskAttributesTypeEvents","_wrapTaskBindingsTypeEvents","_wrapTaskSearchAttributesEvents","_wrapTaskBindingsValueEvents","_wrapMultiInstanceLoopType","_wrapOutputBindingAttrType","_onTaskTypeSelectChanged","_onTaskColorChanged","_onLoopTypeSelectChanged","_onTaskCommentsChanged","_onSelectScheduleTypeChanged","TASK_PANEL","ROLE_SEARCH","TASK_NAME","TASK_CONDITION","GROUP_SEARCH","GROUP_LIST","GROUP_CONDITION","SCHEDULE","SCHEDULE_SEARCH","SCHEDULE_SUBPROCESS","SCHEDULE_TASK","STATES","STATES_EVENT","STATES_STATUS","STATES_LIST","STATES_CONDITION","EVENTS","EVENTS_BUSCLAS","EVENTS_CONDITION","EVENTS_BINDINGS","EVENTS_ATTR","FORMS","FORMS_STEPS","FORMS_SEARCH","FORMS_LIST","FORMS_CONDITION","MULTIINSTANCE_LOOPTYPE","INPUT_MSG_REF","INPUT_MSG_REF_ATTR_SEARCH","INPUT_MSG_REF_ATTRS_LIST","OUTPUT_MSG_REF_WS_SEARCH","OUTPUT_MSG_REF_WS_LIST","OUTPUT_MSG_REF_BINDING_LIST","OUTPUT_MSG_REF","OUTPUT_MSG_REF_ATTR_SEARCH","PARAMETER_TYPE","_taskScheduleSubprocSearch","_taskScheduleTaskSearch","_taskMultiInstanceType","_taskMultiplicationNumber","_getTasksBySubrocessId","_taskSearchEvents","_taskBusClasEvents","_taskConditionEvents","_taskBindingsValueEvents","_taskSearchAttributesEvents","_taskBindingsTypeEvents","inputEl","_taskInputMsgRefSearch","_taskInputMsgRefExp","_taskOutputMsgRefExp","_taskOutputWebServiceSearch","_wsSelected","_taskOutputBindingAttrSearch","_initGroupsComponents","_createParticipantsArrayList","wrapTaskName","wrapTaskTitle","wrapTaskSearchParticipants","wrapListParticipants","wrapConditionParticipant","wrapDocParticipants","wrapTaskType","_initGenericTaskComponents","wrapRoleTask","wrapTaskLoopType","wrapSkipCondition","wrapTaskComments","wrapTaskDoc","wrapTaskColor","_initInputOutputMessageRefComponents","_createInputMsgRefAttrsArrayList","_createOutputMsgRefWsArrayList","_createWebServiceBindingsArrayList","wrapInputMsgRefExp","wrapInputOutputGroup","wrapInputMsgRefSearch","_taskInputMsgRefList","wrapInputMsgRefList","wrapOutputMsgRefExp","wrapWebServiceSearch","wrapOutputWSBindingType","_taskOutputMsgRefWSList","wrapOutputMsgRefWSList","_taskOutputMsgRefBindingList","wrapOutputMsgRefBinList","wrapOutputBindAttr","_initScheduleComponents","wrapExpanderSchedule","wrapHighLight","wrapScheduleSearch","wrapScheduleType","wrapScheduleSubprocess","wrapScheduleTask","_initStatesComponents","_createEventsStatesArrayList","wrapExpanderStates","wrapEventStates","wrapStatesSearch","wrapListEventsStates","wrapConditionStates","wrapDocStates","_initEventsComponents","wrapExpanderEvents","_taskEvents","_initFormsComponents","_createStepFormsArrayList","_createFormsArrayList","wrapExpanderForms","wrapListStepForms","wrapTypeForms","wrapTaskSearchForms","wrapListForms","wrapFormsCondition","_initMultiInstanceLoopTypeComponents","_wrapMultiInstanceType","_wrapMultiplicationNumber","wrapOutputWSBindingValue","_onSelectNameChange","_onAddNewTaskNameInput","_onClearNameInput","_onAddNewParticipant","_onSelectSearchParticipant","_onAddParticipantSelect","_onSelectParticipantItem","_onDeleteParticipantItem","_onDeleteAllParticipantItems","_onParticipantConditionChanged","_onStateConditionChanged","_onParticipantDocumentationChanged","_onSelectScheduleAgendaChanged","_onSelectScheduleSubprocessChanged","_onSelectScheduleTaskChanged","_onClearSchedulePropertyChanged","_onExpandScheduleInput","_onSelectRoleTaskChanged","_onClearRoleTasks","_onAddNewRoleSearch","_onAddStateList","_onSelectedEventState","_onDeleteEvenStatestList","_onDeleteAllEventStatesList","_onEditEventState","_onSelectEventOrStates","_onConditionAndDocumentationStatesChanged","taskDocStates","_onTaskEventsChanged","_onOrderTaskEventsChanged","_onExpandForms","_onAddTaskStepListForms","_onTaskStepListFormsSelect","_onDeleteTaskStepListForms","_onSelectTaskSearchForms","_onAddNewTaskForm","_onDeleteAllTaskStepListForms","_onTaskFormListSelect","_onDeleteTaskFormList","_onAddTaskListForms","_onCheckTaskListForm","_onTaskTypeFormsSelectChanged","_onTaskConditionAndDocFormsChanged","taskDocumentationForms","_onOrderStepFormsChanged","_onOrderFormsChanged","_onTaskSkipConditionChanged","_onTaskMultiInstanceChanged","_onAddMultiInstanceAttribute","_onInputOutputGroupChanged","_onExpandInputMessageRefExp","_onTaskWsMethodNameChanged","_onSelectTaskWsAttributeType","_onEditTaskInputMsgRefList","_onAddTaskInputMsgRefList","_onDeleteTaskInputMsgRefList","_onDeleteAllTaskInputMsgRefList","_onSelectInputMsgRefList","_onCheckInputMsgRefList","_onTaskInputMsgRefSearchChanged","_onAddNewInputMsgAttribute","_onExpandOutputMsgRefExp","_onAddWebServiceIntoList","_onEditWebServiceIntoList","_onSelectWebServiceIntoList","_onSelectOutputWebServiceSearch","_onSelectOutputWsBindingsList","_onDeleteWebServiceOutputMsgRefList","_onDeleteAllWebServiceOutputMsgRefList","_onTaskWsAttributeTypeChanged","_onWebServiceBindingAttrTypeChanged","_onWebServiceBindingAttributeChanged","_onWebServiceBindingValueChanged","_onTaskMultiInstanceTypeChanged","_onValidateMultiplicationNumber","_onTaskMultiplicationNumberChanged","_canShowComponentAccordingTaskType","_showGenericComponents","_fillTaskTypeAccordingFirstTask","taskTitleInput","readOnly","taskColorInput","taskColorInputName","taskTypeSelect","taskComments","taskSkipCondition","canShowLoop","loopTypeSelect","optionsEvent","firstTaskOptions","realOptions","_checkIsFirstTask","_checkIsStartEventIsMessage","_fillSelect","_cleanSelect","optionValue","taskElement","startConnectors","_showGroupsComponents","canShowGroups","taskParticipantDocumentation","_groupsShowValue","_createCustomConditionList","taskCondParticipant","_showScheduleComponents","canShowSchedule","scheduleId","scheduleSubprocessName","scheduleType","_scheduleShowValue","scheduleTask","scheduleTaskName","_getLocalScheduleTasks","catch","taskScheduleTypeSelect","_showRoleComponents","canShowRole","_showStatesComponents","statesValue","_statesShowValue","taskConditionStates","taskSearchEventStates","taskSearchStates","_showEventsComponents","eventsList","_eventsShowValue","_showFormsComponents","canShowForms","formsValue","_formsShowValue","taskFormsInput","_getStepsForms","taskConditionForms","_disableConditionAndDocForms","_disableTypeAndSearchForms","_getStepFormSelected","_showLoopTypeComponents","notNone","isAttributeType","multiInstanceType","taskMultiInstanceType","taskMultiplicationNumber","_showInputOutputMessageRefComponents","_transformLabelAccordingTaskType","capitalizeType","_clearAllInputOutputComponents","taskInputOutputGroup","taskWsMethodName","taskOutputWSBindingType","taskOutputWSBindingValue","isInputOrOutput","_canShowIt","_inputMessageRefShowValue","taskWsAttributeType","imrAttrProc","imrAttrEnt","outputValue","_outputMessageRefShowValue","_getOutputWebServicesList","valueToShow","_getScheduleName","_getTaskName","countStep","steps","notShowClass","scheduleValue","taskRoleSearch","roleValue","roleCreated","scheduleSubprocess","_toggleVisibilityTaskGroup","actualName","taskNameInput","enableBtn","nameExp","RegExp","nameValue","titleValue","nameValueUri","titleValueUri","taskCreated","taskSearchParticipant","newParticipant","participant","newGroups","_getObjectIndexById","statusSelected","idEvent","idName","copyStates","statesToEdit","stateToEdit","indexItem","_deletePropertyWhenTaskTypeChanged","components","_cleanAndDeleteLoopProperties","_showAccording","_switchInputOutputArea","boundary","boundaryId","found","isValueType","multiplication","_onTaskNameChanged","wsSelected","stepSelected","taskTypeForms","customList","formSelected","taskSearchForms","formValue","NEW_FORM_URL","formCreated","copyForms","_disabledWhenDeleteInForms","stepIndex","formToAdd","charAt","multiInstanceAttributeName","ordering","taskMultiInstanceLoopType","_addNewNumericAttribute","fnExecuteChanged","search","editAttr","addAttr","multivalued","uk","oppositeProp","_onCheckInputSelectedOnList","alreadyOnList","dropDown","wsToAdd","_disabledOutputAttrType","radios","editSelected","_cleanAndHideAllOutputBindingsCmp","isEdit","wsBindingFind","createNewWebServiceBinding","paramSelected","valueType","indexWebService","indexBinSelected","wsBinding","_setFieldValueEachType","_setUrlAttributeSearch","ouputWsAttributeTypeChecked","attributeSearch","valueToChange","_getOutgoingConnectors","_getOutgoingElements","visited","outgoingElements","tasks","_getNextTasks","startElement","tasksCollections","startID","outgoingConnectors","bindingValueField","GatewayFacilis","_typeSelect","_nameInput","_onTypeSelectChanged","_onNameInputChanged","typeSelect","nameInput","GatewayPanel","_executionType","wrapExecutionType","_onExecutionTypeChanged","_showExecution","oldExec","newExec","GroupPanel","TextPanel","_textInput","_onTextInput","textInput","PoolLanePanel","isPoolOrLane","EventPanel","_initMessageComponents","_initTimerComponents","_initEventOfComponents","EVENT_PANEL","MESSAGE","MSG_ATTR_SEARCH","MSG_ATTRS_LIST","MSG_WS_SEARCH","MSG_WS_LIST","MSG_BINDINGS_LIST","MSG_WS_ATTR_SEARCH","TIMER","TIMER_ATTRIBUTE_SEARCH","TIMER_START_DATE","TIMER_END_DATE","_eventNameType","_detailTypeSelect","_eventMsgCatchThrow","_eventMsgWebServiceInput","_eventMsgAttributesType","_eventMsgBindingType","_eventMsgBindingValue","_eventTimerType","_eventTimerStartDate","_eventTimerEndDate","_eventTimerUnit","_eventTimerValue","_eventTimerAttrType","wrapDetailTypeSelect","wrapMsgCatchThrow","wrapAttrsType","wrapWebserviceInput","wrapBindingAttrType","wrapTimerAttrType","_onDetailTypeSelectChanged","_onTimerTypeChanged","_eventTimerAttributeSearch","_eventMsgAttributeSearch","_eventMsgWebServiceSearch","_eventMsgWSAttributeSearch","_eventTimerExp","wrapTimer","_eventMessageExp","wrapEvtTimerAttrSearch","dateWrapper","_getTimerGroup","wrapStartDate","wrapEndDate","_createMessageAttributesArrayList","_createMessageWebServicesArrayList","_createMessageBindingsArrayList","isProduction","wrapMessage","wrapEvtMsgAttrSearch","_eventMsgAttributesList","wrapEvtMsgAttrsList","wrapEvtMsgWSSearch","_eventMsgWebServicesList","wrapEvtMsgWSList","_eventMsgWSBindingsList","wrapEvtMsgWSBindingsList","wrapEvtMsgWSAttrSearch","_onEventTimerDateChanged","_onEventTimerFrequencyChanged","_onValidateFrequencyValue","_onEventTimerAttributeChanged","_onEventMessageExpand","_onEventMessageWebServiceChanged","_onAddNewMessageAttribute","_onSelectToEditEventMsgAttributeSeacrh","_onDeleteEventMsgAttributesList","_onDeleteAllEventMsgAttributesList","_onAddEventMessageAttribute","_onSelectEventMsgAttributesList","_onEditEventMsgAttributesList","_onCheckedEventMsgAttributesList","_onEventMsgAttributesTypeChanged","_onEventMsgCatchThrowChanged","_onAddEventMsgWebServicesList","_onSelectMsgWebServicesList","_onEditMsgWebServicesList","_onDeleteEventMsgWebServicesList","_onDeleteAllEventMsgWebServices","_onSelectToEditEventMsgWebServiceSearch","_onSelectEventMsgWSBindings","_onEventMsgWSBindingTypeChanged","_onEventMsgWSBindingValueChanged","bindingAttrTypes","_onEventMsgWSBindingAttributeChanged","_setDetailTypeSelect","optionsValues","_cleanTypeSelect","pop","shift","_createOptionElement","_getTypeToShow","eventNameType","detailTypeSelect","_showTimerComponentsAccordingToType","_showMessageComponentsAccordingToType","_getDateObject","isIntermediate","timerValue","_getTimerShowValue","_cleanTimerDateComponents","_cleanTimerFrequencyComponents","_cleanTimerAttributeComponents","eventTimerType","start","eventTimerStartDate","end","eventTimerEndDate","eventTimerUnit","eventTimerValue","eventTimerAttrType","eventTimerAttribute","isStart","isItermediate","isEnd","isMessage","isThrow","isIntermediateThrow","_getMessageShowValue","_toggleEventMessageComponents","_fillStartOrItermEventMessageComponents","_fillEndEventMessageComponents","_cleanStartItermEventMessageCmp","eventMsgCatchThrow","eventMsgWebServiceInput","eventMsgAttributeType","_cleanEndEventMessageCmp","eventMsgBindingType","eventMsgBindingValue","bindingAttrTypeToCheck","webServiceMessage","processAttributesMessage","entityAttributesMessage","_getFilteredWebServicesArray","filtered","_updateMessageExpValue","_getActiveTimerGroup","_cleanAndHideBindingsComponents","isCatch","hideCatchThrow","_toggleCatchEventMessageComponents","_toggleThrowEventMessageComponents","_isActiveTimerGroup","timerType","active","timerGroup","_onDeleteTimerProperty","_getFilteredAttributesByType","filterBy","freqTimer","actualValue","actualWS","attrName","eventMsgAttributeSearch","converter","newAttr","newAttribute","editAlreadyOnlist","_onCheckEditEventMsgAttributeOnList","valueAttr","_refreshWebServicesList","defaultWebService","isVisibleAttr","isVisibleAttrType","isVisibleValue","wsEdit","wsToEdit","parType","changeWhenTypeIsValue","changeWhenTypeIsAttribute","_updateBindingsParametersList","bindingParam","isDistinct","getNewBindingToAdd","newProps","_editOrAddBinding","newProp","bindingAttrTypeChecked","DataPanel","_dataTypeInput","_stateInput","_collectionInput","_unlimitInput","_capacityInput","_checkCapacity","_onStateInputChanged","_onCollectionInputChanged","_onUnlimitInputChanged","_onCapacityInputChanged","dataType","dataTypeInput","stateInput","isDataStore","unlimitInput","capacityInput","collectionInput","isDataElement","isUnlimit","SubProcessPanel","SUBPROCESS_PANEL","SUBPROCESS_NAME_SEARCH","STANDARD_LOOP_CONDITION","REUSABLE","REUSABLE_ENTITY_SEARCH","REUSABLE_FORMS_SEARCH","REUSABLE_FORMS_LIST","MULTIINSTANCE_LOOPTYPE_SEARCH","_subpTypeSelect","_subpLoopTypeSelect","_subpColorInput","_subpColorInputName","_subpStandardLoop","_subpConditionDoc","_subpReusableFormType","_subpReusableExecution","_subpReusableSkipFirstTask","_onSubpTypeSelectChanged","_onSubpLoopTypeSelectChanged","_onSubpColorChanged","_onSubpReusableFormTypeChanged","wrapStandardLoopSwitch","wrapSubpConditionDoc","wrapReusableExpandZone","wrapReusableFormType","wrapSubpLoopType","wrapSubpType","_initSubpNameComponent","_initStandardLoopComponents","_initReusableTypeComponents","_initMultiInstanceComponent","_subpNameInput","wrapSubpName","_subpStandardLoopCond","wrapStandardLoopCond","_createReusableFormsArrayList","_subpReusableExp","_subpReusableEntitySearch","wrapReusableEntSearch","_subpReusableFormSearch","wrapReusableFormSearch","_subpReusableFormsList","wrapReusableFormsList","_subpMultiInstanceType","wrapMultiInstanceType","_subpMultiplicationSearch","wrapMultipSearch","_subpMultiplicationNumber","wrapMultiplicationNumber","_onSubpStandardLoopChanged","_onSubpStandardLoopCondChanged","_onSubpStandardLoopDocumentationChanged","_onSubpNameInputChanged","_onAddNewSubprocess","_onSelectMultiplicationSearch","_onAddNewMultiplicationAttribute","_onSelectReusableEntitySearch","_onDeleteReusableEntitySearch","_onAddReusableFormsList","_onSelectReusableForm","_onEditSubpReusableFormsList","_onSelectSubpReusableFormsList","_onDeleteSubpReusableFormsList","_onDeleteAllSubpReusableFormsList","_onOrderFormChanged","_onSelectSubpReusableExecutionChanged","_onSubpReusableSkipFirtsTaskChanged","_onSubMultiInstanceTypeChanged","_onSubpMultiplicationNumberChanged","showGenericComponents","showStandardLoop","showReusable","showMultiInstance","subpTypeSelect","subpLoopTypeSelect","subpColorInput","subpColorInputName","subpStandardLoop","isVisibleCond","isVisibleCondDoc","subpStandardLoopCond","standardCondition","subpStandardLoopCondDoc","standardDocumentation","reusableEntity","subpReusableFormType","_getReusableExpShowValue","_getReusableFormByType","_setReusableEditionMode","subpReusableExecution","subpReusableSkipFirstTask","isMultiplicationNumber","subpMultiInstanceType","subpMultiplicationNumber","formsByType","subpNameInput","valueUri","subpCreated","propToDelete","standardLoop","multiSelect","subpMultiplicationSearch","entitySelect","editForm","existForm","rform","valueShow","formEdit","isNumberMult","WorkflowPanel","_initEventsHandlers","_eventsManager","_setEventsWhenManagerChanged","ConnectorPanel","_connectorNameInput","_connectorTypeSelect","_connectorApiaSelect","_connectorExpCondition","_connectorDirectionSelect","_connectorExecOrder","CONNECTOR_PANEL","EXPRESSION","_wrapConnectorDoc","_wrapConnectorType","_wrapConnectorDirection","_wrapConnectorApia","_wrapCod","_wrapConnectorExecOrder","_onConnectorTypeSelectChanged","_onConnectorDirectionSelectChanged","_onConnectorApiaSelectChanged","_onConnectorExpressionCondChanged","_onConnectorNameChanged","_onConnectorExecutionOrderChanged","_transitionComponentsAccordingElement","_haveGatewayMultipleConnectors","_showModuleTransition","connectorTypeSelect","connectorApiaSelect","elementFrom","elementTo","connectorNameInput","connectorExpCondition","connectorExecOrder","connectorDirectionSelect","_isDataInputOutput","fromId","toId","PropertiesPanel","_sidebar","_sidebarHandle","_btnToggleVisible","_sidebarMinWidth","_newSideBarWidth","_onSidebarHandleMouseUp","_onSidebarHandleMouseMove","matchMedia","matches","docWidth","offsetWidth","Panels","_taskPanel","_subprocessPanel","_gatewayPanel","_eventPanel","_groupPanel","_textPanel","_dataPanel","_poolLanePanel","_workflowPanel","_connectorPanel","panelName","isVisible","Extractor","FORM","ATTRIBUTE","DOCUMENTATION","EVENT","readExtract","unescape","_extractInfo","writeExtract","builder","_buildDocumentation","_buildWorkflowForms","_buildTaskForms","_buildEvents","result","Types","types","documentationEle","enconding","headless","escape","pretty","formsEle","stepFrm","frmId","frmStepId","frmOrder","ele","frmName","frmTitle","formEle","_buildAttributesWorkflowForm","attLabel","fieldtype","fieldType","datatype","regExp","eventsEle","busClaDesc","evtName","evtExecOrder","flagForm","flagDoc","_addFormProperties","_addAttributeProperties","_addEventProperties","textValue","resume","textDoc","flagDocumentation","otherDirtyTags","otherTags","_addWorkflowFormProperties","_addTaskFormProperties","formStep","typeForms","tagAttrs","lastForm","Parser","normalize","strict","tagsTypes","Event","Start","Intermediate","End","Artifact","Activity","DataInputOutput","_toIntegerId","_getConnectorByIdContains","_checkBoundaryEvents","newId","eventsAttached","_checkTaskSchedule","_attachConnectors","connectorsFrom","connectorsTo","_updateConnectors","_updateIdEachProperties","_elementsIdRemapping","shortId","uniqueId","packageId","defaultPool","processId","_existAnyParticipant","_isTask","_existAnyArtifact","_isArtifact","_existAnySubprocessEmbedded","_isSubprocess","_existAnyAssociation","buildXmlProcessMap","participants","elementList","dataStoreId","root","_getPackageElement","_getParticipantsElement","associations","artifacts","pools","_getPoolsElement","_getArtifactsElement","_getAssociationsElement","datastores","_getDataStoresElement","workflows","_getWorkflowProcessesElement","_createPoolElement","_createNodeGraphicsInfosElement","activitySets","participantsList","workflowProcess","_getWorkflowProcessElement","_getProcessHeaderElement","_getActivitySetsElement","activities","_getActivitiesElement","dataInputOutputs","_getDataInputOutputs","dataStoreReferences","_getDataStoresReferencesElement","_getTransitionsElement","_createtWorkflowProcessElement","reusableProcess","_identifyFirstTask","_isActivity","_isDataInput","_isDataOutput","_getLanesElement","_createDocumentationElement","artifact","_createArtifactAcoordingToType","_createDataStoreElement","datastore","_createDataStoreReference","_createActivityAcoordingToType","_createConnectorAcoordingToType","_createConnectorGraphicsInfosElement","dataInputOuput","_createDataInputOrOutputElement","wReusableProcess","att","firstTasks","inFirsTask","_existsDataStores","_isDataStore","_getLaneList","lanesElement","Id","_getProEleDesignXML","getTransitionsElement","_getReferences","xmlns","apia","newVersion","_getPackageHeaderElement","packageEle","toLocaleString","pack","noDoubleEncoding","xCoordinate","_getCoordinates","yCoordinate","_getImplementationElement","_getTaskTypeElement","coordinates","_getSize","_getArtifactType","_getApiaExtensionsElement","_isDataObject","_isTextAnnotation","_isGroup","_isEvent","_isGateway","_isLane","_fillInputOutputsList","_filterWorkflowProcess","dataStoreRef","DataStoreRef","State","Name","IsCollection","_createCoordinateElement","YCoordinate","XCoordinate","graphicsInfo","_createExpressionConditionFragment","typeClass","From","To","Target","Source","AssociationDirection","_createRoleRefElement","elementsList","BoundaryVisible","Orientation","proAction","proId","versionId","_createApiaProcEventsElement","_createArtifactElement","ArtifactType","_createDataObjectElement","dataObject","documentationObj","nodeGraphicInfos","graphicInfo","Height","Width","IsUnlimited","_createApiaProcEventsBusClaParBindingsElement","apiaProEvent","busClaParBindings","bindingAttr","busClaParBinding","BusClaParId","BusClaParName","BusClaParType","BusClaParBndValue","binValue","arrDte","dte","asString","apiaProEvents","EvtId","BusClaId","EvtName","BusClaName","ProEvtBusClaExecOrder","_refactorNumberDate","_createEventAcoordingToType","typeEvent","implementation","TimeDate","TimeCycle","_createWebServiceMappingElement","_createApiaEventsElement","_createTransitionsRefElement","_getAllTransitionConnectors","_isIdealElementToHaveTransitionRef","_getTransitionArrayFromElements","transitionRefs","Type","messageProps","tagType","tagTypeAttribute","webServicePro","ws_method_name","attribute_uk","attribute_id","attribute_type","_createActivityElement","proEleId","isConectedApia","_createGatewayAcoordingToType","GatewayType","MarkerVisible","visible","_createSubprocessAcoordingToType","ActivitySetId","sync","subflow","_createFormRefsElement","_createLoopElement","_createForm","formRef","ProEleFrmStepId","formRefs","entityForms","processForms","formsJoin","_getDefaultApiaEvent","apiaEvents","ProEleEvtBusClaExecOrder","SkipCond","eventEl","bindingsEl","binAttr","AttTooltip","BusClaParBndType","AttName","AttId","_deleteAttrProperties","loopName","loop","TestTime","testTime","multi","_participantExist","_getDefaultPerformer","createPerformersElement","tskTypeCondition","performers","participantType","_createApiaTaskStates","apiaStates","EntStaId","StaName","_createTaskAcoordingToType","offline","taskTypeEl","_createWebServiceMappingTaskElement","wsTagName","webServiceTsk","_createWebServiceAttributeTaskElement","webServiceTask","wsAttTagName","_filterTagName","_addActivityProperties","_addTaskProperties","_addScheduleTaskProperties","_addRoleTaskProperties","_addGroupTaskproperties","textPerf","_addArrayProperties","_getStepIndex","stepId","_addFormsProperties","build","FrmId","FrmName","ProEleFrmOrder","ConditionDoc","FrmType","ProEleFrmReadOnly","ProEleFrmMultiply","ProEleFrmEvalCond","_addEventsProperties","tagToBuild","webServiceCtrl","conditionTask","_addBusinessClassProperties","dateValue","dayjs","extend","customParseFormat","_addLoopTypeProperties","LoopType","_addMultiInstanceLoopProperties","hasValue","MI_FlowCondition","MI_Ordering","MI_Condition","_addStandardLoopProperties","LoopCondition","_addStateTaskProperties","ProEleBusEntStaEvalCond","_addEventTypeProperties","Trigger","Result","_addEventImplementationProperties","Implementation","_addTriggerResultMessageProperties","CatchThrow","_addTriggerTimerProperties","_addWebServiceAttributeProcessOrTaskProperties","clasification","wsAttribute","_addRouteGatewayProperties","ExclusiveType","exclusiveType","_addTransitionReferenceProperties","_addTransitionOrAssociationProperties","_addBlockActivitySubprocessProperties","_addSubflowSubprocessProperties","_addArtifactProperties","_defineArtifactToBuildAcoordingToType","_addPoolProperties","Process","_addDefaultPoolProperties","_addLanesProperties","lanesList","_addDataStoreProperties","dataStoreList","dataStore","referenceId","Capacity","_addDataObjectInputOutputProperties","_addDataStoreReferenceProperties","_addDataStoreDocumentationProperties","_addObjectDocumentationProperties","_addCoordinateProperties","laneFlag","_addApiaProEventsProperties","_isContaintSizeProperties","_addLanesSizeProperties","_addLanesCoordinatesProperties","_addNodeGraphicsInfoProperties","_buildLanesElement","poolProps","coord","_checkCoordinateLane","poolWidth","_addWorkflowProperties","_addConnectorsPointsProperties","_addPackageProperties","_addLaneDocumentationProperties","_addLaneObjectProperties","_addColorProperties","FillColor","_addParticipantProperties","_addParticipantTypeProperties","_addPerformerTextProperties","findParticipant","_canHaveGroup","buildProcessMap","tagPoints","tagProperties","wsChecking","workflowDoc","performerText","oncdata","_extractRealDocumentationInfo","_isElementToBuild","xCoord","yCoord","_createAllConnectors","extractParser","extractUnmodifiedInfo","propertyList","currentCoord","realCoordY","Editor","_onPaperClick","btnRedo","btUndo","isAvailable","_repositionCtxMenu","_poolManager","_laneManager","_alignManager","_clipboardManager","_boundaryEventsManager","_panels","_elementFactory","ElementFactory","_docManager","_parser","_graph","Graph","_idIndex","_elementSelected","_firstSelectedElementFromMultiple","_currentlySelectedNumber","_selectedElementFirstMove","_elementsSelectedToMove","_workflow","_fileName","_THROTTLE_CONNECTORS_MS","_ctxMenuLayer","throttledUpdateConnectors","setTitle","version","buildEmptyProcess","_clearEditorElements","createDefMarkers","buildProcess","newElements","isFromToolbar","fromEl","toEl","fw","addNode","addEdge","shiftKey","_moveStartMultipleSelection","_moveMultipleSelection","_moveEndMultipleSelection","_deleteElement","_openSubprocess","_openProcessInNewTab","fileName","posX","extraY","bottomRight","leftTop","maxYEl","rightElLeftTop","connType","startArrow","marker","endArrow","rhomboid","doubleArrow","elType","_updateElementPosition","_updatePointSegments","l","bEvent","_updateElementEndPosition","elMovedID","removeNode","_deleteAttachedConnectors","lenB","_deleteFromConnectorsList","removeEdge","connLen","alignSelectionLeft","alignSelectionRight","alignSelectionTop","alignSelectionBottom","alignSelectionHorizontal","alignSelectionVertical","distSelectionHorizontal","distSelectionVertical","toShow","snapToGrid","graphArr","topologicalSort","loadLocalXPDL","files","reader","FileReader","readAsText","saveLocalXPDL","saveToPDF","getPDF","saveToImage","getPNGData","tabContainer","tokenId","tabId","subpUrl","addNewTab","ButtonBar","currentTarget","ToolBar","_isDraggingElement","_toolBarClone","_onToolBarElMouseMove","_onToolBarElMouseUp","_onToolBarElMouseDown","_onToolDragStart","_onToolDrop","_onToolDragOver","_clickToolbarElement","draggable","connectorBtn","handBtn","_cloneWithStyles","offsetHeight","_giveVisualClueIfDropNotOK","_toolbarDraggingDone","_dataType","_dragBtnId","_getElementPosition","_validateCreate","_isDropZoneOk","elementFromPoint","unbind","clone","cloneNode","cssText","css","propertyName","canCreateElement","library","faUndo","faRedo","faTh","faVectorSquare","faHandPointer","faSearchPlus","faSearchMinus","faSearch","faPlus","faArrowUp","faArrowDown","faTasks","faTimes","faCheckSquare","faSquare","faQuestion","faKeyboard","faPen","faInfoCircle","faCheckCircle","faExclamationTriangle","faExclamationCircle","faGripLinesVertical","faTrashAlt","faCalendarAlt","faClock","faSave","faCrosshairs","dom","watch","localize","locI18next","use","Backend","backend","loadPath","crossDomain","lng","fallbackLng","debug","MicroModal","resp","txtMap","loadXPDL","newXPDL","getXPDL","getPNG","getElements","getElementsProperties","getSelectedElement","getSelectedElementProperties","getVersion","commit","COMMITHASH","branch","BRANCH","env","ENVIRONMENT","app_target","APP_TARGET","timestamp","TIMESTAMP","package","PACKAGE_VERSION","confirmBtn","genDocBtn","mainDiv","supportedBrowsers","navigator","userAgent","alert"],"mappings":"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","file":"index.js","sourcesContent":["module.exports = /(Edge\\/(79(?:\\.0)?|79(?:\\.([1-9]|\\d{2,}))?|([8-9]\\d|\\d{3,})(?:\\.\\d+)?))|(HeadlessChrome((?:\\/50\\.0\\.\\d+)?|(?:\\/50\\.([1-9]|\\d{2,})\\.\\d+)?|(?:\\/(5[1-9]|[6-9]\\d|\\d{3,})\\.\\d+\\.\\d+)?))|((Chromium|Chrome)\\/(50\\.0|50\\.([1-9]|\\d{2,})|(5[1-9]|[6-9]\\d|\\d{3,})\\.\\d+)(?:\\.\\d+)?)|(Version\\/(10\\.0|10\\.([1-9]|\\d{2,})|(1[1-9]|[2-9]\\d|\\d{3,})\\.\\d+|11\\.0|11\\.([1-9]|\\d{2,})|(1[2-9]|[2-9]\\d|\\d{3,})\\.\\d+|12\\.0|12\\.([1-9]|\\d{2,})|(1[3-9]|[2-9]\\d|\\d{3,})\\.\\d+|13\\.0|13\\.([1-9]|\\d{2,})|(1[4-9]|[2-9]\\d|\\d{3,})\\.\\d+)(?:\\.\\d+)? Safari\\/)|(Firefox\\/(60\\.0|60\\.([1-9]|\\d{2,})|(6[1-9]|[7-9]\\d|\\d{3,})\\.\\d+)\\.\\d+)|(Firefox\\/(60\\.0|60\\.([1-9]|\\d{2,})|(6[1-9]|[7-9]\\d|\\d{3,})\\.\\d+)(pre|[ab]\\d+[a-z]*)?)/;\r\n","const DEFAULTS = {\r\n  ELEMENT_SELECT_SIZE: 20,\r\n  GRID_SIZE: 20,\r\n  TASK_SIZE: { width: 120, height: 80 },\r\n  DATA_SIZE: { width: 40, height: 40 },\r\n  GATEWAY_SIZE: { width: 40, height: 40 },\r\n  EVENT_SIZE: { radius: 20 },\r\n  GROUP_SIZE: { width: 300, height: 300 },\r\n  TEXT_SIZE: { width: 120, height: 80 },\r\n  POOL_SIZE: { width: 640, height: 480 },\r\n  HAND_MODE: 'hand_mode',\r\n  CONNECTOR_MODE: 'connector_mode',\r\n  LASSO_MODE: 'lasso_mode',\r\n  DELETE: 'Delete',\r\n  TASK: 'Task',\r\n  SUBPROCESS: 'Subprocess',\r\n  GATEWAY: 'Gateway',\r\n  END_EVENT: 'EndEvent',\r\n  START_EVENT: 'StartEvent',\r\n  INTERMEDIATE_EVENT: 'IntermediateEvent',\r\n  POOL: 'Pool',\r\n  LANE: 'Lane',\r\n  GROUP: 'Group',\r\n  TEXT: 'TextAnnotation',\r\n  DATA_OBJECT: 'DataObject',\r\n  DATA_STORE: 'DataStore',\r\n  DATA_INPUT: 'DataInput',\r\n  DATA_OUTPUT: 'DataOutput',\r\n  WORKFLOW: 'Workflow',\r\n  CONNECTOR: 'Connector',\r\n  CONNECTOR_TYPE_ASSOCIATION: 'association',\r\n  CONNECTOR_TYPE_TRANSITION: 'transition',\r\n  OPEN_SUBPROCESS: 'openSubprocess',\r\n  VERSION: '2020',\r\n  DEFAULT_SUBP_COLOR: '#d6f6ff',\r\n  DEFAULT_TASK_COLOR: '#ffffff',\r\n  START_ID_REMAPPING: 500,\r\n};\r\n\r\nexport default DEFAULTS;\r\n","import Defaults from './default';\r\n\r\nconst TAB_KEYS = window.top.TAB_ID_REQUEST;\r\nconst CONTEXT_INFO = window.top.CONTEXT;\r\nconst URL = `${CONTEXT_INFO}`;\r\nconst type = {\r\n  TASK: 'task',\r\n  GROUP: 'group',\r\n  ROLE: 'roles',\r\n  FORM: 'form',\r\n  BUSCLASS: 'classes',\r\n  EVENT: 'events',\r\n  BINDING: 'bindings',\r\n  STATE: 'status',\r\n  ATTRIBUTE: 'attributes',\r\n  SCHEDULE: 'xmlCalendars',\r\n  SUBPROCESS: 'subProcess',\r\n  SUBPROCESS_TASK: 'xmlProcTasks',\r\n  XML_CLASS_DESC: 'xmlClassesDescription',\r\n  TASK_FORM_DOC: 'getTaskFormDoc',\r\n};\r\nconst find = '&action=findElement';\r\nconst ASSOC_ENT = window.parent.document.getElementById('cmbEntAsoc').value;\r\nconsole.log(window.parent.APIA_DATE_FORMAT);\r\n// const ROOT_URL = 'http://localhost:3000';\r\nconst ROOT_URL = `${URL}/apia.design.BPMNProcessAction.run?`;\r\nconst PROD = {\r\n  DATE_FORMAT: window.parent.APIA_DATE_FORMAT,\r\n  NEW_TASK_URL: `${ROOT_URL}type=${type.TASK}${TAB_KEYS}&action=addElement`,\r\n  TASK_URL: `${ROOT_URL}type=${type.TASK}${TAB_KEYS}${find}&name=`,\r\n  WORKFLOW_EVENTS_URL: `${ROOT_URL}action=${type.EVENT}${TAB_KEYS}&evtScope=P`,\r\n  WORKFLOW_ACTIONS_URL: `${ROOT_URL}action=${type.BUSCLASS}${TAB_KEYS}`,\r\n  WORKFLOW_ATTRS_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}${find}`,\r\n  NEW_WORKFLOW_ATTRS_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}&action=addElement&name=`,\r\n  WORKFLOW_BINDINGS_URL: `${ROOT_URL}action=${type.BINDING}${TAB_KEYS}&clsId=`,\r\n  PARTICIPANTS_URL: `${ROOT_URL}type=${type.GROUP}${TAB_KEYS}${find}&name=`,\r\n  NEW_PARTICIPANT_URL: `${ROOT_URL}type=${type.GROUP}${TAB_KEYS}&action=addElement`,\r\n  TASK_SCHEDULE: `${ROOT_URL}action=${type.SCHEDULE}${TAB_KEYS}`,\r\n  SUBPROCESS_URL: `${ROOT_URL}type=${type.SUBPROCESS}${TAB_KEYS}${find}&name=`,\r\n  SUBPROCESS_TASKS_URL: `${ROOT_URL}action=${type.SUBPROCESS_TASK}${TAB_KEYS}&proc_id=`,\r\n  SUBPROCESS_OPEN_NEW_TAB_URL: `${ROOT_URL}action=update&readOnly=true`,\r\n  ROLES_URL: `${ROOT_URL}type=${type.ROLE}${TAB_KEYS}${find}&name=`,\r\n  NEW_ROLE_URL: `${ROOT_URL}type=${type.ROLE}${TAB_KEYS}&action=addElement`,\r\n  STATES_EVENTS_URL: `${ROOT_URL}action=${type.EVENT}${TAB_KEYS}&evtScope=T`,\r\n  STATES_STATUS_URL: `${ROOT_URL}action=${type.STATE}${TAB_KEYS}&busEntId=${ASSOC_ENT}`,\r\n  TASK_EVENTS_URL: `${ROOT_URL}action=${type.EVENT}${TAB_KEYS}&evtScope=T`,\r\n  TASK_BUSCLAS_EVENTS_URL: `${ROOT_URL}action=${type.BUSCLASS}${TAB_KEYS}`,\r\n  TASK_BINDINGS_URL: `${ROOT_URL}action=${type.BINDING}${TAB_KEYS}&clsId=`,\r\n  TASK_BINDINGS_ATTR_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}${find}&name=`,\r\n  NEW_BINDINGS_ATTR_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}&action=addElement`,\r\n  NEW_ENT_FORM_URL: `${ROOT_URL}type=${type.FORM}${TAB_KEYS}&action=addElement&busEntId=${ASSOC_ENT}`,\r\n  NEW_PROC_FORM_URL: `${ROOT_URL}type=${type.FORM}${TAB_KEYS}&action=addElement`,\r\n  TASK_ENT_FORMS_URL: `${ROOT_URL}type=${type.FORM}${TAB_KEYS}&busEntId=${ASSOC_ENT}${find}&name=`,\r\n  TASK_PROC_FORMS_URL: `${ROOT_URL}type=${type.FORM}${TAB_KEYS}${find}&name=`,\r\n  TASK_INPUT_MSG_REF: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}${find}&name=`,\r\n  NEW_TASK_INPUT_MSG_ATTR: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}&action=addElement&name=`,\r\n  TASK_OUTPUT_WS_URL: `${ROOT_URL}action=${type.BUSCLASS}&wsClasses=true${TAB_KEYS}`,\r\n  TASK_MULTIINSTANCE_URL: `${ROOT_URL}type=${type.ATTRIBUTE}&attType=N${TAB_KEYS}${find}&name=`,\r\n  NEW_NUMERIC_ATTR_URL: `${ROOT_URL}type=${type.ATTRIBUTE}&attType=N${TAB_KEYS}&action=addElement&name=`,\r\n  SUBP_REUSABLE_ENT_URL: `${ROOT_URL}type=${type.ATTRIBUTE}&attType=N${TAB_KEYS}${find}&name=`,\r\n  SUBP_REUSABLE_PROC_FORMS_URL: `${ROOT_URL}type=${type.FORM}${TAB_KEYS}${find}&name=`,\r\n  SUBP_REUSABLE_ENT_FORMS_URL: `${ROOT_URL}type=${type.FORM}${TAB_KEYS}&busEntId=${ASSOC_ENT}${find}&name=`,\r\n  SUBP_MULTIINSTANCE_URL: `${ROOT_URL}type=${type.ATTRIBUTE}&attType=N${TAB_KEYS}${find}&name=`,\r\n  SUBP_NAME_URL: `${ROOT_URL}type=${type.SUBPROCESS}${TAB_KEYS}${find}&name=`,\r\n  NEW_SUBP_URL: `${ROOT_URL}type=${type.SUBPROCESS}${TAB_KEYS}&action=addElement`,\r\n  EVT_MSG_ATTRS_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}&attType=S-N-D${find}&name=`,\r\n  EVT_MSG_WS_URL: `${ROOT_URL}action=${type.BUSCLASS}&wsClasses=true${TAB_KEYS}`,\r\n  EVT_MSG_WS_ATTR_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}${find}&name=`,\r\n  EVT_TIMER_ATTR_URL: `${ROOT_URL}type=${type.ATTRIBUTE}&attType=N-D${TAB_KEYS}${find}&name=`,\r\n  EVT_MSG_NEW_ATTRS_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}&action=addElement&name=`,\r\n  EVT_MSG_WS_BINDINGS_URL: `${ROOT_URL}action=${type.BINDING}${TAB_KEYS}&clsId=`,\r\n  VALIDATE_COND_URL: `${ROOT_URL}action=xmlValCondition${TAB_KEYS}&value=`,\r\n  // get event information for documentation\r\n  CLASSES_DESCRIPTION_URL: `${ROOT_URL}action=${type.XML_CLASS_DESC}${TAB_KEYS}`,\r\n  // get form information for documentation\r\n  TASK_FORM_DOC: `${ROOT_URL}action=${type.TASK_FORM_DOC}${window.parent.TAB_ID_REQUEST}`,\r\n  DEFAULT_ATTRS_URL: `${ROOT_URL}type=${type.ATTRIBUTE}${TAB_KEYS}${find}`,\r\n  LOCALIZATION_URL: `${URL}/page/design/bpmn/svg/i18n/labels.jsp`,\r\n  LOCALIZATION_DEBUG: 'false',\r\n  ENV: 'Production',\r\n};\r\n\r\nconst CONFIG = { ...PROD, ...Defaults, TAB_KEYS };\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable no-restricted-properties */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-tabs */\r\n/* eslint-disable no-multi-assign */\r\n/* eslint-disable func-names */\r\n\r\nimport * as Snap from 'snapsvg-cjs';\r\n\r\n// Polyfill for modern browser\r\nSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement\r\n  || function (elem) {\r\n    return elem.getScreenCTM().inverse().multiply(this.getScreenCTM());\r\n  };\r\n\r\nSnap.plugin((Snap, Element, Paper, global) => {\r\n  function stopEventDefaults(ev) {\r\n    if (ev.stopPropagation) {\r\n      ev.stopPropagation();\r\n    }\r\n    if (ev.preventDefault) {\r\n      ev.preventDefault(event);\r\n    }\r\n    ev.cancelBubble = true;\r\n    ev.returnValue = false;\r\n  }\r\n\r\n  function getMousePoint(ev, el, x, y) {\r\n    const evx = x || ev.clientX || ev.center.x;\r\n    const evy = y || ev.clientY || ev.center.y;\r\n    return el.getInverseScreenPoint(evx, evy);\r\n  }\r\n\r\n  Element.prototype.handleScroll = function (ev) {\r\n    if (!ev) ev = event;\r\n    stopEventDefaults(ev);\r\n    const z = ev.detail < 0 || ev.wheelDelta > 0 ? 1.1 : 0.9; // needs changing to not be incremental\r\n    const pt = this.getMousePoint(ev);\r\n    this.node.viewBox ? this.viewBoxZoom(pt, z) : this.elementZoom(pt, z); // hmm what if its a symbol or something with viewBox do they have transform?\r\n    return this.ftUpdateHandlesIfExist();\r\n  };\r\n\r\n  function getZoomMatrixWithOffset(pt, z) {\r\n    return Snap.matrix().translate(pt.x, pt.y).scale(z).translate(-pt.x, -pt.y);\r\n  }\r\n\r\n  Element.prototype.elementZoom = function (pt, z) {\r\n    return this.storeInitialTransform().transform(\r\n      this.getInitialTransform().toTransformString()\r\n        + getZoomMatrixWithOffset(pt, z).toTransformString(),\r\n    );\r\n  };\r\n\r\n  Element.prototype.zoomCenter = function (z) {\r\n    if (!this.node.viewBox) {\r\n      const pt = this.getBoundingCenter();\r\n      this.elementZoom(pt, z);\r\n    } else {\r\n      console.log('vb center in zoom not done yet');\r\n    }\r\n  };\r\n\r\n  Element.prototype.globalToLocal = function (globalPoint) {\r\n    const globalToLocal = this.node\r\n      .getTransformToElement(this.paper.node)\r\n      .inverse();\r\n    globalToLocal.e = globalToLocal.f = 0;\r\n    return globalPoint.matrixTransform(globalToLocal);\r\n  };\r\n\r\n  Element.prototype.getCursorPoint = function (x, y) {\r\n    const pt = this.paper.node.createSVGPoint();\r\n    pt.x = x;\r\n    pt.y = y;\r\n    return pt.matrixTransform(this.paper.node.getScreenCTM().inverse());\r\n  };\r\n\r\n  Element.prototype.viewBoxZoom = function (pt, z) {\r\n    // may not be an svg paper, do we want to do this ?\r\n    const vbInfo = this.getViewboxInfo(); // split func and make smaller ?\r\n    const matrix = getZoomMatrixWithOffset(pt, z);\r\n    const newx = matrix.x(vbInfo.x, vbInfo.y);\r\n    const newy = matrix.y(vbInfo.x, vbInfo.y);\r\n    const newvb = `${newx} ${newy} ${vbInfo.width * z} ${vbInfo.height * z}`;\r\n    return this.paper.attr({ viewBox: newvb });\r\n  };\r\n\r\n  Element.prototype.getViewBox = function () {\r\n    // not tested properly, maybe varies per browser\r\n    return (\r\n      this.paper.attr('viewBox') || {\r\n        x: this.paper.node.x.baseVal.value,\r\n        y: this.paper.node.y.baseVal.value,\r\n        width: this.paper.node.width.baseVal.value,\r\n        height: this.paper.node.height.baseVal.value,\r\n      }\r\n    );\r\n  };\r\n\r\n  Element.prototype.createPoint = function (x, y) {\r\n    // should I use this.paper or farthestviewport ?\r\n    const pt = this.paper.node.createSVGPoint(); // not used yet, may not work\r\n    pt.x = x;\r\n    pt.y = y;\r\n    return pt;\r\n  };\r\n\r\n  Element.prototype.getInverseScreenPoint = function (x, y) {\r\n    return this.createPoint(x, y).matrixTransform(\r\n      this.node.getScreenCTM().inverse(),\r\n    );\r\n  };\r\n\r\n  Element.prototype.getMousePoint = function (ev, x, y) {\r\n    const evx = x || ev.clientX || ev.center.x;\r\n    const evy = y || ev.clientY || ev.center.y;\r\n    return this.getInverseScreenPoint(evx, evy);\r\n  };\r\n\r\n  Element.prototype.getEventPoint = function (ev) {\r\n    // combine these two somehow, different events depending on where its from\r\n    const pt = this.createPoint(ev.clientX, ev.clientY);\r\n    if (ev.srcEvent) {\r\n      // test on mouse and touch devices\r\n      pt.x = ev.center.x || ev.srcEvent.clientX;\r\n      pt.y = ev.center.y || ev.srcEvent.clientY;\r\n    } else {\r\n      pt.x = ev.clientX || ev.center.x;\r\n      pt.y = ev.clientY || ev.center.y;\r\n    }\r\n    return pt.matrixTransform(this.paper.node.getScreenCTM().inverse());\r\n  };\r\n\r\n  Element.prototype.getBoundingCenter = function (farthestViewPort) {\r\n    // not sure if which viewport makes any diff\r\n    const pt = this.paper.node.createSVGPoint();\r\n    const bb = this.getBBox();\r\n    pt.x = bb.cx;\r\n    pt.y = bb.cy;\r\n    return pt;\r\n  };\r\n\r\n  Element.prototype.storeNewRotate = function (angle) {\r\n    return this.data('newrotate', angle);\r\n  };\r\n\r\n  Element.prototype.createNewViewbox = function () {\r\n    const newPan = this.getNewPan();\r\n    const vbInfo = this.getOriginalViewbox();\r\n    const vbw = vbInfo.width / this.getNewScale();\r\n    const vbh = vbInfo.height / this.getNewScale();\r\n    const vbx = vbInfo.x - (vbw - vbInfo.width) / 2 + +newPan.dx;\r\n    const vby = vbInfo.y - (vbh - vbInfo.height) / 2 + +newPan.dy;\r\n    return {\r\n      x: vbx,\r\n      y: vby,\r\n      width: vbw,\r\n      height: vbh,\r\n    };\r\n  };\r\n\r\n  // http://stackoverflow.com/questions/8417089/svg-viewbox-zoom-in-center-raphael\r\n  Element.prototype.updateTransform = function () {\r\n    if (this.type === 'svg') {\r\n      const vb = this.createNewViewbox();\r\n      this.attr({ viewBox: `${vb.x} ${vb.y} ${vb.width} ${vb.height}` });\r\n    } else {\r\n      const newTransform = `${this.getInitialTransform().toTransformString()}r${this.getNewRotation()}s${this.getNewScale()}${this.getNewPanString()}`;\r\n      this.transform(newTransform).resetNewTransforms();\r\n    }\r\n    return this.ftUpdateHandlesIfExist();\r\n  };\r\n\r\n  Element.prototype.getViewboxInfo = function () {\r\n    const vbRect = this.getViewBox();\r\n    const width = vbRect.width || this.paper.node.width.baseVal.value;\r\n    const height = vbRect.height || this.paper.node.height.baseVal.value;\r\n    const x = vbRect.x || 0;\r\n    const y = vbRect.y || 0;\r\n    return {\r\n      cx: x + width / 2,\r\n      cy: y + height / 2,\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n    };\r\n  };\r\n\r\n  Element.prototype.resetNewTransforms = function () {\r\n    const fields = ['newrotate', 'newscale', 'newtx', 'newty']; // need to add some more, itm ovb etc????\r\n    for (let i = 0; i < fields.length; i++) {\r\n      this.removeData(fields[i]);\r\n    }\r\n  };\r\n\r\n  Element.prototype.addTransform = function (t) {\r\n    return this.transform(this.transform().localMatrix.toTransformString() + t);\r\n  };\r\n\r\n  Element.prototype.storeNewScale = function (scale) {\r\n    return this.data('newscale', scale);\r\n  };\r\n\r\n  Element.prototype.getNewScale = function () {\r\n    return this.data('newscale') || '1';\r\n  };\r\n\r\n  Element.prototype.getCurrentRotation = function () {\r\n    return this.transform().localMatrix.split().rotate;\r\n  };\r\n\r\n  Element.prototype.getStartRotation = function () {\r\n    return this.getInitialTransform().split().rotate || 0; // this.transform().localMatrix.split().rotate;\r\n  };\r\n\r\n  Element.prototype.getCurrentScale = function () {\r\n    return this.transform().localMatrix.split().scalex;\r\n  };\r\n\r\n  Element.prototype.getNewRotation = function () {\r\n    return this.data('newrotate') || 0;\r\n  };\r\n\r\n  Element.prototype.getCurrentTranslate = function () {\r\n    const decomposed = this.transform().localMatrix.split();\r\n    return { dx: decomposed.dx, dy: decomposed.dy };\r\n  };\r\n\r\n  Element.prototype.storeInitialTransform = function () {\r\n    return this.data('ovb', this.paper.getViewboxInfo()) // for viewbox ?\r\n      .data('itm', this.transform().localMatrix);\r\n  };\r\n\r\n  Element.prototype.getInitialTransform = function () {\r\n    return this.data('itm') || Snap.matrix(); // this.transform().localMatrix;\r\n  };\r\n\r\n  Element.prototype.pinchMove = function (ev) {\r\n    stopEventDefaults(ev);\r\n    return this.storeNewRotate(ev.rotation)\r\n      .storeNewScale(ev.scale)\r\n      .updateTransform();\r\n  };\r\n\r\n  Element.prototype.resetStates = function (ev) {\r\n    this.resetNewTransforms();\r\n    return this.storeInitialTransform();\r\n  };\r\n\r\n  Element.prototype.getOriginalViewbox = function () {\r\n    return this.data('ovb');\r\n  };\r\n\r\n  Element.prototype.getNewPan = function () {\r\n    return { dx: this.data('newtx') || 0, dy: this.data('newty') || 0 };\r\n  };\r\n\r\n  Element.prototype.getNewPanString = function (dx, dy) {\r\n    const newPan = this.getNewPan();\r\n    return `t${newPan.dx},${newPan.dy}`;\r\n  };\r\n\r\n  Element.prototype.storeDragStart = function (x, y) {\r\n    this.data('ox', x);\r\n    this.data('oy', y);\r\n    return this;\r\n  };\r\n\r\n  Element.prototype.getDragStart = function () {\r\n    return { x: this.data('ox'), y: this.data('oy') };\r\n  };\r\n\r\n  Element.prototype.storeNewPan = function (dx, dy) {\r\n    this.data('newtx', dx);\r\n    this.data('newty', dy);\r\n    return this;\r\n  };\r\n\r\n  Element.prototype.onPanStart = function (ev) {\r\n    this.resetStates();\r\n    this.storeInitialTransform();\r\n    const tpt = this.getEventPoint(ev);\r\n    return this.storeDragStart(tpt.x, tpt.y);\r\n  };\r\n\r\n  Element.prototype.panMove = function (ev) {\r\n    stopEventDefaults(ev);\r\n    const tpt = this.getEventPoint(ev);\r\n    const opt = this.getDragStart();\r\n    const cursorPoint = this.getEventPoint(ev);\r\n    const pt = this.createPoint();\r\n    pt.x = cursorPoint.x - opt.x;\r\n    pt.y = cursorPoint.y - opt.y;\r\n    const localPoint = this.globalToLocal(pt);\r\n    this.storeNewPan(localPoint.x, localPoint.y);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.panInc = function (x, y) {\r\n    this.storeInitialTransform();\r\n    this.storeNewPan(x, y);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.panBy = function (x, y) {\r\n    this.storeNewPan(x, y);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.rotateInc = function (angle) {\r\n    this.storeInitialTransform();\r\n    this.storeNewRotate(angle);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.rotateBy = function (angle) {\r\n    this.storeNewRotate(angle);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.scaleInc = function (factor) {\r\n    this.storeInitialTransform();\r\n    this.storeNewScale(factor);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.scaleBy = function (factor) {\r\n    this.storeNewScale(factor);\r\n    return this.updateTransform();\r\n  };\r\n\r\n  Element.prototype.animateFunc = function (\r\n    from,\r\n    to,\r\n    func,\r\n    timer,\r\n    easing,\r\n    callback,\r\n  ) {\r\n    this.storeInitialTransform();\r\n    return Snap.animate(from, to, func.bind(this), timer, easing, callback);\r\n  };\r\n\r\n  Element.prototype.addMouseWheelHandler = function () {\r\n    this.node.addEventListener(\r\n      'DOMMouseScroll',\r\n      this.handleScroll.bind(this, null),\r\n    ); // for Firefox\r\n    this.node.addEventListener(\r\n      'mousewheel',\r\n      this.handleScroll.bind(this, null),\r\n    ); // others\r\n    return this;\r\n  };\r\n\r\n  Element.prototype.svgFocus = function () {\r\n    const bb = this.getBBox();\r\n    return this.paper.attr({\r\n      viewBox: `${bb.x} ${bb.y} ${bb.width} ${bb.height}`,\r\n    });\r\n  };\r\n\r\n  Element.prototype.animateSvgFocus = function (duration, easing, callback) {\r\n    const vb = this.getViewboxInfo();\r\n    const bb = this.getBBox(0);\r\n    return this.animateFunc(\r\n      [vb.x, vb.y, vb.width, vb.height],\r\n      [bb.x, bb.y, bb.width, bb.height],\r\n      function (v) {\r\n        this.paper.attr({ viewBox: v.join(' ') });\r\n      },\r\n      duration,\r\n      easing,\r\n      callback,\r\n    );\r\n  };\r\n\r\n  Element.prototype.getFtHandles = function () {\r\n    return this.data('ftHandles');\r\n  };\r\n\r\n  Element.prototype.ftSetHandle = function (el) {\r\n    return this.data('ftHandles', el);\r\n  };\r\n\r\n  Element.prototype.ftGetElement = function () {\r\n    return this.data('ftElement');\r\n  };\r\n\r\n  Element.prototype.ftSetElement = function (el) {\r\n    return this.data('ftElement', el);\r\n  };\r\n\r\n  Element.prototype.ftUpdateHandlesIfExist = function () {\r\n    this.getFtHandles() && this.getFtHandles().ftUpdateHandlePosition();\r\n    return this;\r\n  };\r\n\r\n  function ftDragStart(x, y, ev) {\r\n    // refactor smaller\r\n    const ftElement = this.resetStates().parent().ftGetElement().resetStates();\r\n    const tbb = this.parent().ftGetElement().getTransformedBB(); // hmm parent() feels a bit clunky\r\n    this.storeScaleFactor(\r\n      calcDistance(this.getBBox().cx, this.getBBox().cy, tbb.x, tbb.y),\r\n    );\r\n    const tpt = this.getEventPoint(ev);\r\n    return this.storeDragStart(tpt.x, tpt.y).storeStartAngle(\r\n      this.getStartAngle() + +this.getLastAngle() || 0,\r\n    );\r\n  }\r\n\r\n  function ftDragMove(dx, dy, x, y, ev) {\r\n    // refactor smaller ?\r\n    this.panMove(ev);\r\n    const ftElement = this.parent().ftGetElement(); // hmmm parent stuff??\r\n    const bb = this.getBBox();\r\n    this.parent()\r\n      .ftGetJoins()\r\n      .forEach((el) => {\r\n        el.ftUpdateJoin(bb.cx, bb.cy);\r\n      });\r\n    const tbb = ftElement.getTransformedBB();\r\n    const angle = Snap.angle(tbb.x, tbb.y, this.getBBox().cx, this.getBBox().cy)\r\n      - 180\r\n      - this.getStartAngle();\r\n    this.storeLastAngle(angle);\r\n    const distance = calcDistance(\r\n      tbb.x,\r\n      tbb.y,\r\n      this.getBBox().cx,\r\n      this.getBBox().cy,\r\n    );\r\n    ftElement.storeNewRotate(angle).scaleBy(distance / this.getScaleFactor());\r\n  }\r\n\r\n  Element.prototype.ftCreateHandles = function () {\r\n    const bb = this.getBBox();\r\n    const rotator = this.paper\r\n      .circle(bb.cx + bb.width, bb.cy, 5)\r\n      .attr({ class: 'handle' })\r\n      .drag(ftDragMove, ftDragStart);\r\n    const center = this.paper.circle(bb.cx, bb.cy, 1).attr({ class: 'handle' });\r\n    const joinLine = this.paper\r\n      .line(bb.cx, bb.cy, bb.cx + bb.width, bb.cy)\r\n      .attr({\r\n        fill: 'blue',\r\n        stroke: 'blue',\r\n        class: 'join',\r\n        strokeDasharray: '5,5',\r\n      });\r\n    const handles = this.paper.g(rotator, joinLine).ftSetElement(this);\r\n    this.data('hbb', this.highlightBBox());\r\n    return this.ftSetHandle(handles);\r\n  };\r\n\r\n  // check this on nested transform containers\r\n  Element.prototype.getTransformedBB = function (outerSvgOption) {\r\n    // whi\r\n    const bb = this.getBBox(1);\r\n    const t = this.node.getTransformToElement(\r\n      outerSvgOption ? this.node.farthestViewportElement : this.paper.node,\r\n    ); // .inverse();\r\n    const m = Snap.matrix(t);\r\n    return { x: m.x(bb.cx, bb.cy), y: m.y(bb.cx, bb.cy) };\r\n  };\r\n\r\n  // updated alternative to above,see Phrogz SO post which looks more consistent for nested transforms\r\n  Element.prototype.transformedBoundingBox = function (viewPortOption) {\r\n    const bb = this.node.getBBox();\r\n\r\n    const svg = this.node.ownerSVGElement;\r\n    const m = this.node.getTransformToElement(\r\n      viewPortOption ? this.node.farthestViewportElement : this.node.parentNode,\r\n    );\r\n    const pts = [\r\n      svg.createSVGPoint(),\r\n      svg.createSVGPoint(),\r\n      svg.createSVGPoint(),\r\n      svg.createSVGPoint(),\r\n    ];\r\n    pts[0].x = bb.x;\r\n    pts[0].y = bb.y;\r\n    pts[1].x = bb.x + bb.width;\r\n    pts[1].y = bb.y;\r\n    pts[2].x = bb.x + bb.width;\r\n    pts[2].y = bb.y + bb.height;\r\n    pts[3].x = bb.x;\r\n    pts[3].y = bb.y + bb.height;\r\n\r\n    // Transform each into the space of the parent,\r\n    // and calculate the min/max points from that.\r\n    let xMin = Infinity;\r\n    let xMax = -Infinity;\r\n    let yMin = Infinity;\r\n    let yMax = -Infinity;\r\n    pts.forEach((pt) => {\r\n      pt = pt.matrixTransform(m);\r\n      xMin = Math.min(xMin, pt.x);\r\n      xMax = Math.max(xMax, pt.x);\r\n      yMin = Math.min(yMin, pt.y);\r\n      yMax = Math.max(yMax, pt.y);\r\n    });\r\n\r\n    bb.x = xMin;\r\n    bb.width = xMax - xMin;\r\n    bb.y = yMin;\r\n    bb.height = yMax - yMin;\r\n    return bb;\r\n  };\r\n\r\n  Element.prototype.ftUpdateHandlePosition = function () {\r\n    let dx;\r\n    let dy;\r\n    const tbb = this.ftGetElement().getTransformedBB();\r\n    this.ftGetJoins().forEach((el) => {\r\n      dx = el.attr('x1') - tbb.x;\r\n      dy = el.attr('y1') - tbb.y;\r\n      el.attr({\r\n        x1: tbb.x,\r\n        y1: tbb.y,\r\n        x2: el.attr('x2') - (el.attr('x1') - tbb.x),\r\n        y2: el.attr('y2') - (el.attr('y1') - tbb.y),\r\n      });\r\n    });\r\n    this.ftGetHandles().forEach((el) => {\r\n      el.attr({ cx: el.attr('cx') - dx, cy: el.attr('cy') - dy });\r\n    });\r\n    this.ftGetElement().highlightBBox();\r\n  };\r\n\r\n  Element.prototype.storeScaleFactor = function (scaleFactor) {\r\n    return this.data('scaleFactor', scaleFactor);\r\n  };\r\n\r\n  Element.prototype.getScaleFactor = function (scaleFactor) {\r\n    return this.data('scaleFactor');\r\n  };\r\n\r\n  Element.prototype.storeStartAngle = function (angle) {\r\n    return this.data('startangle', angle);\r\n  };\r\n\r\n  Element.prototype.getStartAngle = function () {\r\n    return this.data('startangle');\r\n  };\r\n\r\n  Element.prototype.storeLastAngle = function (angle) {\r\n    return this.data('lastangle', angle);\r\n  };\r\n\r\n  Element.prototype.getLastAngle = function () {\r\n    return this.data('lastangle');\r\n  };\r\n\r\n  function calcDistance(x1, y1, x2, y2) {\r\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n  }\r\n\r\n  Element.prototype.ftUpdateJoin = function (cx, cy) {\r\n    return this.attr({ x2: cx, y2: cy });\r\n  };\r\n\r\n  Element.prototype.ftGetJoins = function () {\r\n    return this.parent().selectAll('.join');\r\n  };\r\n\r\n  Element.prototype.ftGetHandles = function () {\r\n    return this.parent().selectAll('.handle'); // will it always be parent ????\r\n  };\r\n\r\n  Element.prototype.highlightBBox = function () {\r\n    // need to fix for transformed element, eg by scaleBy animation it doesn't change\r\n    const bb = this.getBBox(0);\r\n    this.data('hbb') && this.data('hbb').remove();\r\n    // var tbb = this.getTransformedBB(1);\t// possibly superceded, may want to replace elsewhere as well\r\n    const hbb = this.transformedBoundingBox(1);\r\n    const bbr = this.paper.rect(hbb.x, hbb.y, hbb.width, hbb.height).attr({\r\n      fill: 'none',\r\n      stroke: 'green',\r\n      strokeWidth: 4,\r\n      opacity: 0.3,\r\n      strokeDasharray: '5,5',\r\n    });\r\n    // var rect = this.paper.rect(tbb.x - bb.width/2, tbb.y - bb.height/2, bb.width, bb.height ).attr({ fill: 'none', stroke: 'black', strokeWidth: 4, opacity: 0.1, strokeDasharray:  '5,5' })\r\n    this.data('hbb', bbr);\r\n    return bbr;\r\n  };\r\n\r\n  // create svg animation SMIL markup (standalone)\r\n\r\n  function setDefaults(attrs, defaults) {\r\n    for (const k in defaults) {\r\n      if (typeof attrs[k] === 'undefined') {\r\n        attrs[k] = defaults[k];\r\n      }\r\n    }\r\n    return attrs;\r\n  }\r\n\r\n  Paper.prototype.markupAnimate = function (attr) {\r\n    return this.el('animate').attr(\r\n      setDefaults(attr, { attributeType: 'CSS', repeatCount: 'indefinite' }),\r\n    );\r\n  };\r\n\r\n  Paper.prototype.markupAnimateTransform = function (attr) {\r\n    return this.el('animateTransform').attr(\r\n      setDefaults(attr, {\r\n        attributeName: 'transform',\r\n        attributeType: 'XML',\r\n        additive: 'replace',\r\n      }),\r\n    );\r\n  };\r\n\r\n  Paper.prototype.markupAnimateColor = function (attr) {\r\n    return this.el('animateColor').attr(\r\n      setDefaults(attr, {\r\n        attributeName: 'fill',\r\n        attributeType: 'XML',\r\n        repeatCount: 'indefinite',\r\n      }),\r\n    );\r\n  };\r\n\r\n  Paper.prototype.markupAnimateMotion = function (attr) {\r\n    return this.el(\r\n      'animateMotion',\r\n      setDefaults(attr, { repeatCount: 'indefinite' }),\r\n    );\r\n  };\r\n\r\n  Paper.prototype.markupMpath = function (attr) {\r\n    return this.el('mpath', setDefaults(attr, {}));\r\n  };\r\n\r\n  Element.prototype.markupAnimateMotion = function (attr, mpath) {\r\n    const pathString = attr.path;\r\n    delete attr.path;\r\n    const el = this.paper.markupAnimateMotion(attr);\r\n    if (pathString) {\r\n      el.node.setAttribute('path', pathString);\r\n    }\r\n    if (mpath) {\r\n      el.append(mpath);\r\n    }\r\n    this.append(el);\r\n    return el;\r\n  };\r\n\r\n  Element.prototype.markupAnimateColor = function (attr) {\r\n    return this.append(this.paper.markupAnimateColor(attr));\r\n  };\r\n\r\n  Element.prototype.markupAnimateTransform = function (attr) {\r\n    return this.append(this.paper.markupAnimateTransform(attr));\r\n  };\r\n\r\n  Element.prototype.markupAnimate = function (attr) {\r\n    return this.append(this.paper.markupAnimate(attr));\r\n  };\r\n\r\n  function nextFrame(frameArray, whichFrame) {\r\n    if (whichFrame >= frameArray.length) {\r\n      return;\r\n    }\r\n\r\n    if (typeof frameArray[whichFrame].startFunc === 'function') {\r\n      frameArray[whichFrame].startFunc.call(frameArray[whichFrame].el);\r\n    }\r\n\r\n    frameArray[whichFrame].el.animate(\r\n      frameArray[whichFrame].animation,\r\n      frameArray[whichFrame].dur,\r\n      frameArray[whichFrame].easing,\r\n      nextFrame.bind(null, frameArray, whichFrame + 1),\r\n    );\r\n  }\r\n\r\n  Element.prototype.animateFrames = function (animFrames) {\r\n    nextFrame(animFrames, 0);\r\n  };\r\n});\r\n","import {} from '../utils/snaptoolkit';\r\nimport EventEmitter from 'eventemitter3';\r\n\r\nexport default class PanZoomManager extends EventEmitter {\r\n  constructor(editor, isPanOn) {\r\n    super();\r\n    this._editor = editor;\r\n    this._paper = editor._paper;\r\n    this._viewport = null;\r\n    this._lastX = 0;\r\n    this._lastY = 0;\r\n    this._MAX_ZOOM_OUT = 0.2;\r\n    this._MAX_ZOOM_IN = 2;\r\n    this._ZOOM_SCALE = 0.1;\r\n    this._PAN_FACTOR_SCALE = 0.1;\r\n    this._PAN_FACTOR_INIT = 1.5;\r\n    this._pan_factor = this._PAN_FACTOR_INIT;\r\n    this._pos = { x: 0, y: 0 };\r\n    this._ZOOM_INIT = 1;\r\n    this._zoom = this._ZOOM_INIT;\r\n\r\n    this._mousemoveHandler = this._mousemoveHandler.bind(this);\r\n    this._mouseupHandler = this._mouseupHandler.bind(this);\r\n\r\n    this._paper.node.addEventListener('wheel', this._onWheel.bind(this));\r\n\r\n    if (isPanOn) {\r\n      this.enablePanning(true);\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this._viewport = this._editor._viewport;\r\n    this.resetViewPort();\r\n  }\r\n\r\n  resetViewPort() {\r\n    this._pos.x = 0;\r\n    this._pos.y = 0;\r\n    this._zoom = this._ZOOM_INIT;\r\n    this._pan_factor = this._PAN_FACTOR_INIT;\r\n    this._viewport.transform('T0,0 S1');\r\n  }\r\n\r\n  enablePanning(isOn) {\r\n    this._paper.removeClass('hand');\r\n    this._paper.unmousedown(this._mousedownHandler);\r\n    if (isOn) {\r\n      this._paper.removeClass('selectionable');\r\n      this._paper.removeClass('connectionable');\r\n      this._paper.addClass('hand');\r\n      this._paper.mousedown(this._mousedownHandler, this);\r\n    } else {\r\n      this._mouseupHandler();\r\n    }\r\n  }\r\n\r\n  _mousedownHandler(event) {\r\n    if (event.target === this._paper.node) {\r\n      this._paper.removeClass('hand');\r\n      this._paper.addClass('draggable');\r\n      this._lastX = event.clientX;\r\n      this._lastY = event.clientY;\r\n      window.addEventListener('mousemove', this._mousemoveHandler, false);\r\n      window.addEventListener('mouseup', this._mouseupHandler, false);\r\n    }\r\n  }\r\n\r\n  _mousemoveHandler(event) {\r\n    this._paper.removeClass('draggable');\r\n    this._paper.addClass('dragging');\r\n    event.preventDefault();\r\n    this._pan(event.clientX - this._lastX, event.clientY - this._lastY);\r\n    this._lastX = event.clientX;\r\n    this._lastY = event.clientY;\r\n  }\r\n\r\n  _pan(dx, dy) {\r\n    this._pos.x += dx * this._pan_factor;\r\n    this._pos.y += dy * this._pan_factor;\r\n    this._viewport.transform(`T${this._pos.x} ${this._pos.y} S${this._zoom}`);\r\n    this.emit('panned');\r\n  }\r\n\r\n  _mouseupHandler() {\r\n    this._paper.removeClass('dragging');\r\n    this._paper.removeClass('draggable');\r\n    this._paper.addClass('hand');\r\n    window.removeEventListener('mousemove', this._mousemoveHandler);\r\n    window.removeEventListener('mouseup', this._mouseupHandler);\r\n  }\r\n\r\n  zoomIn() {\r\n    if (this._zoom < this._MAX_ZOOM_IN) {\r\n      this._zoom += this._ZOOM_SCALE;\r\n      this._pan_factor += this._PAN_FACTOR_SCALE;\r\n      this._zoomIt();\r\n    }\r\n  }\r\n\r\n  zoomOut() {\r\n    if (this._zoom > this._MAX_ZOOM_OUT) {\r\n      this._zoom -= this._ZOOM_SCALE;\r\n      this._pan_factor -= this._PAN_FACTOR_SCALE;\r\n      this._zoomIt();\r\n    }\r\n  }\r\n\r\n  _zoomIt() {\r\n    this._viewport.transform(`T${this._pos.x} ${this._pos.y} S${this._zoom}`);\r\n    this.emit('zoomed');\r\n  }\r\n\r\n  _onWheel(evt) {\r\n    evt.preventDefault();\r\n    if (this._editor._keyManager._isCtrlPressed) {\r\n      if (evt.deltaY < 0) {\r\n        this.zoomIn();\r\n      } else {\r\n        this.zoomOut();\r\n      }\r\n    } else {\r\n      this._pan(evt.deltaX * -1, evt.deltaY * -1);\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-mixed-operators */\r\nimport Snap from 'snapsvg-cjs';\r\nimport deburr from 'lodash/deburr';\r\nimport Config from 'config';\r\n\r\nexport function intersectRect(r1, r2) {\r\n  const obj1 = r1.getBoundingClientRect();\r\n  const obj2 = r2.getBoundingClientRect();\r\n  return !(\r\n    obj2.left > obj1.right\r\n    || obj2.right < obj1.left\r\n    || obj2.top > obj1.bottom\r\n    || obj2.bottom < obj1.top\r\n  );\r\n}\r\n\r\nexport function getPool(elements) {\r\n  let pool;\r\n  for (let i = 0, len = elements.length; i < len; i++) {\r\n    if (elements[i].elementType === 'Pool') {\r\n      pool = elements[i];\r\n    }\r\n  }\r\n  return pool;\r\n}\r\n\r\nexport function getAllLanes(elements) {\r\n  const lanesArray = [];\r\n  for (let i = 0, len = elements.length; i < len; i++) {\r\n    const el = elements[i];\r\n    if (el.elementType === 'Lane') {\r\n      lanesArray.push(el);\r\n    }\r\n  }\r\n  return lanesArray;\r\n}\r\n\r\nexport function getPreviousLaneByYPos(array, y) {\r\n  const len = array.length;\r\n  for (let i = 0; i < len; i++) {\r\n    if (array[i].y > y) {\r\n      return array[i - 1] || array[0];\r\n    }\r\n  }\r\n  return array[len - 1];\r\n}\r\n\r\nexport function getNextLaneByYPos(array, y) {\r\n  const len = array.length;\r\n  for (let i = 0; i < len; i++) {\r\n    if (array[i].y > y) {\r\n      return array[i] || array[len - 1];\r\n    }\r\n  }\r\n  return array[len - 1];\r\n}\r\n\r\nexport function getSelected(elArray) {\r\n  const selectedArray = [];\r\n  let el;\r\n  for (let i = 0, len = elArray.length; i < len; i++) {\r\n    el = elArray[i];\r\n    if (el.selected) {\r\n      selectedArray.push(el);\r\n    }\r\n  }\r\n  return selectedArray;\r\n}\r\n\r\nexport function numberOfSelectedElements(elArray) {\r\n  return getSelected(elArray).length;\r\n}\r\n\r\nexport function getMinX(array) {\r\n  const minXElement = array.reduce((prev, current) => {\r\n    return prev.x < current.x ? prev : current;\r\n  });\r\n  return minXElement;\r\n}\r\n\r\nexport function getMaxX(array) {\r\n  const maxXElement = array.reduce((prev, current) => {\r\n    return prev.selectionBox.node.getBoundingClientRect().right\r\n      > current.selectionBox.node.getBoundingClientRect().right\r\n      ? prev\r\n      : current;\r\n  });\r\n  return maxXElement;\r\n}\r\n\r\nexport function getMinY(array) {\r\n  const minYElement = array.reduce((prev, current) => {\r\n    return prev.y < current.y ? prev : current;\r\n  });\r\n  return minYElement;\r\n}\r\n\r\nexport function getMaxY(array) {\r\n  const maxYElement = array.reduce((prev, current) => {\r\n    return prev.selectionBox.node.getBoundingClientRect().bottom\r\n      > current.selectionBox.node.getBoundingClientRect().bottom\r\n      ? prev\r\n      : current;\r\n  });\r\n  return maxYElement;\r\n}\r\n\r\nexport function getClosestMultiple(value, roundTo) {\r\n  const r = Math.floor(value / roundTo) * roundTo;\r\n  const f = Math.ceil(value / roundTo) * roundTo;\r\n  const numbers = [r, f];\r\n  const closest = numbers.reduce((prev, curr) => {\r\n    return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\r\n  });\r\n  return closest;\r\n}\r\n\r\nexport function getElementsOfType(type, elements) {\r\n  // returns array w/ all elements of certain type\r\n  const elArray = [];\r\n  for (let i = 0, len = elements.length; i < len; i++) {\r\n    if (elements[i].elementType === type) {\r\n      elArray.push(elements[i]);\r\n    }\r\n  }\r\n  return elArray;\r\n}\r\n\r\nexport function getProcessElementByID(id, elements) {\r\n  for (let i = 0, len = elements.length; i < len; i++) {\r\n    if (parseInt(elements[i].id, 10) === parseInt(id, 10)) {\r\n      return elements[i];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getProcessElementByGraphicID(id, elements) {\r\n  const cleanID = id.substr(id.indexOf('_') + 1);\r\n  return getProcessElementByID(cleanID, elements);\r\n}\r\n\r\nexport function getElementsByConnectedType(element, type, elements) {\r\n  const elArray = [];\r\n  elements.forEach((connector) => {\r\n    // console.log(connector);\r\n    if (\r\n      connector.elementType === Config.CONNECTOR\r\n      && parseInt(connector.properties.from, 10) === parseInt(element.id, 10)\r\n    ) {\r\n      const elTo = getProcessElementByID(connector.properties.to, elements);\r\n      if (elTo.elementType === type) {\r\n        elArray.push(elTo);\r\n      }\r\n    }\r\n    if (\r\n      connector.elementType === Config.CONNECTOR\r\n      && parseInt(connector.properties.to, 10) === parseInt(element.id, 10)\r\n    ) {\r\n      const elFrom = getProcessElementByID(connector.properties.from, elements);\r\n      if (elFrom.elementType === type) {\r\n        elArray.push(elFrom);\r\n      }\r\n    }\r\n  });\r\n  return elArray;\r\n}\r\n\r\nexport function getSquareIntersection(dx, dy, cx, cy, w, h) {\r\n  // returns array of points for line\r\n  if (Math.abs(dy / dx) < h / w) {\r\n    // vertical edge\r\n    return [Math.round(cx + (dx > 0 ? w : -w)), Math.round(cy + (dy * w) / Math.abs(dx))];\r\n  }\r\n  // horizontal edge\r\n  return [Math.round(cx + (dx * h) / Math.abs(dy)), Math.round(cy + (dy > 0 ? h : -h))];\r\n}\r\n\r\nexport function getSVGMapBBox(elArray) {\r\n  const map = Snap.set();\r\n  // make set to get full map bounds\r\n  for (let i = 0, len = elArray.length; i < len; i++) {\r\n    map.push(elArray[i].graphic);\r\n  }\r\n  const mapBounds = map.getBBox();\r\n  return mapBounds;\r\n}\r\n\r\nexport function getViewPortBBox(viewport) {\r\n  const viewportElements = viewport.children();\r\n  const elList = Snap.set();\r\n  for (let i = 0, len = viewportElements.length; i < len; i++) {\r\n    const el = viewportElements[i];\r\n    if (!el.hasClass('grid_bg')) {\r\n      elList.push(el);\r\n    }\r\n  }\r\n  return elList.getBBox();\r\n}\r\n\r\nexport function getName(gotName) {\r\n  let name;\r\n  if (gotName) {\r\n    name = deburr(gotName).replace(/\\s/g, '_');\r\n  } else {\r\n    name = 'Untitled';\r\n  }\r\n  return name;\r\n}\r\n\r\nexport function downloadPDF(data, filename) {\r\n  let binary = '';\r\n  const bytes = new Uint8Array(data);\r\n  const len = bytes.byteLength;\r\n  for (let i = 0; i < len; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  const link = document.createElement('a');\r\n  link.href = `data:text/plain;base64,${window.btoa(binary)}`;\r\n  link.download = filename;\r\n  link.click();\r\n}\r\n/**\r\n * return the array conectors (transitions) from element\r\n */\r\nexport function getTransitionsByElement(element, elements) {\r\n  return elements.filter((connector) => {\r\n    return (\r\n      connector.elementType === Config.CONNECTOR\r\n      && connector.type === Config.CONNECTOR_TYPE_TRANSITION\r\n      && connector.from === element.id\r\n    );\r\n  });\r\n}\r\n\r\nexport function getConnectorsByFromTo(element, elements, fromTo) {\r\n  const connectors = [];\r\n  elements.forEach((connector) => {\r\n    if (connector.elementType === Config.CONNECTOR && connector[fromTo] === element.id) {\r\n      connectors.push(connector);\r\n    }\r\n  });\r\n  return connectors;\r\n}\r\n\r\n/**\r\n * return next element in the process flow starting from element selected\r\n */\r\nexport function getNextElement(element, elements) {\r\n  const transitions = getTransitionsByElement(element, elements);\r\n  if (transitions.length > 0) {\r\n    const [firstTransition] = transitions;\r\n    return getProcessElementByID(firstTransition.to, elements);\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getLastYElBounds(element, elements) {\r\n  // returns bounds for the last element in both x and y coords\r\n  const transitions = getTransitionsByElement(element, elements);\r\n  const ctxElementBounds = element.selectionBox.node.getBoundingClientRect();\r\n  let maxYBoundElement = { y: 0 };\r\n  transitions.forEach((transition) => {\r\n    const el = getProcessElementByID(transition.to, elements);\r\n    const elBounds = el.selectionBox.node.getBoundingClientRect();\r\n    // if element Y bigger and x too\r\n    if (elBounds.y > maxYBoundElement.y && elBounds.left > ctxElementBounds.right) {\r\n      maxYBoundElement = elBounds;\r\n    }\r\n  });\r\n  if (maxYBoundElement.y === 0) {\r\n    return null;\r\n  }\r\n  return maxYBoundElement;\r\n}\r\n\r\nexport function convertUnit(unit, value, type = 'MS_TO_UNIT') {\r\n  let factor = 0;\r\n  switch (unit) {\r\n    case 'MINUTES':\r\n      factor = 60000;\r\n      break;\r\n    case 'HOURS':\r\n      factor = 3600000;\r\n      break;\r\n    case 'DAYS':\r\n      factor = 86400000;\r\n      break;\r\n    case 'WEEKS':\r\n      factor = 604800000;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const result = type === 'MS_TO_UNIT' ? value / factor : value * factor;\r\n  return parseInt(result, 10);\r\n}\r\n\r\nexport function visibilityComponent(wrapper, value) {\r\n  wrapper.setAttribute('data-visible', value);\r\n}\r\n\r\nexport function mapInOutParameters(params) {\r\n  const inout = {\r\n    input: 'IN',\r\n    output: 'OUT',\r\n    'input-output': 'IN-OUT',\r\n  };\r\n  return params.map((param) => {\r\n    return { ...param, inout: inout[param.inout] };\r\n  });\r\n}\r\n\r\nexport function indexByProperty(collection = [], property) {\r\n  return collection.reduce(\r\n    (acc, el) => ({\r\n      ...acc,\r\n      [el[property]]: el,\r\n    }),\r\n    {},\r\n  );\r\n}\r\n\r\nexport default {\r\n  intersectRect,\r\n  getPool,\r\n  getAllLanes,\r\n  getSelected,\r\n  getPreviousLaneByYPos,\r\n  getNextLaneByYPos,\r\n  getMinX,\r\n  getMaxX,\r\n  getMinY,\r\n  getMaxY,\r\n  numberOfSelectedElements,\r\n  getClosestMultiple,\r\n  getElementsOfType,\r\n  getElementsByConnectedType,\r\n  getProcessElementByID,\r\n  getProcessElementByGraphicID,\r\n  getSVGMapBBox,\r\n  getName,\r\n  downloadPDF,\r\n  getViewPortBBox,\r\n  convertMilliseconsToUnit: convertUnit,\r\n  getNextElement,\r\n  getTransitionsByElement,\r\n  getLastYElBounds,\r\n  visibilityComponent,\r\n  mapInOutParameters,\r\n  getConnectorsByFromTo,\r\n};\r\n","import History from 'immutable-undo';\r\nimport Config from 'config';\r\nimport EventEmitter from 'eventemitter3';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport Diff from 'diff-arrays-of-objects';\r\nimport { getProcessElementByID } from '../utils/util';\r\n\r\nexport default class HistoryManager extends EventEmitter {\r\n  constructor(editor) {\r\n    super();\r\n    this._editor = editor;\r\n    this._history = null;\r\n  }\r\n\r\n  init() {\r\n    this._history = History.create({\r\n      maxUndos: 100,\r\n    });\r\n    this._checkUndoSize();\r\n    this._checkRedoSize();\r\n  }\r\n\r\n  save() {\r\n    this._history = this._history.push(this._getElementsData());\r\n    // console.log('SAVE::::::', this._history);\r\n    this._checkUndoSize();\r\n    this._checkRedoSize();\r\n  }\r\n\r\n  undo() {\r\n    if (this._history.canUndo) {\r\n      const data = this._history.previous;\r\n      this._history = this._history.undo(this._getElementsData());\r\n      this._updateElementsFromHistory(data.elements);\r\n    }\r\n    this._checkUndoSize();\r\n    this._checkRedoSize();\r\n  }\r\n\r\n  redo() {\r\n    this._history.redo(this._getElementsData());\r\n    if (this._history.canRedo) {\r\n      const data = this._history.next;\r\n      this._history = this._history.redo(this._getElementsData());\r\n      this._updateElementsFromHistory(data.elements);\r\n    }\r\n    this._checkUndoSize();\r\n    this._checkRedoSize();\r\n  }\r\n\r\n  _checkUndoSize() {\r\n    // console.log('UNDO SIZE:', this._history.undos.size);\r\n    if (this._history.undos.size === 0) {\r\n      this.emit('undo', false);\r\n    } else {\r\n      this.emit('undo', true);\r\n    }\r\n  }\r\n\r\n  _checkRedoSize() {\r\n    // console.log('REDO SIZE:', this._history.redos.size);\r\n    if (this._history.redos.size === 0) {\r\n      this.emit('redo', false);\r\n    } else {\r\n      this.emit('redo', true);\r\n    }\r\n  }\r\n\r\n  _getElementsData() {\r\n    const elements = [];\r\n    this._editor.elements.forEach((element) => {\r\n      elements.push({\r\n        id: element.id,\r\n        type: element.elementType,\r\n        props: cloneDeep(element.properties),\r\n        x: element.x,\r\n        y: element.y,\r\n      });\r\n    });\r\n    return { elements };\r\n  }\r\n\r\n  _updateElementsFromHistory(elements) {\r\n    const diffs = Diff(elements, this._getElementsData().elements, 'id', {\r\n      updatedValues: Diff.updatedValues.first,\r\n    });\r\n\r\n    // console.log(diffs);\r\n\r\n    // create element\r\n    if (diffs.removed) {\r\n      const connectorsArray = [];\r\n      diffs.removed.forEach((element) => {\r\n        if (element.type !== Config.CONNECTOR) {\r\n          this._createEl(element);\r\n        } else {\r\n          connectorsArray.push(element);\r\n        }\r\n      });\r\n      // create connectors after all elements created\r\n      connectorsArray.forEach((connector) => {\r\n        this._createEl(connector);\r\n      });\r\n    }\r\n\r\n    // update element [delete, create]\r\n    if (diffs.updated) {\r\n      diffs.updated.forEach((element) => {\r\n        const elToDel = this._editor._viewport.select(\r\n          `#${element.type}_${element.id}`,\r\n        );\r\n        const elToDelCtxMenu = this._editor._paper.select(`#ctx_${element.id}`);\r\n        if (element.type !== Config.WORKFLOW) {\r\n          elToDel.remove();\r\n          elToDelCtxMenu.remove();\r\n        }\r\n        this._removeFromElementsArray(element);\r\n        const newEl = this._createEl(element);\r\n        // update new element reference in connectors\r\n        if (element.type !== Config.CONNECTOR) {\r\n          this._editor._connections.forEach((connector) => {\r\n            if (connector._toEl.id === newEl.id) {\r\n              connector._toEl = newEl;\r\n            }\r\n            if (connector._fromEl.id === newEl.id) {\r\n              connector._fromEl = newEl;\r\n            }\r\n          });\r\n          // update connectors positions\r\n          this._editor.updateElementConnectors(newEl);\r\n        }\r\n      });\r\n    }\r\n\r\n    // remove element\r\n    if (diffs.added) {\r\n      diffs.added.forEach((element) => {\r\n        const elToDel = this._editor._viewport.select(\r\n          `#${element.type}_${element.id}`,\r\n        );\r\n        elToDel.remove();\r\n        const elToDelCtxMenu = this._editor._paper.select(`#ctx_${element.id}`);\r\n        elToDelCtxMenu.remove();\r\n        this._removeFromElementsArray(element);\r\n      });\r\n    }\r\n    this.emit('history_done');\r\n  }\r\n\r\n  _createEl(element) {\r\n    return this._editor.createElement(\r\n      element.type,\r\n      element.x,\r\n      element.y,\r\n      element.props,\r\n      false,\r\n    );\r\n  }\r\n\r\n  _removeFromElementsArray(element) {\r\n    const el = getProcessElementByID(element.id, this._editor.elements);\r\n    // remove element form editors elements array\r\n    for (let i = 0, len = this._editor.elements.length; i < len; i++) {\r\n      if (this._editor.elements[i] === el) {\r\n        this._editor.elements.splice(i, 1);\r\n      }\r\n    }\r\n    // if connector also delete from connectors array\r\n    if (el.elementType === Config.CONNECTOR) {\r\n      for (let i = 0, len = this._editor._connections.length; i < len; i++) {\r\n        if (this._editor._connections[i] === el) {\r\n          this._editor._connections.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport { intersectRect, getAllLanes } from '../utils/util';\r\n\r\nexport default class PoolManager {\r\n  constructor(editor) {\r\n    this._editor = editor;\r\n    this._poolElements = [];\r\n    this._laneElements = [];\r\n    this._LANE_MIN_HEIGHT = 160;\r\n    this._isFirstMove = true;\r\n  }\r\n\r\n  moveStart(pool) {\r\n    if (pool.elementType === Config.POOL) {\r\n      this._poolElements = [];\r\n      const len = this._editor.elements.length;\r\n      for (let i = 0; i < len; i++) {\r\n        const el = this._editor.elements[i];\r\n        const elGraphic = el.selectionBox;\r\n        if (el.elementType !== Config.POOL) {\r\n          if (elGraphic) {\r\n            const isContained = intersectRect(\r\n              pool.selectionBox.node,\r\n              elGraphic.node,\r\n            );\r\n            if (isContained) {\r\n              this._poolElements.push(el);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  moving(pool) {\r\n    if (pool.elementType === Config.POOL) {\r\n      let el;\r\n      for (let i = 0, len = this._poolElements.length; i < len; i++) {\r\n        el = this._poolElements[i];\r\n        if (el.elementType !== Config.CONNECTOR) {\r\n          el.moveElement(\r\n            Math.round(pool.mx + el.x),\r\n            Math.round(pool.my + el.y),\r\n          );\r\n        }\r\n      }\r\n      if (this._isFirstMove) {\r\n        this._editor.toggleElementConnectorsVisibility(false);\r\n        this._isFirstMove = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  moveEnd(pool) {\r\n    if (pool.elementType === Config.POOL) {\r\n      let el;\r\n      for (let i = 0, len = this._poolElements.length; i < len; i++) {\r\n        el = this._poolElements[i];\r\n        if (el.elementType !== Config.CONNECTOR) {\r\n          el.moveElementEnd(\r\n            Math.round(pool.mx + el.x),\r\n            Math.round(pool.my + el.y),\r\n          );\r\n          // update connections\r\n          this._editor.updateElementConnectors(\r\n            el,\r\n            { x: pool.mx, y: pool.my },\r\n            false,\r\n            true,\r\n          );\r\n\r\n          // hack to fix\r\n          this._editor.updateElementConnectors(el, { x: 0, y: 0 }, false, true);\r\n        }\r\n\r\n        if (el.elementType === Config.CONNECTOR) {\r\n          // update points segments for undo\r\n          el.resetMovingPointSegment();\r\n        }\r\n      }\r\n      this._editor.toggleElementConnectorsVisibility(true);\r\n      this._isFirstMove = true;\r\n    }\r\n  }\r\n\r\n  noMoveEnd(pool) {\r\n    if (pool.elementType === Config.POOL) {\r\n      this._editor.toggleElementConnectorsVisibility(true);\r\n      this._isFirstMove = true;\r\n    }\r\n  }\r\n\r\n  onElementDelete() {\r\n    let i = this._editor.elements.length;\r\n    while (i--) {\r\n      if (this._editor.elements[i].elementType === Config.LANE) {\r\n        this._editor.elements[i].delete();\r\n        this._editor.elements.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  onResizeStart() {\r\n    this._laneElements = getAllLanes(this._editor.elements);\r\n  }\r\n\r\n  onResize(pool, width, height) {\r\n    let totalHeightLanes = 0;\r\n    let lastLaneHeight = height;\r\n    let laneNameBoxWidth;\r\n    const len = this._laneElements.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const lane = this._laneElements[i];\r\n      laneNameBoxWidth = lane._nameBoxWidth;\r\n      lane.resizeWidth(width - laneNameBoxWidth);\r\n      if (i < len - 1) {\r\n        lastLaneHeight -= lane.height;\r\n      }\r\n      totalHeightLanes += lane.height;\r\n    }\r\n    // stop resizing if last lane smaller than this._LANE_MIN_HEIGHT\r\n    if (len >= 1) {\r\n      if (lastLaneHeight >= this._LANE_MIN_HEIGHT) {\r\n        pool.minHeight = 0;\r\n        this._laneElements[len - 1].resizeHeight(lastLaneHeight);\r\n        pool.resize(width, height);\r\n      } else {\r\n        pool.minHeight = height;\r\n        pool.resize(\r\n          this._laneElements[0].width + laneNameBoxWidth,\r\n          totalHeightLanes,\r\n        );\r\n      }\r\n    } else {\r\n      // no lanes just the pool\r\n      pool.minHeight = 0;\r\n      pool.resize(width, height);\r\n    }\r\n  }\r\n\r\n  onResizeEnd() {\r\n    for (let i = 0; i < this._laneElements.length; i++) {\r\n      const lane = this._laneElements[i];\r\n      // props for history\r\n      lane.properties.size = {\r\n        width: lane.width,\r\n        height: lane.height,\r\n      };\r\n    }\r\n    this._laneElements = [];\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport {\r\n  getPool,\r\n  getAllLanes,\r\n  getPreviousLaneByYPos,\r\n  getNextLaneByYPos,\r\n} from '../utils/util';\r\n\r\nexport default class LaneManager {\r\n  constructor(editor) {\r\n    this._editor = editor;\r\n    this._laneElements = [];\r\n    this._pool = null;\r\n    this._nextLane = null;\r\n    this._DEFAULT_LANE_HEIGHT = 160;\r\n    this._LANE_MIN_HEIGHT = 160;\r\n    this._LANE_NAME_BAR_WIDTH = 30;\r\n  }\r\n\r\n  createLane(pool) {\r\n    // id is correct otherwise pool and first lane share id, need diff id for undo\r\n    const id = ++this._editor.idIndex;\r\n    const totalLanes = getAllLanes(this._editor.elements).length;\r\n    let poolHeight = pool.height;\r\n    let newElement = null;\r\n    if (totalLanes > 0) {\r\n      newElement = this._editor.createElement(\r\n        Config.LANE,\r\n        pool.x,\r\n        pool.y + poolHeight,\r\n        {\r\n          id,\r\n          size: {\r\n            width: pool.width - this._LANE_NAME_BAR_WIDTH,\r\n            height: this._DEFAULT_LANE_HEIGHT,\r\n          },\r\n        },\r\n        false,\r\n      );\r\n      // set pool height + new lane\r\n      poolHeight += this._DEFAULT_LANE_HEIGHT;\r\n      pool.resize(pool.width, poolHeight);\r\n    } else {\r\n      // create lane when no other lanes present\r\n      newElement = this._editor.createElement(\r\n        Config.LANE,\r\n        pool.x,\r\n        pool.y,\r\n        {\r\n          id,\r\n          size: {\r\n            width: pool.width - this._LANE_NAME_BAR_WIDTH,\r\n            height: pool.height,\r\n          },\r\n        },\r\n        false,\r\n      );\r\n    }\r\n    return newElement;\r\n  }\r\n\r\n  onLaneDeleted(deletedLane) {\r\n    const allLanes = getAllLanes(this._editor.elements);\r\n    const previousLane = getPreviousLaneByYPos(allLanes, deletedLane.y);\r\n    // resize previous lane in pool\r\n    if (previousLane) {\r\n      previousLane.resizeHeight(previousLane.height + deletedLane.height);\r\n      // for history\r\n      previousLane.properties.size = {\r\n        width: previousLane.width,\r\n        height: previousLane.height,\r\n      };\r\n    }\r\n    // reposition lanes in pool again using pool's y.\r\n    const pool = getPool(this._editor.elements);\r\n    for (let i = 0; i < allLanes.length; i++) {\r\n      if (i > 0) {\r\n        allLanes[i].y = allLanes[i - 1].y + allLanes[i - 1].height;\r\n      } else {\r\n        allLanes[i].y = pool.y;\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeStart(lane) {\r\n    this._laneElements = getAllLanes(this._editor.elements);\r\n    this._pool = getPool(this._editor.elements);\r\n    this._nextLane = getNextLaneByYPos(this._laneElements, lane.y);\r\n  }\r\n\r\n  resize(lane, height) {\r\n    lane.resizeHeight(height);\r\n    let lanesHeight = 0;\r\n    let otherLanesHeight = 0;\r\n    const len = this._laneElements.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const el = this._laneElements[i];\r\n      const h = el.height;\r\n      lanesHeight += h;\r\n      if (el !== lane && el !== this._nextLane) {\r\n        otherLanesHeight += h;\r\n      }\r\n    }\r\n    const nextLaneHeight = this._nextLane.height + (this._pool.height - lanesHeight);\r\n    if (len === 1 || lane === this._laneElements[len - 1]) {\r\n      // one lane and last lane\r\n      lane.maxHeight = Number.POSITIVE_INFINITY;\r\n      this._pool.resize(lane.width + lane._nameBoxWidth, lanesHeight);\r\n    } else if (len > 1) {\r\n      // more than one except last and first ones\r\n      lane.maxHeight = this._pool.height - otherLanesHeight - this._LANE_MIN_HEIGHT;\r\n      this._nextLane.y = lane.y + lane.height;\r\n      this._nextLane.resizeHeight(nextLaneHeight);\r\n    }\r\n  }\r\n\r\n  resizeEnd() {\r\n    // set props for history\r\n    const len = this._laneElements.length;\r\n    for (let i = 0; i < len; i++) {\r\n      this._laneElements[i].properties.size = {\r\n        height: this._laneElements[i].height,\r\n        width: this._laneElements[i].width,\r\n      };\r\n    }\r\n    this._laneElements = [];\r\n    this._pool = null;\r\n    this._nextLane = null;\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport {\r\n  getMinX,\r\n  getMaxX,\r\n  getMinY,\r\n  getMaxY,\r\n  getProcessElementByID,\r\n  getClosestMultiple,\r\n} from '../utils/util';\r\n\r\nexport default class AlignManager {\r\n  constructor(editor, history) {\r\n    this._editor = editor;\r\n    this._historyManager = history;\r\n  }\r\n\r\n  alignLeft() {\r\n    const selectedArray = this._getSelected(this._editor.elements);\r\n    if (selectedArray.length > 1) {\r\n      const minXElement = getMinX(selectedArray);\r\n      const isAligned = [];\r\n      const isValid = [];\r\n      for (let i = 0, len = selectedArray.length - 1; i < len; i++) {\r\n        const el = selectedArray[i];\r\n        if (\r\n          el.selectionBox.node.getBoundingClientRect().x\r\n          === selectedArray[i + 1].selectionBox.node.getBoundingClientRect().x\r\n        ) {\r\n          isAligned[i] = true;\r\n        } else {\r\n          isAligned[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isAligned.includes(false) && !isValid.includes(false)) {\r\n        this._historyManager.save();\r\n        for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n          const el = selectedArray[i];\r\n          // update selected elements position\r\n          const oldX = el.x;\r\n          el.x = minXElement.x;\r\n          this._editor.updateElementConnectors(el);\r\n          // update boundary events position\r\n          this._updateHorizontalBoundaryEventsPos(el, oldX);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  alignRight() {\r\n    const selectedArray = this._getSelected(this._editor.elements);\r\n    if (selectedArray.length > 1) {\r\n      const maxXElement = getMaxX(selectedArray);\r\n      const isAligned = [];\r\n      const isValid = [];\r\n      for (let i = 0, len = selectedArray.length - 1; i < len; i++) {\r\n        const el = selectedArray[i];\r\n        if (\r\n          el.selectionBox.node.getBoundingClientRect().right\r\n          === selectedArray[i + 1].selectionBox.node.getBoundingClientRect().right\r\n        ) {\r\n          isAligned[i] = true;\r\n        } else {\r\n          isAligned[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isAligned.includes(false) && !isValid.includes(false)) {\r\n        this._historyManager.save();\r\n        for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n          const el = selectedArray[i];\r\n          if (maxXElement !== el) {\r\n            // update elements position\r\n            const oldX = el.x;\r\n            el.x = maxXElement.x + (maxXElement.width - el.width);\r\n            this._editor.updateElementConnectors(el);\r\n            // update boundary events position\r\n            this._updateHorizontalBoundaryEventsPos(el, oldX);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  alignTop() {\r\n    const selectedArray = this._getSelected(this._editor.elements);\r\n    if (selectedArray.length > 1) {\r\n      const minYElement = getMinY(selectedArray);\r\n      const isAligned = [];\r\n      const isValid = [];\r\n      for (let i = 0, len = selectedArray.length - 1; i < len; i++) {\r\n        const el = selectedArray[i];\r\n        if (\r\n          el.selectionBox.node.getBoundingClientRect().top\r\n          === selectedArray[i + 1].selectionBox.node.getBoundingClientRect().top\r\n        ) {\r\n          isAligned[i] = true;\r\n        } else {\r\n          isAligned[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isAligned.includes(false) && !isValid.includes(false)) {\r\n        this._historyManager.save();\r\n        for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n          const el = selectedArray[i];\r\n          // update elements position position\r\n          const oldY = el.y;\r\n          el.y = minYElement.y;\r\n          this._editor.updateElementConnectors(el);\r\n          // update boundary events position\r\n          this._updateVerticalBoundaryEventsPos(el, oldY);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  alignBottom() {\r\n    const selectedArray = this._getSelected(this._editor.elements);\r\n    if (selectedArray.length > 1) {\r\n      const maxYElement = getMaxY(selectedArray);\r\n      const isValid = [];\r\n      const isAligned = [];\r\n      for (let i = 0, len = selectedArray.length - 1; i < len; i++) {\r\n        const el = selectedArray[i];\r\n        if (\r\n          el.selectionBox.node.getBoundingClientRect().bottom\r\n          === selectedArray[i + 1].selectionBox.node.getBoundingClientRect().bottom\r\n        ) {\r\n          isAligned[i] = true;\r\n        } else {\r\n          isAligned[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isAligned.includes(false) && !isValid.includes(false)) {\r\n        // if min/max different save history,\r\n        // this to avoid multiple align histories in same position\r\n        this._historyManager.save();\r\n        for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n          const el = selectedArray[i];\r\n          if (maxYElement !== el) {\r\n            const oldY = el.y;\r\n            const newY = maxYElement.y + (maxYElement.height - el.height);\r\n            // update elements position\r\n            el.y = newY;\r\n            this._editor.updateElementConnectors(el);\r\n            // update boundary events position\r\n            this._updateVerticalBoundaryEventsPos(el, oldY);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  alignHorizontalCenter(elementsArray, saveHistory) {\r\n    const isCentered = [];\r\n    const isValid = [];\r\n    // remove connectors from selected array\r\n    const selectedArray = elementsArray.filter((obj) => {\r\n      return obj.elementType !== Config.CONNECTOR;\r\n    });\r\n\r\n    if (selectedArray.length > 1) {\r\n      const maxYElement = getMaxY(selectedArray);\r\n      const minYElement = getMinY(selectedArray);\r\n      const yMax = maxYElement.y + maxYElement.height;\r\n      const yMin = minYElement.y;\r\n      const centerY = (yMin + yMax) / 2;\r\n      for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n        const el = selectedArray[i];\r\n        if (el.y === Math.round(centerY - el.height / 2)) {\r\n          isCentered[i] = true;\r\n        } else {\r\n          isCentered[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isCentered.includes(false) && !isValid.includes(false)) {\r\n        if (saveHistory) {\r\n          this._historyManager.save();\r\n        }\r\n        for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n          const el = selectedArray[i];\r\n          // update element position\r\n          const newY = Math.round(centerY - el.height / 2);\r\n          const oldY = el.y;\r\n          if (this._editor._isSnapToGridOn) {\r\n            el.y = getClosestMultiple(newY, Config.GRID_SIZE)\r\n              + Config.ELEMENT_SELECT_SIZE / 2;\r\n          } else {\r\n            el.y = newY;\r\n          }\r\n          this._editor.updateElementConnectors(el);\r\n          // update boundary events position\r\n          this._updateVerticalBoundaryEventsPos(el, oldY);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  alignVerticalCenter() {\r\n    const isCentered = [];\r\n    const isValid = [];\r\n    // remove connectors from selected array\r\n    const selectedArray = this._getSelected(this._editor.elements).filter(\r\n      (obj) => {\r\n        return obj.elementType !== Config.CONNECTOR;\r\n      },\r\n    );\r\n    if (selectedArray.length > 1) {\r\n      const maxXElement = getMaxX(selectedArray);\r\n      const minXElement = getMinX(selectedArray);\r\n      const xMax = maxXElement.x + maxXElement.width;\r\n      const xMin = minXElement.x;\r\n      const centerX = (xMin + xMax) / 2;\r\n      for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n        const el = selectedArray[i];\r\n        if (el.x === Math.round(centerX - el.width / 2)) {\r\n          isCentered[i] = true;\r\n        } else {\r\n          isCentered[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isCentered.includes(false) && !isValid.includes(false)) {\r\n        this._historyManager.save();\r\n        for (let i = 0, len = selectedArray.length; i < len; i++) {\r\n          const el = selectedArray[i];\r\n          const newX = Math.round(centerX - el.width / 2);\r\n          const oldX = el.x;\r\n          // update elements positions\r\n          if (this._editor._isSnapToGridOn) {\r\n            el.x = getClosestMultiple(newX, Config.GRID_SIZE)\r\n              + Config.ELEMENT_SELECT_SIZE / 2;\r\n          } else {\r\n            el.x = newX;\r\n          }\r\n          this._editor.updateElementConnectors(el);\r\n          // update boundary events position\r\n          this._updateHorizontalBoundaryEventsPos(el, oldX);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  distVertical() {\r\n    const isDistributed = [];\r\n    const selectedArray = this._getSelected(this._editor.elements);\r\n    selectedArray.sort((a, b) => a.y - b.y);\r\n    if (selectedArray.length > 2) {\r\n      const maxYElement = selectedArray[selectedArray.length - 1];\r\n      const minYElement = selectedArray[0];\r\n      const yMin = minYElement.y - Config.ELEMENT_SELECT_SIZE / 2;\r\n      const yMax = maxYElement.y - Config.ELEMENT_SELECT_SIZE / 2;\r\n      // this._editor._paper.circle(maxYElement.x - (Config.ELEMENT_SELECT_SIZE / 2), yMax, 5);\r\n      // this._editor._paper.circle(minYElement.x - (Config.ELEMENT_SELECT_SIZE / 2), yMin, 5);\r\n\r\n      const freeSpace = yMax - yMin - minYElement.height;\r\n      let usedSpace = 0;\r\n      for (let i = 1; i < selectedArray.length - 1; i++) usedSpace += selectedArray[i].height;\r\n      let delta = (freeSpace - usedSpace) / (selectedArray.length - 1);\r\n\r\n      const useHeight = delta >= 0;\r\n      if (delta < 0) {\r\n        delta = (yMax - yMin) / (selectedArray.length - 1);\r\n      }\r\n      // console.log(delta);\r\n      // check if already distributed\r\n      const isValid = [];\r\n      for (let i = 1; i < selectedArray.length - 1; i++) {\r\n        const el = selectedArray[i];\r\n        const diff = el.y - (selectedArray[i - 1].y + selectedArray[i - 1].height);\r\n        // console.log(`${selectedArray[i].elementType} diff:`, diff);\r\n        if (diff === delta) {\r\n          isDistributed[i] = true;\r\n        } else {\r\n          isDistributed[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isDistributed.includes(false) && !isValid.includes(false)) {\r\n        this._historyManager.save();\r\n        for (let i = 1; i < selectedArray.length - 1; i++) {\r\n          const el = selectedArray[i];\r\n          const oldY = el.y;\r\n          // update element position\r\n          const newY = selectedArray[i - 1].y\r\n            + (useHeight ? selectedArray[i - 1].height : 0)\r\n            + delta;\r\n          if (this._editor._isSnapToGridOn) {\r\n            el.y = getClosestMultiple(newY, Config.GRID_SIZE)\r\n              + Config.ELEMENT_SELECT_SIZE / 2;\r\n          } else {\r\n            el.y = newY;\r\n          }\r\n          this._editor.updateElementConnectors(el);\r\n          // update boundary events position\r\n          this._updateVerticalBoundaryEventsPos(el, oldY);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  distHorizontal() {\r\n    const isDistributed = [];\r\n    const selectedArray = this._getSelected(this._editor.elements);\r\n    selectedArray.sort((a, b) => a.x - b.x);\r\n    if (selectedArray.length > 2) {\r\n      const maxXElement = selectedArray[selectedArray.length - 1];\r\n      const minXElement = selectedArray[0];\r\n      const xMin = minXElement.x - Config.ELEMENT_SELECT_SIZE / 2;\r\n      const xMax = maxXElement.x - Config.ELEMENT_SELECT_SIZE / 2;\r\n      // this._editor._paper.circle(maxXElement.x - (Config.ELEMENT_SELECT_SIZE / 2), xMax, 5);\r\n      // this._editor._paper.circle(minXElement.x - (Config.ELEMENT_SELECT_SIZE / 2), xMin, 5);\r\n\r\n      const freeSpace = xMax - xMin - minXElement.width;\r\n      let usedSpace = 0;\r\n      for (let i = 1; i < selectedArray.length - 1; i++) usedSpace += selectedArray[i].width;\r\n      let delta = (freeSpace - usedSpace) / (selectedArray.length - 1);\r\n\r\n      const useWidth = delta >= 0;\r\n      if (delta < 0) {\r\n        delta = (xMax - xMin) / (selectedArray.length - 1);\r\n      }\r\n      // console.log(delta);\r\n      // check if already distributed\r\n      const isValid = [];\r\n      for (let i = 1; i < selectedArray.length - 1; i++) {\r\n        const el = selectedArray[i];\r\n        const diff = el.x - (selectedArray[i - 1].x + selectedArray[i - 1].width);\r\n        // console.log(`${selectedArray[i].elementType} diff:`, diff);\r\n        if (diff === delta) {\r\n          isDistributed[i] = true;\r\n        } else {\r\n          isDistributed[i] = false;\r\n        }\r\n        this._checkIsValid(isValid, i, el);\r\n      }\r\n      if (isDistributed.includes(false) && !isValid.includes(false)) {\r\n        this._historyManager.save();\r\n        for (let i = 1; i < selectedArray.length - 1; i++) {\r\n          const el = selectedArray[i];\r\n          const oldX = el.x;\r\n          // update elements position\r\n          const newX = selectedArray[i - 1].x\r\n            + (useWidth ? selectedArray[i - 1].width : 0)\r\n            + delta;\r\n          if (this._editor._isSnapToGridOn) {\r\n            el.x = getClosestMultiple(newX, Config.GRID_SIZE)\r\n              + Config.ELEMENT_SELECT_SIZE / 2;\r\n          } else {\r\n            el.x = newX;\r\n          }\r\n          this._editor.updateElementConnectors(el);\r\n          // update boundary events position\r\n          this._updateHorizontalBoundaryEventsPos(el, oldX);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _checkIsValid(isValid, i, el) {\r\n    if (\r\n      el.elementType === Config.POOL\r\n      || el.elementType === Config.LANE\r\n      || el.elementType === Config.CONNECTOR\r\n    ) {\r\n      isValid[i] = false;\r\n    } else {\r\n      isValid[i] = true;\r\n    }\r\n  }\r\n\r\n  _updateHorizontalBoundaryEventsPos(el, oldX) {\r\n    if (\r\n      el.elementType === Config.TASK\r\n      || el.elementType === Config.SUBPROCESS\r\n    ) {\r\n      for (let i = 0, len = el.boundaryEvents.length; i < len; i++) {\r\n        const elB = getProcessElementByID(\r\n          el.boundaryEvents[i],\r\n          this._editor.elements,\r\n        );\r\n        if (!elB.selected) {\r\n          const dx = oldX - elB.x;\r\n          elB.x = el.x - dx;\r\n          this._editor.updateElementConnectors(elB);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateVerticalBoundaryEventsPos(el, oldY) {\r\n    if (\r\n      el.elementType === Config.TASK\r\n      || el.elementType === Config.SUBPROCESS\r\n    ) {\r\n      for (let i = 0, len = el.boundaryEvents.length; i < len; i++) {\r\n        const elB = getProcessElementByID(\r\n          el.boundaryEvents[i],\r\n          this._editor.elements,\r\n        );\r\n        if (!elB.selected) {\r\n          const dy = oldY - elB.y;\r\n          elB.y = el.y - dy;\r\n          this._editor.updateElementConnectors(elB);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getSelected(elArray) {\r\n    const selectedArray = [];\r\n    let el;\r\n    for (let i = 0, len = elArray.length; i < len; i++) {\r\n      el = elArray[i];\r\n      if (\r\n        el.selected\r\n        && el.elementType !== Config.POOL\r\n        && el.elementType !== Config.LANE\r\n        && el.elementType !== Config.CONNECTOR\r\n      ) {\r\n        selectedArray.push(el);\r\n      }\r\n    }\r\n    return selectedArray;\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport { getSelected } from '../utils/util';\r\n\r\nexport default class ClipboardManager {\r\n  constructor(editor, history) {\r\n    this._editor = editor;\r\n    this._historyManager = history;\r\n    this._clipboard = [];\r\n    this._clipboardElements = [];\r\n    this._pasteOffset = 0;\r\n    this._PASTE_POSITION_OFFSET = 30;\r\n  }\r\n\r\n  copy() {\r\n    const selected = getSelected(this._editor.elements);\r\n    this._clipboardElements = selected.filter((obj) => {\r\n      return (\r\n        obj.elementType !== Config.CONNECTOR\r\n        && obj.elementType !== Config.START_EVENT\r\n        && obj.elementType !== Config.POOL\r\n        && obj.elementType !== Config.LANE\r\n        && !obj.properties.isAttached\r\n      );\r\n    });\r\n    this._clipboard = cloneDeep(\r\n      this._clipboardElements.map((el) => el.properties),\r\n    );\r\n    this._pasteOffset = 1;\r\n  }\r\n\r\n  paste() {\r\n    // deselect previous elements if anything on clipboard\r\n    if (this._clipboard.length > 0) {\r\n      this._editor.unSelectAllElements();\r\n      // paste\r\n      this._historyManager.save();\r\n      for (let i = 0, len = this._clipboard.length; i < len; i++) {\r\n        const el = this._clipboardElements[i];\r\n        const elProps = this._clipboard[i];\r\n        // guess next id, it gets assigned in createElement method\r\n        const nextID = this._editor.idIndex + 1;\r\n        elProps.id = nextID;\r\n        if (elProps.activity) {\r\n          elProps.activity.id = nextID;\r\n        }\r\n        // does not allow copy/paste of events boundary\r\n        elProps.boundaryEvents = [];\r\n        // heres the magic...!?!\r\n        const p = cloneDeep(elProps);\r\n        const element = this._editor.createElement(\r\n          el.elementType,\r\n          el.x + this._PASTE_POSITION_OFFSET * this._pasteOffset,\r\n          el.y + this._PASTE_POSITION_OFFSET * this._pasteOffset,\r\n          p,\r\n          false,\r\n          false,\r\n        );\r\n        element.selected = true;\r\n      }\r\n      this._pasteOffset += 2;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import Config from 'config';\r\n\r\nexport default class GridManager {\r\n  constructor(editor, size) {\r\n    this._editor = editor;\r\n    this._gridSize = size;\r\n    this._grid = null;\r\n    this._isGridOn = false;\r\n  }\r\n\r\n  init() {\r\n    if (!this._grid) {\r\n      this._drawGrid();\r\n    }\r\n    if (this.isGridOn) {\r\n      // when opening new documents previous grid state needs to be accounted for\r\n      if (Config.ENV === 'Offline') {\r\n        this.show();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gridSize() {\r\n    return this._gridSize;\r\n  }\r\n\r\n  get isGridOn() {\r\n    return this._isGridOn;\r\n  }\r\n\r\n  _drawGrid() {\r\n    const viewport = this._editor._viewport;\r\n    const bounds = document.getElementById('app').getBoundingClientRect();\r\n    const wv = bounds.width * 32;\r\n    const hv = bounds.height * 32;\r\n    const sq = viewport.rect(-wv / 2, -hv / 2, wv, hv);\r\n\r\n    this._grid = sq.prependTo(viewport);\r\n    const pLine1 = viewport\r\n      .line(0, 0, this._gridSize, 0)\r\n      .attr({ class: 'grid_bg__line' });\r\n    const pLine2 = viewport\r\n      .line(0, 0, 0, this._gridSize)\r\n      .attr({ class: 'grid_bg__line' });\r\n    const pattern = viewport\r\n      .g(pLine1, pLine2)\r\n      .pattern(0, 0, this._gridSize, this._gridSize);\r\n\r\n    // apply pattern\r\n    this._grid.attr({\r\n      fill: pattern,\r\n      class: 'grid_bg',\r\n      'data-visible': 'off',\r\n    });\r\n  }\r\n\r\n  show() {\r\n    this._grid.node.setAttribute('data-visible', 'on');\r\n    this._isGridOn = true;\r\n  }\r\n\r\n  hide() {\r\n    this._grid.node.setAttribute('data-visible', 'off');\r\n    this._isGridOn = false;\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport Config from 'config';\r\nimport {} from '../utils/snaptoolkit';\r\nimport ShapesInteraction from 'shapes-interaction';\r\n\r\nexport default class LassoManager extends EventEmitter {\r\n  constructor(editor) {\r\n    super();\r\n    this._editor = editor;\r\n    this._paper = editor._paper;\r\n    this._lassoRect = null;\r\n\r\n    this._onHandleDrag = this._onHandleDrag.bind(this);\r\n    this._onHandleDragStart = this._onHandleDragStart.bind(this);\r\n    this._onHandleDragEnd = this._onHandleDragEnd.bind(this);\r\n  }\r\n\r\n  enableLasso(isOn) {\r\n    this._paper.undrag();\r\n    this._paper.removeClass('selectionable');\r\n    if (isOn) {\r\n      this._paper.removeClass('hand');\r\n      this._paper.removeClass('connectionable');\r\n      this._paper.addClass('selectionable');\r\n      this._paper.drag(\r\n        this._onHandleDrag,\r\n        this._onHandleDragStart,\r\n        this._onHandleDragEnd,\r\n      );\r\n    } else if (this._lassoRect) {\r\n      this._lassoRect.remove();\r\n    }\r\n  }\r\n\r\n  _onHandleDragStart(x, y, evt) {\r\n    if (evt.target.id === 'app') {\r\n      const ep = this._paper.getEventPoint(evt);\r\n      this._lassoRect = this._paper.rect(ep.x, ep.y, 0, 0).attr({\r\n        class: 'lasso_selection',\r\n      });\r\n      this._lassoRect.data('ox', ep.x);\r\n      this._lassoRect.data('oy', ep.y);\r\n    }\r\n  }\r\n\r\n  _onHandleDrag(dx, dy, x, y, evt) {\r\n    if (evt.target.id === 'app' && this._lassoRect) {\r\n      if (evt.x > 0 && evt.y > 0) {\r\n        const ep = this._paper.getEventPoint(evt);\r\n        const wx = ep.x - this._lassoRect.data('ox');\r\n        const wy = ep.y - this._lassoRect.data('oy');\r\n\r\n        this._lassoRect.attr({\r\n          width: Math.abs(wx),\r\n          height: Math.abs(wy),\r\n        });\r\n\r\n        if (wx < 0) {\r\n          this._lassoRect.attr({\r\n            x: this._lassoRect.data('ox') + wx,\r\n          });\r\n        }\r\n\r\n        if (wy < 0) {\r\n          this._lassoRect.attr({\r\n            y: this._lassoRect.data('oy') + wy,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _onHandleDragEnd() {\r\n    if (this._lassoRect) {\r\n      for (let i = 0, len = this._editor.elements.length; i < len; i++) {\r\n        const el = this._editor.elements[i];\r\n        if (el.graphic) {\r\n          if (this._checkShapesSelectable(this._lassoRect.node, el)) {\r\n            el.selected = true;\r\n            el.toFront();\r\n          }\r\n        }\r\n      }\r\n      this._lassoRect.remove();\r\n    }\r\n  }\r\n\r\n  _checkShapesSelectable(lasso, el) {\r\n    const lassoBounds = lasso.getBoundingClientRect();\r\n    const lassoBox = [\r\n      [lassoBounds.x, lassoBounds.y],\r\n      lassoBounds.width,\r\n      lassoBounds.height,\r\n    ];\r\n    let isIntersecting = false;\r\n\r\n    switch (el.elementType) {\r\n      case Config.CONNECTOR:\r\n        const segmentIsValid = [];\r\n        for (let i = 0, len = el._points.length; i < len - 1; i++) {\r\n          const pt1 = this._convertCoordsToGlobal(\r\n            el._points[i].x,\r\n            el._points[i].y,\r\n          );\r\n          const pt2 = this._convertCoordsToGlobal(\r\n            el._points[i + 1].x,\r\n            el._points[i + 1].y,\r\n          );\r\n          const seg = [\r\n            [pt1.x, pt1.y],\r\n            [pt2.x, pt2.y],\r\n          ];\r\n          segmentIsValid[i] = this._checkIfValidSelection(seg, lassoBox);\r\n        }\r\n        isIntersecting = segmentIsValid.every((e) => {\r\n          return e === true;\r\n        });\r\n        break;\r\n      case Config.START_EVENT:\r\n      case Config.END_EVENT:\r\n      case Config.INTERMEDIATE_EVENT:\r\n        const eventBounds = el.selectionBox.node.getBoundingClientRect();\r\n        const cx = eventBounds.left + eventBounds.width / 2;\r\n        const cy = eventBounds.top + eventBounds.height / 2;\r\n        const eventCircle = [[cx, cy], el.radius];\r\n        isIntersecting = this._checkIfValidSelection(eventCircle, lassoBox);\r\n        break;\r\n      case Config.TASK:\r\n      case Config.SUBPROCESS:\r\n      case Config.DATA_OBJECT:\r\n      case Config.DATA_STORE:\r\n      case Config.DATA_INPUT:\r\n      case Config.DATA_OUTPUT:\r\n      case Config.GROUP:\r\n      case Config.TEXT:\r\n      case Config.GATEWAY:\r\n      case Config.LANE:\r\n      case Config.POOL:\r\n        const elBounds = el.selectionBox.node.getBoundingClientRect();\r\n        const elBox = [\r\n          [elBounds.x, elBounds.y],\r\n          elBounds.width,\r\n          elBounds.height,\r\n        ];\r\n        isIntersecting = this._checkIfValidSelection(elBox, lassoBox);\r\n        break;\r\n      default:\r\n    }\r\n    return isIntersecting;\r\n  }\r\n\r\n  _checkIfValidSelection(obj, objLasso) {\r\n    return ShapesInteraction.contain(objLasso, obj);\r\n    // return ShapesInteraction.intersection(obj, objLasso)\r\n    //   || ShapesInteraction.contain(objLasso, obj);\r\n  }\r\n\r\n  _convertCoordsToGlobal(x, y) {\r\n    const pt = this._paper.createPoint(x, y);\r\n    const matrix = pt.matrixTransform(\r\n      this._editor._viewport.node.getScreenCTM(),\r\n    );\r\n    return matrix;\r\n  }\r\n}\r\n","import key from 'mousetrap';\r\nimport { getSelected } from '../utils/util';\r\n\r\nexport default class KeyManager {\r\n  constructor(editor) {\r\n    this._editor = editor;\r\n    this.initKeyBindings();\r\n    this._currentMouseMode = null;\r\n    this._allElementsSelected = false;\r\n    this._isCtrlPressed = false;\r\n  }\r\n\r\n  initKeyBindings() {\r\n    // Delete Element\r\n    key.bind('del', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        this._editor.deleteMultipleSelectedElements();\r\n      }\r\n    });\r\n    // Copy Element\r\n    key.bind(['ctrl+c', 'meta+c'], (evt) => {\r\n      evt.preventDefault();\r\n      this._editor.copyElements();\r\n    });\r\n    // Paste Element\r\n    key.bind(['ctrl+v', 'meta+v'], (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        this._editor.pasteElements();\r\n      }\r\n    });\r\n    // Redo History\r\n    key.bind(['shift+ctrl+z', 'shift+meta+z'], (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        this._editor.redoAction();\r\n      }\r\n    });\r\n    // Undo History\r\n    key.bind(['ctrl+z', 'meta+z'], (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        this._editor.undoAction();\r\n      }\r\n    });\r\n    // toogle grid\r\n    key.bind('g', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('grid_btn').click();\r\n      }\r\n    });\r\n    // toogle properties panel\r\n    key.bind('p', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('sidebar_toggle').click();\r\n      }\r\n    });\r\n    // hand tool\r\n    key.bind('h', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('hand_btn').click();\r\n      }\r\n    });\r\n    // lasso tool\r\n    key.bind('s', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('lasso_btn').click();\r\n      }\r\n    });\r\n    // connector tool\r\n    key.bind('c', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('connector_btn').click();\r\n      }\r\n    });\r\n    // Tabbing tasks\r\n    key.bind('t', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        this._editor.doTabProcessElements();\r\n      }\r\n    });\r\n    // zoom in\r\n    key.bind('+', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('zoom_in').click();\r\n      }\r\n    });\r\n    // zoom out\r\n    key.bind('-', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('zoom_out').click();\r\n      }\r\n    });\r\n    // Pan Around\r\n    key.bind(\r\n      ['ctrl', 'meta'],\r\n      () => {\r\n        this._currentMouseMode = this._editor.mode;\r\n        this._editor._panZoomManager.enablePanning(true);\r\n        this._editor._lassoManager.enableLasso(false);\r\n        this._editor._connectorManager.enableConnection(false);\r\n        this._isCtrlPressed = true;\r\n      },\r\n      'keydown',\r\n    );\r\n    // Stop Pan Around\r\n    key.bind(\r\n      ['ctrl', 'meta'],\r\n      () => {\r\n        this._editor._panZoomManager.enablePanning(false);\r\n        this._editor.mode = this._currentMouseMode;\r\n        this._isCtrlPressed = false;\r\n      },\r\n      'keyup',\r\n    );\r\n    // Reset view\r\n    key.bind('r', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        document.getElementById('reset_view').click();\r\n      }\r\n    });\r\n    // Select All Elements\r\n    key.bind('a', (evt) => {\r\n      if (event.target.tagName === 'BODY' || event.target.tagName === 'A') {\r\n        evt.preventDefault();\r\n        const selEls = getSelected(this._editor.elements);\r\n        if (!this._allElementsSelected || selEls.length < 1) {\r\n          this._editor.selectAllElements();\r\n          this._allElementsSelected = true;\r\n        } else {\r\n          this._editor.unSelectAllElements();\r\n          this._allElementsSelected = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport {} from '../utils/snaptoolkit';\r\nimport Config from 'config';\r\nimport {\r\n  getSquareIntersection,\r\n  getProcessElementByGraphicID,\r\n  getProcessElementByID,\r\n} from '../utils/util';\r\n\r\nexport default class ConnectorManager extends EventEmitter {\r\n  constructor(editor, history) {\r\n    super();\r\n    this._editor = editor;\r\n    this._paper = editor._paper;\r\n    this._historyManager = history;\r\n    this._isEnabled = false;\r\n    this._source = null;\r\n    this._target = null;\r\n    this._currentTarget = null;\r\n    this._createFromContextMenu = false;\r\n    this._mousemoveHandler = this._mousemoveHandler.bind(this);\r\n    this._mouseupHandler = this._mouseupHandler.bind(this);\r\n    this._mousedownHandler = this._mousedownHandler.bind(this);\r\n  }\r\n\r\n  enableConnection(isOn) {\r\n    this._isEnabled = isOn;\r\n    this._paper.removeClass('selectionable');\r\n    this._paper.removeClass('hand');\r\n    this._paper.addClass('connectionable');\r\n    if (!isOn) {\r\n      this._paper.removeClass('connectionable');\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  areConnected(to, from) {\r\n    return this._isConnectorOn(to, from);\r\n  }\r\n\r\n  _createGuideLine(element) {\r\n    const mp = this._editor._viewport.getMousePoint(event, 0, 0);\r\n    this._guideLine = this._editor._viewport\r\n      .line(\r\n        element.graphic.matrix.e + element.width / 2,\r\n        element.graphic.matrix.f + element.height / 2,\r\n        mp.x,\r\n        mp.y,\r\n      )\r\n      .attr({\r\n        class: 'connection_guideline',\r\n        id: 'connection_guideline',\r\n      });\r\n  }\r\n\r\n  connectOneTime(element) {\r\n    this.reset();\r\n    this._createFromContextMenu = true;\r\n    this._source = element;\r\n    this._target = null;\r\n    this._createGuideLine(element);\r\n    element.toFront();\r\n    for (let i = 0, len = element.boundaryEvents.length; i < len; i++) {\r\n      const el = getProcessElementByID(\r\n        element.boundaryEvents[i],\r\n        this._editor.elements,\r\n      );\r\n      el.toFront();\r\n    }\r\n    window.addEventListener('mousedown', this._mousedownHandler, false);\r\n    window.addEventListener('mousemove', this._mousemoveHandler, false);\r\n    window.addEventListener('mouseup', this._mouseupHandler, false);\r\n  }\r\n\r\n  connect(element) {\r\n    if (\r\n      element.elementType !== Config.CONNECTOR\r\n      && element.elementType !== Config.POOL\r\n      && element.elementType !== Config.LANE\r\n      && element.elementType !== Config.GROUP\r\n    ) {\r\n      if (!this._source && this._isEnabled) {\r\n        if (\r\n          element.elementType !== Config.END_EVENT\r\n          && element.elementType !== Config.TEXT\r\n        ) {\r\n          this._source = element;\r\n          this._target = null;\r\n          this._createGuideLine(element);\r\n          if (this._editor._mode === Config.CONNECTOR_MODE) {\r\n            element._contextMenu.hide();\r\n          }\r\n          window.addEventListener('mousemove', this._mousemoveHandler, false);\r\n          window.addEventListener('mouseup', this._mouseupHandler, false);\r\n        } else {\r\n          this._source = null;\r\n        }\r\n      } else if (!this._isEnabled && this._createFromContextMenu) {\r\n        this._target = element;\r\n        this._connectElements(this._source, this._target);\r\n        this.reset();\r\n      } else if (this._isEnabled) {\r\n        this._target = element;\r\n        this._connectElements(this._source, this._target);\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n\r\n  _mousedownHandler() {\r\n    this._createFromContextMenu = false;\r\n  }\r\n\r\n  _mouseupHandler(evt) {\r\n    // console.log(evt.target);\r\n    if (\r\n      (evt.target.id === 'app' && !this._createFromContextMenu)\r\n      || evt.target.closest('.tool_bar')\r\n    ) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    if (this._guideLine) this._guideLine.remove();\r\n    this._source = null;\r\n    this._target = null;\r\n    this._createFromContextMenu = false;\r\n    window.removeEventListener('mousemove', this._mousemoveHandler);\r\n    window.removeEventListener('mouseup', this._mouseupHandler);\r\n    window.removeEventListener('mousedown', this._mousedownHandler);\r\n    this._paper.removeClass('invalid-connection');\r\n  }\r\n\r\n  _mousemoveHandler(evt) {\r\n    const mp = this._editor._viewport.getMousePoint(evt, 0, 0);\r\n    const w1 = this._source.width / 2;\r\n    const h1 = this._source.height / 2;\r\n    const w2 = 10;\r\n    const h2 = 10;\r\n    const cx1 = this._source.graphic.matrix.e - 10 + w1;\r\n    const cy1 = this._source.graphic.matrix.f - 10 + h1;\r\n    const cx2 = mp.x;\r\n    const cy2 = mp.y;\r\n    const dx = cx2 - cx1;\r\n    const dy = cy2 - cy1;\r\n    const p1 = getSquareIntersection(dx, dy, cx1, cy1, w1, h1);\r\n    const p2 = getSquareIntersection(-dx, -dy, cx2, cy2, w2, h2);\r\n    this._guideLine.attr({\r\n      x1: p1[0],\r\n      y1: p1[1],\r\n      x2: p2[0],\r\n      y2: p2[1],\r\n    });\r\n    this._connectorVisualClues(this._source, evt.target);\r\n  }\r\n\r\n  _connectElements(from, to) {\r\n    if (this._isConnectionValid(from, to)) {\r\n      this._currentTarget.graphic.removeClass('element--connectable-hover');\r\n      this._historyManager.save();\r\n      const connectorType = this._getConnectorType(from, to);\r\n      const connector = this._editor.createElement(\r\n        Config.CONNECTOR,\r\n        null,\r\n        null,\r\n        {\r\n          id: this._editor.idIndex + 1,\r\n          from: from.id,\r\n          to: to.id,\r\n          points: [\r\n            { x: 0, y: 0 },\r\n            { x: 0, y: 0 },\r\n          ],\r\n          type: connectorType,\r\n        },\r\n        false,\r\n        false,\r\n      );\r\n      // Set Default Connector Types\r\n      if (to.elementType === Config.DATA_OUTPUT) {\r\n        connector.setInitialDirection('directional');\r\n      }\r\n      if (from.elementType === Config.DATA_INPUT) {\r\n        connector.setInitialDirection('directional');\r\n      }\r\n    }\r\n  }\r\n\r\n  _getConnectorType(from, to) {\r\n    if (\r\n      from.elementType === Config.DATA_STORE\r\n      || to.elementType === Config.DATA_STORE\r\n    ) {\r\n      return Config.CONNECTOR_TYPE_ASSOCIATION;\r\n    }\r\n    if (\r\n      from.elementType === Config.DATA_OBJECT\r\n      || to.elementType === Config.DATA_OBJECT\r\n    ) {\r\n      return Config.CONNECTOR_TYPE_ASSOCIATION;\r\n    }\r\n    if (from.elementType === Config.DATA_INPUT) {\r\n      return Config.CONNECTOR_TYPE_ASSOCIATION;\r\n    }\r\n    if (to.elementType === Config.DATA_OUTPUT) {\r\n      return Config.CONNECTOR_TYPE_ASSOCIATION;\r\n    }\r\n    if (from.elementType === Config.TEXT || to.elementType === Config.TEXT) {\r\n      return Config.CONNECTOR_TYPE_ASSOCIATION;\r\n    }\r\n    return Config.CONNECTOR_TYPE_TRANSITION;\r\n  }\r\n\r\n  _isConnectionValid(from, to) {\r\n    if (\r\n      from !== to\r\n      && to.elementType !== Config.START_EVENT\r\n      && from.elementType !== Config.END_EVENT\r\n      && from.elementType !== Config.TEXT\r\n      && from.elementType !== Config.DATA_OUTPUT\r\n      && to.elementType !== Config.DATA_INPUT\r\n      && !this._isConnectorOn(from, to)\r\n      && this._isNotBoundaryEvent(from, to)\r\n    ) {\r\n      switch (from.elementType) {\r\n        case Config.DATA_OBJECT:\r\n        case Config.DATA_INPUT:\r\n          if (to.elementType === Config.DATA_OUTPUT) return false;\r\n          if (to.elementType === Config.DATA_INPUT) return false;\r\n          if (to.elementType === Config.DATA_OBJECT) return false;\r\n          if (to.elementType === Config.DATA_STORE) return false;\r\n          break;\r\n        case Config.DATA_STORE:\r\n          if (to.elementType === Config.DATA_OUTPUT) return false;\r\n          if (to.elementType === Config.DATA_INPUT) return false;\r\n          if (to.elementType === Config.DATA_OBJECT) return false;\r\n          if (to.elementType === Config.DATA_STORE) return false;\r\n          if (to.elementType === Config.GATEWAY) return false;\r\n          if (to.elementType === Config.START_EVENT) return false;\r\n          if (to.elementType === Config.INTERMEDIATE_EVENT) return false;\r\n          if (to.elementType === Config.END_EVENT) return false;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _isNotBoundaryEvent(from, to) {\r\n    if (\r\n      (from.elementType === Config.TASK\r\n        || to.elementType === Config.SUBPROCESS)\r\n      && to.elementType === Config.INTERMEDIATE_EVENT\r\n    ) {\r\n      if (to.isAttached && to.target === from.id) {\r\n        return false;\r\n      }\r\n    }\r\n    if (\r\n      from.elementType === Config.INTERMEDIATE_EVENT\r\n      && (to.elementType === Config.TASK || to.elementType === Config.SUBPROCESS)\r\n    ) {\r\n      if (from.isAttached && from.target === to.id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _isConnectorOn(from, to) {\r\n    // from -> to && to --> from\r\n    for (let i = 0, len = this._editor._connections.length; i < len; i++) {\r\n      const connector = this._editor._connections[i];\r\n      if (\r\n        (connector.properties.from === parseInt(from.id, 10)\r\n          && connector.properties.to === parseInt(to.id, 10))\r\n        || (connector.properties.to === parseInt(from.id, 10)\r\n          && connector.properties.from === parseInt(to.id, 10))\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _connectorVisualClues(from, to) {\r\n    // add invalid connection to paper by default\r\n    if (to.closest('#app')) {\r\n      to.closest('#app').classList.add('invalid-connection');\r\n    }\r\n    if (this._currentTarget) {\r\n      this._currentTarget.graphic.removeClass('element--connectable-hover');\r\n      this._guideLine.removeClass('connection_guideline--connectable');\r\n    }\r\n    // get parent elements from event target\r\n    [\r\n      '.task',\r\n      '.subprocess',\r\n      '.intermediate_event',\r\n      '.end_event',\r\n      '.gateway',\r\n      '.data_store',\r\n      '.data_input',\r\n      '.data_output',\r\n      '.data_object',\r\n      '.annotation',\r\n    ].forEach((className) => {\r\n      if (to.closest(className) !== null) {\r\n        const target = getProcessElementByGraphicID(\r\n          to.closest(className).id,\r\n          this._editor.elements,\r\n        );\r\n        if (this._currentTarget !== target && this._currentTarget) {\r\n          this._currentTarget.graphic.removeClass('element--connectable-hover');\r\n          this._guideLine.removeClass('connection_guideline--connectable');\r\n          this._currentTarget = null;\r\n        }\r\n        if (!this._isConnectionValid(from, target)) {\r\n          this._paper.addClass('invalid-connection');\r\n          this._guideLine.removeClass('connection_guideline--connectable');\r\n        } else {\r\n          this._paper.removeClass('invalid-connection');\r\n          target.graphic.addClass('element--connectable-hover');\r\n          this._guideLine.addClass('connection_guideline--connectable');\r\n          this._currentTarget = target;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport EventEmitter from 'eventemitter3';\r\nimport ShapesInteraction from 'shapes-interaction';\r\nimport { getProcessElementByID } from '../utils/util';\r\n\r\nexport default class BoundaryEventsManager extends EventEmitter {\r\n  constructor(editor) {\r\n    super();\r\n    this._editor = editor;\r\n    this._boundaryEventsToMove = [];\r\n  }\r\n\r\n  moveStart(element) {\r\n    // attached events to task or subprocess\r\n    if (element.elementType === Config.TASK) {\r\n      // remove event elements attached to task if not in intersection\r\n      this._removeBoundaryEventsNotIntersecting(element);\r\n      // check if event is attached to task or subprocess to move along\r\n      for (let a = 0, len = this._editor.elements.length; a < len; a++) {\r\n        const el = this._editor.elements[a];\r\n        if (el.elementType === Config.INTERMEDIATE_EVENT) {\r\n          if (el.isAttached && el.target === element.id) {\r\n            if (!element.boundaryEvents.some((item) => item === el.id)) {\r\n              element.addBoundaryEvents(el.id);\r\n            }\r\n            // bring boundary event to front\r\n            el.toFront();\r\n            this._boundaryEventsToMove.push(el);\r\n            // intersecting elements\r\n          } else if (this._checkIntersection(el, element)) {\r\n            // shouldnt be connected\r\n            if (!this._editor._connectorManager.areConnected(element, el)) {\r\n              if (!element.boundaryEvents.some((item) => item === el.id)) {\r\n                this._attached(el, element.id, true);\r\n                element.addBoundaryEvents(el.id);\r\n              }\r\n              // bring attached intermediate event to front\r\n              el.toFront();\r\n              this._boundaryEventsToMove.push(el);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (element.elementType === Config.INTERMEDIATE_EVENT) {\r\n      // check if event el is intersecting with task or subprocess to give visual clue\r\n      this._checkParentHover(element, false);\r\n    }\r\n  }\r\n\r\n  moving(element) {\r\n    // move attached intermediate events\r\n    if (element.elementType === Config.TASK) {\r\n      for (let i = 0, len = this._boundaryEventsToMove.length; i < len; i++) {\r\n        const el = this._boundaryEventsToMove[i];\r\n        el.moveElement(\r\n          Math.round(element.mx + el.x),\r\n          Math.round(element.my + el.y),\r\n        );\r\n        this._editor.updateElementConnectors(el);\r\n      }\r\n    } else if (element.elementType === Config.INTERMEDIATE_EVENT) {\r\n      // check if event el is intersecting with task or subprocess to give visual clue\r\n      this._checkParentHover(element, false);\r\n    }\r\n  }\r\n\r\n  moveEnd(element) {\r\n    // move attached intermediate events\r\n    if (element.elementType === Config.TASK) {\r\n      for (let i = 0, len = this._boundaryEventsToMove.length; i < len; i++) {\r\n        const el = this._boundaryEventsToMove[i];\r\n        el.moveElementEnd(\r\n          Math.round(element.mx + el.x),\r\n          Math.round(element.my + el.y),\r\n        );\r\n        el.toFront();\r\n      }\r\n    } else if (element.elementType === Config.INTERMEDIATE_EVENT) {\r\n      // check if event el is intersecting with task or subprocess to give visual clue\r\n      this._checkParentHover(element, true);\r\n      // check still attached\r\n      this._checkIfAttached(element);\r\n    }\r\n    this._boundaryEventsToMove = [];\r\n  }\r\n\r\n  noMoveEnd(element) {\r\n    this._boundaryEventsToMove = [];\r\n    if (element.elementType === Config.INTERMEDIATE_EVENT) {\r\n      // check if event el is intersecting with task or subprocess to give visual clue\r\n      this._checkParentHover(element, true);\r\n    }\r\n  }\r\n\r\n  _removeBoundaryEventsNotIntersecting(element) {\r\n    let i = element.boundaryEvents.length;\r\n    while (i--) {\r\n      const el = getProcessElementByID(\r\n        element.boundaryEvents[i],\r\n        this._editor.elements,\r\n      );\r\n      if (el) {\r\n        if (!this._checkIntersection(el, element)) {\r\n          this._attached(el, null, false);\r\n          element.removeBoundaryEvents(i);\r\n        }\r\n      } else {\r\n        element.removeBoundaryEvents(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  _checkIntersection(el, element) {\r\n    const eventBounds = el.selectionBox.node.getBoundingClientRect();\r\n    const cx = eventBounds.left + eventBounds.width / 2;\r\n    const cy = eventBounds.top + eventBounds.height / 2;\r\n    const eventCircle = [[cx, cy], el.radius];\r\n    const elementBounds = element.box.node.getBoundingClientRect();\r\n    const elementBox = [\r\n      [elementBounds.x, elementBounds.y],\r\n      elementBounds.width,\r\n      elementBounds.height,\r\n    ];\r\n    return ShapesInteraction.intersection(elementBox, eventCircle);\r\n  }\r\n\r\n  _checkParentHover(element, isMoveEnd) {\r\n    for (let i = 0, len = this._editor.elements.length; i < len; i++) {\r\n      const elHover = this._editor.elements[i];\r\n      if (elHover.elementType === Config.TASK) {\r\n        if (!isMoveEnd) {\r\n          if (this._checkIntersection(element, elHover)) {\r\n            if (\r\n              !this._editor._connectorManager.areConnected(element, elHover)\r\n            ) {\r\n              elHover.graphic.addClass('element--boundary-event-hover');\r\n            }\r\n          } else {\r\n            elHover.graphic.removeClass('element--boundary-event-hover');\r\n          }\r\n        } else {\r\n          elHover.graphic.removeClass('element--boundary-event-hover');\r\n          if (this._checkIntersection(element, elHover)) {\r\n            if (\r\n              !this._editor._connectorManager.areConnected(element, elHover)\r\n            ) {\r\n              this._attached(element, elHover.id, true);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _checkIfAttached(el) {\r\n    // check not attached, to remove props\r\n    if (el.target) {\r\n      if (\r\n        !this._checkIntersection(\r\n          el,\r\n          getProcessElementByID(el.target, this._editor.elements),\r\n        )\r\n      ) {\r\n        this._attached(el, null, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  _attached(event, id, isAttached) {\r\n    if (isAttached) {\r\n      event.target = id;\r\n      event.isAttached = isAttached;\r\n      if (event.eventType === 'none') {\r\n        event.type = 'timer';\r\n      }\r\n      const taskContainer = this._editor.elements.find((element) => {\r\n        return (\r\n          element.elementType === Config.TASK && element.id === event.target\r\n        );\r\n      });\r\n      if (taskContainer) {\r\n        const { taskType } = taskContainer;\r\n        if (\r\n          (taskType === 'receive'\r\n            || taskType === 'send'\r\n            || taskType === 'service'\r\n            || taskType === 'script')\r\n          && event.eventType === 'message'\r\n        ) {\r\n          event.type = 'timer';\r\n        }\r\n      }\r\n      taskContainer.boundaryEvents.push(event.id);\r\n      this.emit('boundary_attached', event);\r\n    } else {\r\n      event.target = null;\r\n      event.isAttached = false;\r\n      if (event.eventType === 'multiple' || event.eventType === 'error') {\r\n        event.type = 'none';\r\n      }\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport * as Snap from 'snapsvg-cjs';\r\n\r\nexport default class ContextButton extends EventEmitter {\r\n  constructor(paper, icon, parent, pos) {\r\n    super();\r\n    this._paper = paper;\r\n    this._btn = null;\r\n    this._bg = null;\r\n    this._iconGroup = null;\r\n    this._onButtonClicked = this._onButtonClicked.bind(this);\r\n    this._ICON_OFFSET_X = 20;\r\n    this._ICON_OFFSET_Y = 25;\r\n    this._BG_OFFSET_X = 15;\r\n    this._drawMenu(parent, pos, icon);\r\n  }\r\n\r\n  _drawMenu(parent, pos, icon) {\r\n    this._bg = this._paper\r\n      .rect(pos.x + this._BG_OFFSET_X, pos.y, 40, 36)\r\n      .attr({ class: 'context_menu_btn__bg' });\r\n\r\n    const iconShape = Snap.parse(icon);\r\n    this._iconGroup = iconShape.select('g');\r\n    this._iconGroup.transform(\r\n      `s0.03, T${pos.x + this._ICON_OFFSET_X},${pos.y + this._ICON_OFFSET_Y}`,\r\n    );\r\n\r\n    this._btn = this._paper\r\n      .g(this._bg, this._iconGroup)\r\n      .mousedown(this._onButtonClicked)\r\n      .attr({ class: 'context_menu_btn' });\r\n\r\n    this._btn.appendTo(parent);\r\n  }\r\n\r\n  _onButtonClicked(event) {\r\n    event.stopPropagation();\r\n    this.emit('on_context_button_clicked', event);\r\n  }\r\n\r\n  updatePosition(pos) {\r\n    this._bg.attr({ x: pos.x + this._BG_OFFSET_X, y: pos.y });\r\n    const newMatrix = new Snap.Matrix();\r\n    newMatrix.translate(\r\n      pos.x + this._ICON_OFFSET_X,\r\n      pos.y + this._ICON_OFFSET_Y,\r\n    );\r\n    newMatrix.scale(0.03);\r\n    this._iconGroup.attr({ transform: newMatrix });\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport EventEmitter from 'eventemitter3';\r\nimport ContextButton from './contextButton';\r\n\r\nexport default class ContextMenu extends EventEmitter {\r\n  constructor(element, buttonNames) {\r\n    super();\r\n    this._element = element;\r\n    this._paper = element.paper;\r\n    this._buttonNames = buttonNames;\r\n    this._buttonBar = null;\r\n    this._graphic = element.graphic;\r\n    this._selectionBox = element.selectionBox;\r\n    this._menuItems = [];\r\n    this._MENU_OFFSET_Y = 35;\r\n    this._initButtons();\r\n  }\r\n\r\n  show() {\r\n    this._updateMenuItemsPosition();\r\n    this._buttonBar.removeClass('context_menu--hidden');\r\n  }\r\n\r\n  hide() {\r\n    this._buttonBar.addClass('context_menu--hidden');\r\n  }\r\n\r\n  _initButtons() {\r\n    const bounds = this._selectionBox.node.getBoundingClientRect();\r\n    let offsetY = 0;\r\n    let offsetY2 = 0;\r\n    const menuGroup = this._paper.g().attr({\r\n      class: 'context_menu',\r\n      id: `ctx_${this._element.id}`,\r\n    });\r\n    // position individual buttons\r\n    for (let i = 0, len = this._buttonNames.length; i < len; i++) {\r\n      let pos = null;\r\n      if (i < 4) {\r\n        pos = { x: bounds.right - 5, y: bounds.y + offsetY };\r\n        offsetY += this._MENU_OFFSET_Y;\r\n      } else {\r\n        pos = { x: bounds.right + 35, y: bounds.y + offsetY2 };\r\n        offsetY2 += this._MENU_OFFSET_Y;\r\n      }\r\n      let btn = null;\r\n      switch (this._buttonNames[i]) {\r\n        case Config.DELETE:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"remove_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M429 743c-58-4-70 11-71-52l0-9-172-56c-20-5-20-29 0-30l624 0c19 0 19 25 0 30l-168 55 0 10c0 62-7 48-71 52l-71 0z m-215-204c-14 0-25-12-24-26l50-555c1-12 11-22 24-22l457 0c13 0 23 9 25 22l64 554c2 15-9 27-24 27l-143 0-143 0z m27-49l259 0 259 0-59-505-414 0z m120-73c-1 0-2 0-3 0-16-1-28-15-25-31l44-320c2-15 16-26 31-24 15 2 25 17 22 32l-44 319c-2 13-12 23-25 24z m280 0c-13 0-25-10-27-24l-44-319c-3-15 7-30 22-32 16-2 29 9 31 24l44 320c3 16-9 30-26 31z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_remove_button_clicked');\r\n          });\r\n          break;\r\n        case Config.TASK:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_task_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M215 745c-107 0-195-87-195-194l0-402c0-107 88-194 195-194l570 0c108 0 195 87 195 194l0 402c0 107-87 194-195 194l-570 0z m0-60l570 0c75 0 135-59 135-134l0-402c0-75-60-134-135-134l-570 0c-75 0-135 59-135 134l0 402c0 75 60 134 135 134z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.TASK);\r\n          });\r\n          break;\r\n        case Config.SUBPROCESS:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_subprocess_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\"  d=\"M216 716c-86 0-155-69-155-154l0-424c0-85 69-154 155-154l569 0c85 0 154 69 154 154l0 424c0 85-69 154-154 154l-569 0z m0-48l569 0c59 0 106-47 106-106l0-424c0-59-47-106-106-106l-116 0 0 308-338 0 0-15 0-293-115 0c-60 0-106 47-106 106l0 424c0 59 46 106 106 106z m146-359l276 0 0-276-276 0 0 276z m115-39l0-23 0-54-54 0-23 0 0-46 23 0 54 0 0-54 0-23 46 0 0 23 0 54 54 0 23 0 0 46-23 0-54 0 0 54 0 23-46 0z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.SUBPROCESS);\r\n          });\r\n          break;\r\n        case Config.GATEWAY:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_gateway_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M59 376c-14-14-14-38 0-52l415-415c14-14 38-14 52 0l415 415c14 14 14 38 0 52l-415 415c-14 14-38 14-52 0l-415-415z m51-26l390 390 390-390-390-390-390 390z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.GATEWAY);\r\n          });\r\n          break;\r\n        case Config.START_EVENT:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_start_event_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M496 802c-176 0-345-113-412-276-70-161-34-362 89-487 119-128 314-175 477-115 169 58 294 224 301 403 12 176-92 351-250 428-62 31-132 47-201 47-1 0-3 0-4 0z m12-49c173-1 335-126 380-293 47-159-17-344-155-439-143-105-354-97-489 18-136 109-185 309-115 468 60 147 212 248 371 246 3 0 6 0 8 0z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.START_EVENT);\r\n          });\r\n          break;\r\n        case Config.INTERMEDIATE_EVENT:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_intermediate_event_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M496 802c-219 2-422-178-445-396-24-185 78-380 247-461 160-80 368-56 501 66 134 118 190 318 128 486-57 165-214 291-388 303-15 1-29 2-43 2z m8-49c201 3 386-169 398-370 16-178-100-360-271-415-164-56-362 4-460 148-103 144-99 357 19 491 76 92 194 149 314 146z m-12-44c-185 0-352-166-352-352-4-168 124-331 291-360 153-30 322 49 390 191 71 141 39 329-84 431-67 59-156 92-245 90z m14-48c165 1 312-150 305-315 0-150-121-290-272-305-143-19-295 73-336 213-43 134 14 296 139 364 50 29 107 44 164 43z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.INTERMEDIATE_EVENT);\r\n          });\r\n          break;\r\n        case Config.END_EVENT:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_end_event_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M496 802c-203 1-394-153-437-351-41-174 33-368 181-470 143-103 348-111 497-15 150 91 238 275 210 449-26 181-170 339-350 376-33 7-67 11-101 11z m10-142c150 1 287-123 302-271 19-142-72-291-210-334-134-45-296 13-366 138-77 129-45 313 78 403 56 43 126 66 196 64z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.END_EVENT);\r\n          });\r\n          break;\r\n        case Config.TEXT:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_text_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M677 795l0-25 0-411 0-412 0-24 24 0 224 0 25 0 0 49-25 0-199 0 0 387 0 386 199 0 25 0 0 50-25 0-224 0-24 0z m-81-386l-75-60 60-75 75 60-60 75z m-151-119l-75-60 60-75 75 59-60 76z m-150-120l-76-59 60-76 75 60-59 75z m-151-119l-76-60 60-75 76 59-60 76z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.TEXT);\r\n          });\r\n          break;\r\n        case Config.OPEN_SUBPROCESS:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_text_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M150 700l0-25 0-675 700 0 0 700z m44-44l612 0 0-612-612 0z m261-106l0-155-155 0 0-90 155 0 0-155 90 0 0 155 155 0 0 90-155 0 0 155z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_open_subprocess');\r\n          });\r\n          break;\r\n        case Config.CONNECTOR:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_text_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M911 749c0 0-285-146-431-214 31-28 60-59 90-89-147-149-295-299-443-448 11-11 22-21 33-31 148 149 295 299 443 448 30-29 60-60 90-90 77 153 218 424 218 424z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_connect_button', Config.CONNECTOR);\r\n          });\r\n          break;\r\n        case Config.LANE:\r\n          btn = new ContextButton(\r\n            this._paper,\r\n            '<g id=\"append_text_icon\"><path class=\"context_menu_btn__icon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M46-50l0 89 49 0 0-40 16 0 0-49-65 0z m114 0l0 49 97 0 0-49-97 0z m146 0l0 49 98 0 0-49-98 0z m147 0l0 49 97 0 0-49-97 0z m146 0l0 49 98 0 0-49-98 0z m147 0l0 49 97 0 0-49-97 0z m145 0l0 49 13 0 0 40 49 0 0-64 0-25-25 0-37 0z m-845 138l0 92 49 0 0-92-49 0z m858 0l0 92 49 0 0-92-49 0z m-857 139l0 527 906 0 0-527-906 0z m857 48l0 435-810 0 0-435 810 0z\" /></g>',\r\n            this._buttonBar,\r\n            pos,\r\n          );\r\n          btn.on('on_context_button_clicked', () => {\r\n            this.emit('element_on_append', Config.LANE);\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      menuGroup.add(btn._btn);\r\n      this._menuItems.push(btn);\r\n    }\r\n    this._buttonBar = menuGroup.appendTo(\r\n      document.getElementById('ctxMenuLayer'),\r\n    );\r\n  }\r\n\r\n  _updateMenuItemsPosition() {\r\n    const bounds = this._selectionBox.node.getBoundingClientRect();\r\n    // this is to account for the toolbar height\r\n    const svgTop = document.getElementById('app').getBoundingClientRect().top;\r\n    let offsetY = -svgTop;\r\n    let offsetY2 = -svgTop;\r\n    for (let i = 0, len = this._menuItems.length; i < len; i++) {\r\n      let pos = null;\r\n      if (i < 4) {\r\n        pos = { x: bounds.right - 5, y: bounds.y + offsetY };\r\n        offsetY += this._MENU_OFFSET_Y;\r\n      } else {\r\n        pos = { x: bounds.right + 35, y: bounds.y + offsetY2 };\r\n        offsetY2 += this._MENU_OFFSET_Y;\r\n      }\r\n      this._menuItems[i].updatePosition(pos);\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    this._buttonBar.remove();\r\n  }\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\nimport * as Snap from 'snapsvg-cjs';\r\nimport EventEmitter from 'eventemitter3';\r\nimport { isReadable, mostReadable } from '@ctrl/tinycolor';\r\nimport throttle from 'lodash/throttle';\r\nimport Config from 'config';\r\nimport {} from '../../utils/snaptoolkit';\r\nimport ContextMenu from '../controls/contextMenu';\r\nimport { getClosestMultiple } from '../../utils/util';\r\n\r\nexport default class Element extends EventEmitter {\r\n  constructor(type, id, viewport, x, y, properties, isMovable, contextMenuItems) {\r\n    super();\r\n    this._elementType = type;\r\n    this._box = null;\r\n    this._label = null;\r\n    this._graphic = null;\r\n    this._dx = x;\r\n    this._dy = y;\r\n    this._tdx = 0;\r\n    this._tdy = 0;\r\n    this._mx = x;\r\n    this._my = y;\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._viewport = viewport;\r\n    this._hSize = 12;\r\n    this._handles = [];\r\n    this._selectionBox = null;\r\n    this._contextMenuItems = contextMenuItems;\r\n    this._isMovable = isMovable;\r\n\r\n    const style = window.getComputedStyle(document.documentElement);\r\n    this._foregroundColor = style.getPropertyValue('--subprocess-fill-color');\r\n    this._stroke_color = style.getPropertyValue('--stroke-color');\r\n    this._CONTRAST_COLORS_SELECTION = ['#fffb00', '#0433ff', '#00fdff', '00f900'];\r\n\r\n    if (properties) {\r\n      this._properties = properties;\r\n      if (this._properties.size) {\r\n        this._width = this._properties.size.width;\r\n        this._height = this._properties.size.height;\r\n      }\r\n      // boundary props for undo/redo\r\n    } else {\r\n      this._properties = {\r\n        id,\r\n      };\r\n      if (\r\n        this.elementType !== Config.TEXT\r\n        && this.elementType !== Config.START_EVENT\r\n        && this.elementType !== Config.INTERMEDIATE_EVENT\r\n        && this.elementType !== Config.END_EVENT\r\n      ) this._properties.name = `${this.elementType}`;\r\n    }\r\n    if (!this._properties.boundaryEvents) this._properties.boundaryEvents = [];\r\n\r\n    this._selected = false;\r\n    this.SELECTSIZE = Config.ELEMENT_SELECT_SIZE;\r\n\r\n    this.onElementMouseDown = this.onElementMouseDown.bind(this);\r\n    this.onElementMoveEnd = this.onElementMoveEnd.bind(this);\r\n    // throttle to help when multiple moving\r\n    this.onElementMove = throttle(this.onElementMove.bind(this), 80);\r\n    this.onElementMoveStart = this.onElementMoveStart.bind(this);\r\n    this.onHandleDrag = this.onHandleDrag.bind(this);\r\n    this.onHandleDragStart = this.onHandleDragStart.bind(this);\r\n    this.onHandleDragEnd = this.onHandleDragEnd.bind(this);\r\n  }\r\n\r\n  initElement() {\r\n    // init position\r\n    if (this.x !== undefined && this.y !== undefined) {\r\n      this._graphic.transform(`T${this.x},${this.y}`);\r\n    }\r\n\r\n    // init context menu\r\n    this._contextMenu = new ContextMenu(this, this._contextMenuItems);\r\n    this._contextMenu.on('element_on_remove_button_clicked', () => {\r\n      this.emit('element_on_remove_button_clicked');\r\n    });\r\n    this._contextMenu.on('element_on_append', (elementName) => {\r\n      this.emit('element_on_append', elementName);\r\n    });\r\n    this._contextMenu.on('element_on_open_subprocess', () => {\r\n      this.emit('element_on_open_subprocess');\r\n    });\r\n    this._contextMenu.on('element_on_connect_button', (elementName) => {\r\n      this.emit('element_on_connect_button', elementName);\r\n    });\r\n    // selected property for history undo/red\r\n    this.selected = this._properties.selected;\r\n    // hide menu from history when recreated\r\n    this._contextMenu.hide();\r\n  }\r\n\r\n  get x() {\r\n    return this._dx;\r\n  }\r\n\r\n  set x(value) {\r\n    this._dx = value;\r\n    this._graphic.transform(`t${this._dx},${this._dy}`);\r\n  }\r\n\r\n  get y() {\r\n    return this._dy;\r\n  }\r\n\r\n  set y(value) {\r\n    this._dy = value;\r\n    this._graphic.transform(`t${this._dx},${this._dy}`);\r\n  }\r\n\r\n  get mx() {\r\n    return this._mx;\r\n  }\r\n\r\n  get my() {\r\n    return this._my;\r\n  }\r\n\r\n  get properties() {\r\n    return this._properties;\r\n  }\r\n\r\n  get elementType() {\r\n    return this._elementType;\r\n  }\r\n\r\n  get graphic() {\r\n    return this._graphic;\r\n  }\r\n\r\n  get box() {\r\n    return this._box;\r\n  }\r\n\r\n  get paper() {\r\n    return this._viewport;\r\n  }\r\n\r\n  get selected() {\r\n    return this._selected;\r\n  }\r\n\r\n  get selectionBox() {\r\n    return this._selectionBox;\r\n  }\r\n\r\n  get width() {\r\n    return this.selectionBox.getBBox().width;\r\n  }\r\n\r\n  get height() {\r\n    return this.selectionBox.getBBox().height;\r\n  }\r\n\r\n  get boundaryEvents() {\r\n    return this._properties.boundaryEvents;\r\n  }\r\n\r\n  addBoundaryEvents(value) {\r\n    this._properties.boundaryEvents.push(value);\r\n  }\r\n\r\n  removeBoundaryEvents(value) {\r\n    this._properties.boundaryEvents.splice(value, 1);\r\n  }\r\n\r\n  set selected(state) {\r\n    this._selected = state;\r\n    this._properties.selected = state;\r\n    if (state) {\r\n      this._graphic.select('#selectionBox').addClass('element--selected');\r\n      if (this.resizable) {\r\n        this.drawResizeHandles();\r\n      }\r\n      this._onSelected();\r\n    } else {\r\n      this._graphic.select('#selectionBox').removeClass('element--selected');\r\n      if (this.resizable) {\r\n        this.removeResizeHandles();\r\n      }\r\n      this._onDeselected();\r\n    }\r\n  }\r\n\r\n  get id() {\r\n    return this._properties.id;\r\n  }\r\n\r\n  set id(value) {\r\n    this._properties.id = value;\r\n    if (this._properties.activity) {\r\n      this._properties.activity.id = value;\r\n    }\r\n  }\r\n\r\n  set deleteProperty(value) {\r\n    delete this._properties[value];\r\n  }\r\n\r\n  addProperty(object, name, value) {\r\n    object[name] = value;\r\n  }\r\n\r\n  _onSelected() {\r\n    this.emit('element_selected');\r\n  }\r\n\r\n  _onDeselected() {\r\n    this.emit('element_unselected');\r\n  }\r\n\r\n  drawSelectionBox(bounds, className = 'selectionBox') {\r\n    this._selectionBox = this._viewport\r\n      .rect(\r\n        Math.round(bounds.x - this.SELECTSIZE / 2),\r\n        Math.round(bounds.y - this.SELECTSIZE / 2),\r\n        Math.round(bounds.width + this.SELECTSIZE),\r\n        Math.round(bounds.height + this.SELECTSIZE),\r\n      )\r\n      .attr({ class: className, id: 'selectionBox' });\r\n    return this._selectionBox;\r\n  }\r\n\r\n  drawResizeHandles() {\r\n    const bounds = this._selectionBox.getBBox();\r\n    this._handles = [\r\n      this._viewport\r\n        .rect(bounds.x2 - this._hSize / 2, bounds.y2 - this._hSize / 2, this._hSize, this._hSize)\r\n        .attr({ class: 'resize__handle--se', id: 'resize__handle' }),\r\n    ];\r\n\r\n    const handlesGroup = this._viewport\r\n      .g(this._handles[0])\r\n      .drag(this.onHandleDrag, this.onHandleDragStart, this.onHandleDragEnd)\r\n      .attr({ class: 'resize', id: 'resize_group' });\r\n    this._graphic.append(handlesGroup);\r\n  }\r\n\r\n  removeResizeHandles() {\r\n    if (this._graphic.select('#resize_group')) {\r\n      this._graphic.select('#resize_group').remove();\r\n    }\r\n  }\r\n\r\n  onHandleDragStart() {\r\n    // stop dragging object while resizing\r\n    this._graphic.undrag();\r\n    // reposition handle\r\n    this.removeResizeHandles();\r\n    this.drawResizeHandles();\r\n    this.emit('element_resize_start');\r\n  }\r\n\r\n  onHandleDrag(dx, dy, x, y, e) {\r\n    const selBox = this._selectionBox;\r\n    const [se] = this._handles;\r\n\r\n    const snapInvMatrix = selBox.transform().diffMatrix.invert();\r\n    snapInvMatrix.e = 0;\r\n    snapInvMatrix.f = 0;\r\n\r\n    const tdx = snapInvMatrix.x(dx, dy) + this.SELECTSIZE / 2;\r\n    const tdy = snapInvMatrix.y(dx, dy) + this.SELECTSIZE / 2;\r\n\r\n    const ep = this._viewport.getMousePoint(e, 0, 0);\r\n\r\n    const offX = Math.round(ep.x - this._graphic.matrix.e);\r\n    const offY = Math.round(ep.y - this._graphic.matrix.f);\r\n\r\n    if (offX > 0 && offY > 0) {\r\n      se.transform(`t${[tdx, tdy]}`);\r\n      this.emit('element_resizing', offX, offY);\r\n    }\r\n  }\r\n\r\n  onHandleDragEnd() {\r\n    this.emit('element_resize_end');\r\n    this._properties.size = { width: this._width, height: this._height };\r\n    // restore dragging\r\n    this._graphic.drag(this.onElementMove, this.onElementMoveStart, this.onElementMoveEnd);\r\n  }\r\n\r\n  toFront() {\r\n    this._graphic.appendTo(this._viewport);\r\n  }\r\n\r\n  toBack() {\r\n    // insert after grid\r\n    const grid = this._viewport.select('.grid_bg');\r\n    this._graphic.insertAfter(grid);\r\n  }\r\n\r\n  snap(isSnapOn, snapSize) {\r\n    this._isSnapOn = isSnapOn;\r\n    this._snapSize = snapSize;\r\n    if (\r\n      isSnapOn\r\n      && this.elementType !== Config.POOL\r\n      && this.elementType !== Config.LANE\r\n      && this.elementType !== Config.CONNECTOR\r\n    ) {\r\n      // reposition element in closest grid square\r\n      this.x = getClosestMultiple(this.x, snapSize) + this.SELECTSIZE / 2;\r\n      this.y = getClosestMultiple(this.y, snapSize) + this.SELECTSIZE / 2;\r\n      // emit so connectors can update\r\n      this.emit('element_snap_to_grid');\r\n    }\r\n  }\r\n\r\n  onElementMoveStart(x, y, event) {\r\n    this.toFront();\r\n    this._graphic.addClass('draggable');\r\n    this._graphic.data('ot', this._graphic.transform().local);\r\n    this.emit('element_move_start', event);\r\n  }\r\n\r\n  onElementMove(dx, dy, x, y, event) {\r\n    const snapInvMatrix = this._graphic.transform().diffMatrix.invert();\r\n    snapInvMatrix.e = 0;\r\n    snapInvMatrix.f = 0;\r\n\r\n    if (!this._isSnapOn) {\r\n      this._tdx = Math.round(snapInvMatrix.x(dx, dy));\r\n      this._tdy = Math.round(snapInvMatrix.y(dx, dy));\r\n    } else {\r\n      this._tdx = Snap.snapTo(this._snapSize, Math.round(snapInvMatrix.x(dx, dy)), 25);\r\n      this._tdy = Snap.snapTo(this._snapSize, Math.round(snapInvMatrix.y(dx, dy)), 25);\r\n    }\r\n\r\n    this._graphic.transform(`t${[this._tdx, this._tdy]}${this._graphic.data('ot')}`);\r\n\r\n    this._mx = this._tdx;\r\n    this._my = this._tdy;\r\n    this.emit('element_moving', event);\r\n  }\r\n\r\n  onElementMoveEnd(event) {\r\n    this._graphic.removeClass('draggable');\r\n    const newx = this._graphic.matrix.e;\r\n    const newy = this._graphic.matrix.f;\r\n    if (this._dx !== newx || this._dy !== newy) {\r\n      this.emit('element_move_end', event);\r\n      this._dx = newx;\r\n      this._dy = newy;\r\n    } else {\r\n      this.emit('element_no_move_end');\r\n    }\r\n  }\r\n\r\n  onElementMouseDown(e) {\r\n    this.toFront();\r\n    this.emit('element_mouse_down', e);\r\n  }\r\n\r\n  moveElement(x, y) {\r\n    this._graphic.transform(`t${[x, y]}`);\r\n  }\r\n\r\n  moveElementEnd(x, y) {\r\n    this._dx = x;\r\n    this._dy = y;\r\n  }\r\n\r\n  deleteEl(useAnime = true) {\r\n    this._contextMenu.delete();\r\n    if (\r\n      useAnime\r\n      && this.elementType !== Config.CONNECTOR\r\n      && this.elementType !== Config.POOL\r\n      && this.elementType !== Config.LANE\r\n    ) {\r\n      const keyframes = [\r\n        {\r\n          transform: `scale(0.8) translate(${this._dx}px, ${this._dy}px)`,\r\n          easing: 'ease-in',\r\n          transformOrigin: `${this._graphic.getBBox().cx}px ${this._graphic.getBBox().cy}px`,\r\n        },\r\n        {\r\n          transform: `scale(1.4) translate(${this._dx}px, ${this._dy}px)`,\r\n          easing: 'cubic-bezier(.75,-0.5,0,1.75)',\r\n          transformOrigin: `${this._graphic.getBBox().cx}px ${this._graphic.getBBox().cy}px`,\r\n        },\r\n      ];\r\n      const anime = this._graphic.node.animate(keyframes, {\r\n        duration: 200,\r\n        delay: 100,\r\n      });\r\n      anime.onfinish = () => {\r\n        this._graphic.remove();\r\n        this.emit('element_deleted');\r\n      };\r\n    } else {\r\n      this._graphic.remove();\r\n      this.emit('element_deleted');\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    // to delete without emitting event\r\n    this._contextMenu.delete();\r\n    this._graphic.remove();\r\n  }\r\n\r\n  _updateNameLabel(label, bg, text) {\r\n    // set text value\r\n    label.attr('text', text);\r\n    // reposition label\r\n    const bounds = bg.getBBox();\r\n    label.attr('x', Math.round(bounds.x + bounds.width / 2));\r\n  }\r\n\r\n  drawLabel(value, classname, offsetY, bounds) {\r\n    const label = this._viewport.text(0, offsetY, value).attr({\r\n      class: classname,\r\n      dominantBaseline: 'middle',\r\n      textAnchor: 'middle',\r\n    });\r\n    label.attr('x', Math.round(bounds.x + bounds.width / 2));\r\n    return label;\r\n  }\r\n\r\n  drawForeignObjLabel(x, y, width, height, title, classname, id) {\r\n    const fobjectSVG = `<g><foreignObject \r\n      x=\"${x}\"\r\n      y=\"${y}\"\r\n      width=\"${width}\" \r\n      height=\"${height}\"\r\n      id=\"${id}\">\r\n    <p class=\"${classname}\">${title}</p></foreignObject></g>`;\r\n    return Snap.parse(fobjectSVG);\r\n  }\r\n\r\n  updateTextLabel(className, value) {\r\n    const text = this._graphic.select(`.${className}`);\r\n    text.node.innerText = value;\r\n  }\r\n\r\n  _setColors(color, bg, text, iconsArray) {\r\n    if (color !== '#ffffff') {\r\n      if (!isReadable(color, this._stroke_color, { level: 'AA', size: 'small' })) {\r\n        this._foregroundColor = mostReadable(color, this._CONTRAST_COLORS_SELECTION, {\r\n          includeFallbackColors: true,\r\n          level: 'AA',\r\n          size: 'small',\r\n        }).toHexString();\r\n      } else {\r\n        this._foregroundColor = this._stroke_color;\r\n      }\r\n    } else {\r\n      this._foregroundColor = this._stroke_color;\r\n    }\r\n    // bg\r\n    this.graphic.select(bg).attr({\r\n      fill: color,\r\n      stroke: this._foregroundColor,\r\n    });\r\n    // text\r\n    const taskText = this.graphic.select(text);\r\n    if (taskText) {\r\n      taskText.attr({\r\n        color: this._foregroundColor,\r\n      });\r\n    }\r\n    // icons\r\n    for (let i = 0; i < iconsArray.length; i++) {\r\n      const icon = this.graphic.select(iconsArray[i]);\r\n      if (icon) {\r\n        icon.attr({\r\n          fill: this._foregroundColor,\r\n          stroke: this._foregroundColor,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  set documentation(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (this.documentation) {\r\n      this._properties.documentation.text = value.text;\r\n    } else {\r\n      this._properties.documentation = {\r\n        id: value.id,\r\n        text: value.text,\r\n      };\r\n    }\r\n  }\r\n\r\n  get documentation() {\r\n    const doc = this._properties.documentation || {};\r\n    return doc.text || '';\r\n  }\r\n\r\n  deletePropertyByName(name) {\r\n    if (this._properties[name]) {\r\n      delete this._properties[name];\r\n    }\r\n  }\r\n}\r\n","import * as Snap from 'snapsvg-cjs';\r\nimport Config from 'config';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport Element from './element';\r\n\r\nexport default class Task extends Element {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.TASK, id, viewport, x, y, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TASK,\r\n      Config.SUBPROCESS,\r\n      Config.END_EVENT,\r\n      Config.INTERMEDIATE_EVENT,\r\n      Config.GATEWAY,\r\n      Config.TEXT,\r\n      Config.CONNECTOR,\r\n    ]);\r\n    this._WIDTH = Config.TASK_SIZE.width;\r\n    this._HEIGHT = Config.TASK_SIZE.height;\r\n\r\n    if (!properties) {\r\n      this._properties.taskType = 'user';\r\n      this._properties.loopType = 'none';\r\n      this._properties.name = 'Default_Task';\r\n      this._properties.title = 'Default Task';\r\n      this._properties.taskId = 2;\r\n      this._properties.condition = '';\r\n      this._properties.color = '#ffffff';\r\n      this._properties.activity = {\r\n        id,\r\n        name: 'Default_Task',\r\n      };\r\n    }\r\n\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get taskType() {\r\n    return this._properties.taskType;\r\n  }\r\n\r\n  set taskType(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.taskType = value;\r\n    this._updateTaskTypeIcon();\r\n  }\r\n\r\n  get loopType() {\r\n    return this._properties.loopType;\r\n  }\r\n\r\n  set loopType(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.loopType = value;\r\n    this._updateLoopTypeIcon();\r\n  }\r\n\r\n  set taskName(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.activity.name = value.name;\r\n    this._properties.name = value.name;\r\n    if (value.id) this._properties.taskId = parseInt(value.id, 10);\r\n    if (value.label) this.title = value.label;\r\n  }\r\n\r\n  get taskName() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  get title() {\r\n    return this._properties.title || '';\r\n  }\r\n\r\n  set title(value) {\r\n    this._properties.title = value;\r\n    this._updateTitleLabel();\r\n  }\r\n\r\n  get comments() {\r\n    return this._properties.comments;\r\n  }\r\n\r\n  set comments(value) {\r\n    this._properties.comments = value;\r\n  }\r\n\r\n  get condition() {\r\n    return this._properties.condition;\r\n  }\r\n\r\n  set condition(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.condition = value;\r\n  }\r\n\r\n  get role() {\r\n    return this._properties.role;\r\n  }\r\n\r\n  get roleId() {\r\n    return this._properties.role.id;\r\n  }\r\n\r\n  get roleName() {\r\n    return this._properties.role.name;\r\n  }\r\n\r\n  set role(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this._properties.role) this._properties.role = {};\r\n    this._properties.role.id = parseInt(value.id, 10);\r\n    this._properties.role.name = value.name;\r\n  }\r\n\r\n  get groups() {\r\n    return this._properties.groups;\r\n  }\r\n\r\n  set groups(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.groups = value;\r\n  }\r\n\r\n  // Only for facilis purpose\r\n  get multiplyCount() {\r\n    return this._properties.multiplyCount;\r\n  }\r\n\r\n  // Only for facilis purpose\r\n  set multiplyCount(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiplyCount = value;\r\n  }\r\n\r\n  createDefaultGroup() {\r\n    if (!this._properties.groups) {\r\n      this.groups = [];\r\n    }\r\n  }\r\n\r\n  objectIndex(obj, prop, idCompare = 'id') {\r\n    const copyArray = Array.isArray(prop) ? prop : this._properties[prop] || [];\r\n    const index = copyArray.findIndex((value) => {\r\n      return parseInt(value[idCompare], 10) === parseInt(obj[idCompare], 10);\r\n    });\r\n    return index;\r\n  }\r\n\r\n  setPropertyObject(object, propArray, propToChange, value) {\r\n    const index = this.objectIndex(object, propArray);\r\n    if (index !== -1 && this._properties[propArray]) {\r\n      this.emit('element_onpropertychange');\r\n      if (Array.isArray(propToChange) && Array.isArray(value)) {\r\n        let i = 0;\r\n        propToChange.forEach((prop) => {\r\n          this._properties[propArray][index][prop] = value[i];\r\n          i++;\r\n        });\r\n      } else {\r\n        this._properties[propArray][index][propToChange] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteBindingInIndex(indexEvt, indexBin) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events[indexEvt].bindings.splice(indexBin, 1);\r\n  }\r\n\r\n  createDefaultSchedule() {\r\n    if (!this.schedule) {\r\n      this.schedule = {};\r\n    }\r\n  }\r\n\r\n  get forms() {\r\n    return this._properties.forms;\r\n  }\r\n\r\n  set forms(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.forms = value;\r\n  }\r\n\r\n  setSpecificFormInStepByIndex(\r\n    indexStep,\r\n    type,\r\n    newForm = undefined,\r\n    indexForm,\r\n    property,\r\n    value,\r\n  ) {\r\n    this.emit('element_onpropertychange');\r\n    if (newForm) {\r\n      this._properties.forms[indexStep][type] = newForm;\r\n    } else {\r\n      this._properties.forms[indexStep][type][indexForm][property] = value;\r\n    }\r\n  }\r\n\r\n  get multiInstanceAttributeName() {\r\n    return this.multiInstance ? this.multiInstance.attribute : undefined;\r\n  }\r\n\r\n  insertForm(newForm) {\r\n    if (!this.forms) {\r\n      this._properties.forms = [];\r\n    }\r\n    this.forms.push(newForm);\r\n  }\r\n\r\n  get states() {\r\n    return this._properties.states;\r\n  }\r\n\r\n  set states(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.states = value;\r\n  }\r\n\r\n  createDefaultStates() {\r\n    if (!this.states) this._properties.states = [];\r\n  }\r\n\r\n  insertState(newState) {\r\n    if (!this.states) {\r\n      this._properties.states = [];\r\n    }\r\n    this.states.push(newState);\r\n  }\r\n\r\n  get events() {\r\n    return this._properties.events;\r\n  }\r\n\r\n  set events(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events = value;\r\n  }\r\n\r\n  setPropertyWithoutSave(property, value) {\r\n    this._properties[property] = value;\r\n    if (property === 'loopType') {\r\n      this._updateLoopTypeIcon();\r\n    }\r\n    if (property === 'taskType') {\r\n      this._updateTaskTypeIcon();\r\n    }\r\n  }\r\n\r\n  setBindingsEventByIndex(index, value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events[index].bindings = value;\r\n  }\r\n\r\n  setBindingEvent(indexEvt, indexBinding, value) {\r\n    if (indexBinding === -1) {\r\n      this.events[indexEvt].bindings.push(value);\r\n    } else {\r\n      this._properties.events[indexEvt].bindings[indexBinding] = value;\r\n    }\r\n  }\r\n\r\n  setSpecificBindingAttribute(event, attr, type, value = null) {\r\n    const eventIndex = this.objectIndex(event, 'events');\r\n    if (eventIndex !== -1) {\r\n      const attrs = this.events[eventIndex].bindings || [];\r\n      const attrIndex = attrs.findIndex((bin) => {\r\n        return parseInt(bin.busClaParId, 10) === parseInt(attr.id, 10);\r\n      });\r\n      if (attrIndex !== -1) {\r\n        this.emit('element_onpropertychange');\r\n        this.events[eventIndex].bindings[attrIndex].busClaParBndType = type;\r\n        if (type === 'V' && value) {\r\n          this.events[eventIndex].bindings[attrIndex].busClaParBndValue = value;\r\n        }\r\n        if ((type === 'E' || type === 'P') && value) {\r\n          this.events[eventIndex].bindings[attrIndex].attId = value.attId;\r\n          this.events[eventIndex].bindings[attrIndex].attTooltip = value.attTooltip;\r\n          this.events[eventIndex].bindings[attrIndex].attName = value.attName;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createDefaultEvents() {\r\n    if (!this._properties.events) this._properties.events = [];\r\n  }\r\n\r\n  insertEvent(newEvent) {\r\n    if (!this.events) {\r\n      this._properties.events = [];\r\n    }\r\n    this.events.push(newEvent);\r\n  }\r\n\r\n  get multiInstance() {\r\n    return this._properties.multiInstance;\r\n  }\r\n\r\n  set multiInstance(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiInstance = value;\r\n  }\r\n\r\n  get multiInstanceType() {\r\n    return this.multiInstance ? this.multiInstance.type : undefined;\r\n  }\r\n\r\n  set multiInstanceType(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (value === 'value' && !isEmpty(this.multiInstanceAttribute || {})) {\r\n      delete this._properties.multiInstance.attributeId;\r\n      delete this._properties.multiInstance.attribute;\r\n    }\r\n    if (value === 'attribute' && this.multiInstanceValue) {\r\n      delete this._properties.multiInstance.value;\r\n    }\r\n    this._properties.multiInstance.type = value;\r\n  }\r\n\r\n  get multiInstanceValue() {\r\n    return this.multiInstance ? this.multiInstance.value : undefined;\r\n  }\r\n\r\n  set multiInstanceValue(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiInstance.value = value;\r\n  }\r\n\r\n  get multiInstanceAttribute() {\r\n    const attribute = {};\r\n    const multiInstance = this.multiInstance || {};\r\n    if (multiInstance.attributeId && multiInstance.attribute) {\r\n      attribute.id = this.multiInstance.attributeId;\r\n      attribute.name = this.multiInstance.attribute;\r\n    }\r\n    return attribute;\r\n  }\r\n\r\n  get schedule() {\r\n    return this._properties.schedule;\r\n  }\r\n\r\n  set schedule(value) {\r\n    this._properties.schedule = value;\r\n  }\r\n\r\n  set scheduleId(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.schedule.id = value;\r\n  }\r\n\r\n  get scheduleId() {\r\n    return this.schedule ? this.schedule.id : undefined;\r\n  }\r\n\r\n  get scheduleName() {\r\n    return this.schedule ? this.schedule.scheduleName : undefined;\r\n  }\r\n\r\n  set scheduleName(value) {\r\n    this._properties.schedule.scheduleName = value;\r\n  }\r\n\r\n  set scheduleType(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.schedule.type = value;\r\n  }\r\n\r\n  get scheduleType() {\r\n    return this.schedule ? this.schedule.type : undefined;\r\n  }\r\n\r\n  set scheduleSubprocess(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.schedule.subprocess = value;\r\n    this._properties.schedule.task = '';\r\n    this._properties.schedule.taskName = '';\r\n  }\r\n\r\n  set scheduleSubprocessName(value) {\r\n    this._properties.schedule.subprocessName = value;\r\n  }\r\n\r\n  get scheduleSubprocessName() {\r\n    return this.schedule ? this.schedule.subprocessName : undefined;\r\n  }\r\n\r\n  get scheduleTask() {\r\n    return this.schedule ? this.schedule.task : undefined;\r\n  }\r\n\r\n  set scheduleTask(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.schedule.task = value;\r\n  }\r\n\r\n  get scheduleTaskName() {\r\n    return this.schedule ? this._properties.schedule.taskName : undefined;\r\n  }\r\n\r\n  set scheduleTaskName(value) {\r\n    this._properties.schedule.taskName = value;\r\n  }\r\n\r\n  deleteScheduleProperties(props) {\r\n    this.emit('element_onpropertychange');\r\n    props.forEach((prop) => {\r\n      delete this._properties.schedule[prop];\r\n    });\r\n    if (this._properties.schedule === {}) {\r\n      delete this._properties.schedule;\r\n    }\r\n  }\r\n\r\n  get taskId() {\r\n    return this._properties.taskId || '';\r\n  }\r\n\r\n  set taskId(value) {\r\n    this._properties.taskId = value;\r\n  }\r\n\r\n  get color() {\r\n    return this._properties.color || '#FFFFFF';\r\n  }\r\n\r\n  set color(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.color = value;\r\n    this._setColors(this.color, '.task__bg', '.task__group__text', [\r\n      '.task__looptypeicon',\r\n      '.task__typeicon',\r\n    ]);\r\n  }\r\n\r\n  get inputMessageRef() {\r\n    return this._properties.inputMessageRef;\r\n  }\r\n\r\n  get wsMethodName() {\r\n    return this.inputMessageRef ? this.inputMessageRef.wsMethodName : undefined;\r\n  }\r\n\r\n  get imrAttrProc() {\r\n    return this.inputMessageRef ? this.inputMessageRef.attrProc : undefined;\r\n  }\r\n\r\n  get imrAttrEnt() {\r\n    return this.inputMessageRef ? this.inputMessageRef.attrEnt : undefined;\r\n  }\r\n\r\n  set inputMessageRef(value) {\r\n    this._properties.inputMessageRef = value;\r\n  }\r\n\r\n  set wsMethodName(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.inputMessageRef) this.inputMessageRef = {};\r\n    this._properties.inputMessageRef.wsMethodName = value;\r\n  }\r\n\r\n  insertAttributeInputMsgRef(arrayType, value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.inputMessageRef) this._properties.inputMessageRef = {};\r\n    if (!this.inputMessageRef[arrayType]) {\r\n      this._properties.inputMessageRef[arrayType] = [];\r\n    }\r\n    this.inputMessageRef[arrayType].push(value);\r\n  }\r\n\r\n  cleanAttributesInputMsgRef(arrayType) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.inputMessageRef[arrayType] = [];\r\n  }\r\n\r\n  editAttributesInputMsgRef(arrayType, index, value) {\r\n    if (this.inputMessageRef[arrayType][index]) {\r\n      this.emit('element_onpropertychange');\r\n      this.inputMessageRef[arrayType][index] = value;\r\n    }\r\n  }\r\n\r\n  deleteAttributeInputMsgRef(arrayType, index) {\r\n    if (this.inputMessageRef[arrayType][index]) {\r\n      this.emit('element_onpropertychange');\r\n      this.inputMessageRef[arrayType].splice(index, 1);\r\n    }\r\n  }\r\n\r\n  get outputMessageRef() {\r\n    return this._properties.outputMessageRef;\r\n  }\r\n\r\n  set outputMessageRef(value) {\r\n    this._properties.outputMessageRef = value;\r\n  }\r\n\r\n  createDefaultBPMNAutoComplete() {\r\n    if (!this.outputMessageRef) this.outputMessageRef = [];\r\n    const defaultWs = {\r\n      id: 1,\r\n      eventId: 11,\r\n      busClaId: 102,\r\n      busClaName: 'BPMNAutoComplete',\r\n      name: 'ONREADY',\r\n      order: 0,\r\n      WS: true,\r\n    };\r\n    this._properties.outputMessageRef.push(defaultWs);\r\n  }\r\n\r\n  addWebServiceOutputMsgRef(webService) {\r\n    this.emit('element_onpropertychange');\r\n    this.outputMessageRef.push(webService);\r\n  }\r\n\r\n  editWebServiceOutputMsgRef(index, value) {\r\n    if (this.outputMessageRef[index]) {\r\n      this.emit('element_onpropertychange');\r\n      this.outputMessageRef[index] = value;\r\n    }\r\n  }\r\n\r\n  deleteWebServiceOutputMsgRef(index) {\r\n    if (this.outputMessageRef[index]) {\r\n      this.emit('element_onpropertychange');\r\n      this.outputMessageRef.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  cleanWebServicesOutputMsgRef() {\r\n    if (this.outputMessageRef) {\r\n      this.emit('element_onpropertychange');\r\n      this.outputMessageRef = [];\r\n    }\r\n  }\r\n\r\n  deleteBindingWebServiceOutputMsgRef(indexWs, indexBin) {\r\n    if (this.outputMessageRef[indexWs].bindings[indexBin]) {\r\n      this.emit('element_onpropertychange');\r\n      this.outputMessageRef[indexWs].bindings.splice(indexBin, 1);\r\n    }\r\n  }\r\n\r\n  setWebServicePropertyOutputMsgRef(indexWs, indexBin, property, value) {\r\n    if (this.outputMessageRef[indexWs].bindings[indexBin]) {\r\n      const webService = this.outputMessageRef[indexWs];\r\n      this.emit('element_onpropertychange');\r\n      if (Array.isArray(property) && Array.isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n          webService.bindings[indexBin][property[i]] = value[i];\r\n        }\r\n      } else {\r\n        webService.bindings[indexBin][property] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteValueWebServiceProperty(indexWs, indexBin) {\r\n    if (this.outputMessageRef[indexWs].bindings[indexBin]) {\r\n      delete this.outputMessageRef[indexWs].bindings[indexBin]\r\n        .busClaParBndValue;\r\n    }\r\n  }\r\n\r\n  deleteAttributeWebServicesProperties(indexWs, indexBin) {\r\n    if (this.outputMessageRef[indexWs].bindings[indexBin]) {\r\n      delete this.outputMessageRef[indexWs].bindings[indexBin].attId;\r\n      delete this.outputMessageRef[indexWs].bindings[indexBin].attTooltip;\r\n      delete this.outputMessageRef[indexWs].bindings[indexBin].attName;\r\n    }\r\n  }\r\n\r\n  addBindingWebServiceOutputMsgRef(wsIndex, binding) {\r\n    if (this.outputMessageRef[wsIndex]) {\r\n      this.emit('element_onpropertychange');\r\n      if (!this.outputMessageRef[wsIndex].bindings) this.outputMessageRef[wsIndex].bindings = [];\r\n      this.outputMessageRef[wsIndex].bindings.push(binding);\r\n    }\r\n  }\r\n\r\n  drawElement() {\r\n    this._box = this._viewport\r\n      .rect(0, 0, this._WIDTH, this._HEIGHT, 8)\r\n      .attr({ class: 'task__bg', fill: this.color });\r\n\r\n    this._label = this.drawForeignObjLabel(\r\n      0,\r\n      0,\r\n      this._WIDTH,\r\n      this._HEIGHT,\r\n      this.title,\r\n      'task__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    this._label.select('g').attr({\r\n      class: 'task__group',\r\n    });\r\n\r\n    const taskBox = this._box.appendTo(this._viewport);\r\n    const bounds = taskBox.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const typeIconGroup = this._drawTaskTypeIcon();\r\n    const loopTypeIconGroup = this._drawLoopTypeIcon();\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, taskBox, this._label, typeIconGroup, loopTypeIconGroup)\r\n      .mousedown(this.onElementMouseDown)\r\n      .attr({ class: 'task', id: `${Config.TASK}_${this._properties.id}` });\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n\r\n    this._setColors(this.color, '.task__bg', '.task__group__text', [\r\n      '.task__looptypeicon',\r\n      '.task__typeicon',\r\n    ]);\r\n  }\r\n\r\n  _drawTaskTypeIcon() {\r\n    let typeIcon;\r\n    switch (this.taskType.toUpperCase()) {\r\n      case 'USER':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M496 668c-89 0-152-69-152-146l0 0 0 0c0-24 6-48 16-71 7-16 16-31 27-43-65-22-140-58-178-130l-2-4 0-231 578 0 0 231-2 4c-37 71-111 107-175 129 31 32 40 73 40 115l0 0 0 0c0 77-63 146-152 146z m-61-83c5 0 9 0 14-1 39-2 53-9 63-16 10-6 17-13 44-14l0 0 0 0c21 1 32 5 39 9 3 2 5 4 8 5 7-14 10-30 10-46 0-47-8-80-51-106l4-32c9-3 19-6 28-9 1-5 3-13 4-20 1-8 1-16 1-23-1-6-3-9-3-10-22-21-61-34-100-34-39 0-78 13-100 34 0 1-2 4-3 10 0 7 0 15 1 23 1 7 3 15 4 20 9 3 19 6 27 9l3 34c-2 2-4 4-7 6-9 7-21 23-29 41-8 19-13 40-13 57 0 20 5 39 15 56 2 1 4 1 6 2 7 3 18 5 35 5z m-75-225c0 0 0 0 0-1-2-9-2-20-1-30 1-11 4-22 13-31 31-31 78-45 124-45 46 0 93 14 124 45 10 9 12 20 13 31 2 10 1 21-1 30 0 1 0 1 0 1 48-21 93-50 118-95l0-187-83 0 0 132-35 0 0-132-272 0 0 132-35 0 0-132-83 0 0 187c25 45 70 74 118 95z\" /></g>',\r\n        );\r\n        break;\r\n      case 'SERVICE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M413 631c0-19 0-37 0-56-16-4-30-10-44-18l-40 39-74-74 40-40c-8-13-14-28-18-43l-56 0 0-106 56 0c6-20 17-39 28-55l0 91-49-1 0 36 49 0 3 14c4 20 12 40 23 57l8 12-34 35 25 25 34-34 12 8c18 11 38 19 58 24l14 3 0 48 36 0 0-48 14 0 80 0c-9 10-46 24-59 28l0 55c-39 0-70 0-106 0z m100-101l0-55c-16-5-31-11-44-19l-40 40-74-75 39-40c-7-13-13-28-17-43l-57 0 0-106 57 1c5-16 11-30 18-44l-40-40 75-74 41 40c13-8 28-14 44-18l0-57c36 0 74 0 105 0l0 58c16 4 31 10 44 18l41-40 74 75-41 40c8 14 14 28 18 44l56 0 0 105-56 0c-5 16-11 30-19 43l39 39-75 74-39-39c-14 8-28 14-44 18l1 55-106 0z m35-35l36 0-1-48 15-3c20-4 40-12 58-23l11-8 34 34 25-25-33-34 8-12c12-18 20-37 24-57l3-14 49 0 0-35-49-1-3-14c-4-20-12-40-23-57l-8-12 36-35-26-26-35 36-12-8c-18-12-38-20-58-24l-14-3 0-51c-9 0-20 0-35 0l0 50-15 3c-20 4-40 12-58 24l-11 8-36-36-26 25 36 35-8 12c-12 18-20 38-24 58l-3 14-50-1 0 36 50 0 3 14c4 21 12 40 23 58l8 12-35 34 25 25 35-34 12 8c18 12 37 19 58 24l14 3 0 48z m18-128c-43 0-79-36-79-79 0-44 36-79 79-79 43 0 79 35 79 79 0 43-36 79-79 79z m0-35c25 0 44-20 44-44 0-25-19-44-44-44-24 0-44 19-44 44 0 24 20 44 44 44z\" /></g>',\r\n        );\r\n        break;\r\n      case 'RECEIVE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M95 618l0-535 811 0 0 535-811 0z m83-35l644 0-322-212-322 212z m-48-10l370-244 371 244 0-455-741 0 0 455z\" /></g>',\r\n        );\r\n        break;\r\n      case 'MANUAL':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M460 659c-11 0-22-5-31-10l0 0 0 0c-47-31-209-143-245-168l0 0 0 0c-32-22-54-55-66-95l0 0 0 0c-13-41-11-86-11-124l0 0 0 0c0-28 1-53 8-83 0 0 0 0 0 0 11-44 31-75 61-95 29-19 65-26 105-26 147-1 293-1 439 0l0 0 0 0c16 0 31 6 41 18 10 12 14 28 14 45 0 11-2 22-5 32l16 0c16 0 30 4 40 14 11 9 16 22 19 35l0 0c4 19 2 38-6 53 17 2 31 8 41 19 10 13 13 29 13 47 0 18-4 35-14 49-10 13-27 23-46 23l0 0 0 0c-7 0-13 0-21 0 4 9 6 19 6 31l0 0 0 0c0 17-5 35-15 48-10 14-27 23-46 23-112 0-223-1-317-1 5 5 9 10 15 15 16 17 31 32 39 42 20 25 23 59 6 83-8 13-21 22-34 24-2 0-4 1-5 1l0 0c-1 0-1 0-1 0z m0-35c0 0 1 0 1-1 3 0 6-1 10-8l0 0 0 0c6-9 6-29-4-42l0 0 0 0c-4-5-21-23-37-39-16-16-32-31-39-40-8-9-5-16-3-21 2-5 4-10 14-12 3-1 4-1 5-1 0 0 1 0 3 0 2 0 5 0 9 0 113-1 225 0 338 0l0 0 0 0c9 0 13-3 18-9 4-6 8-16 8-28 0-12-3-19-7-24-3-4-8-6-19-6l-242 0 0-35 242 0 0 0c34 0 51 0 76 0 9 0 13-3 18-9 4-6 7-16 7-28l0 0c0-13-2-21-5-24-3-4-8-7-20-7-4 0-34 0-47 0 0 0 0 0-1 0-90 0-180 0-270 0l0 0 0-35 0 0c0 0 191 0 271 0 10 0 15-4 20-12 5-8 7-20 5-34l0 0 0 0c-2-9-5-14-8-17-3-2-7-4-17-4-90 0-181 0-271 0l0 0 0-35 0 0 205 0 0 0c7 0 10-2 14-7 3-4 6-13 6-25l0 0 0 0c0-11-3-19-6-23-3-4-6-5-14-5-146-1-292-1-438 0l0 0 0 0c-37 0-66 6-87 20-21 14-37 37-46 74l0 1 0 0c-6 26-7 47-7 74l0 0c0 39-1 80 9 114 11 34 28 59 53 76l0 0c36 25 199 138 244 167l0 0c5 3 8 4 11 4 0 1 1 1 1 1z\" /></g>',\r\n        );\r\n        break;\r\n      case 'SCRIPT':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M380 661l-4-2-2-1c-58-35-98-67-125-98-26-31-39-62-40-92 0-60 44-105 83-145 39-40 74-78 78-109 1-16-3-32-20-54-17-22-49-48-99-78l-74-43 458 0 5 3 1 0c53 31 89 60 112 89 23 29 32 59 29 88-6 56-52 97-90 137-39 39-70 76-70 112 0 17 7 37 29 62 21 25 57 55 113 88l0 0 73 43-457 0z m13-46l282 0c-25-19-45-37-60-55-26-31-39-62-39-92-1-60 43-105 82-145 39-40 74-78 78-109 1-16-2-32-20-54-16-21-47-46-94-74l-283 0c20 15 36 30 47 45 23 29 33 59 30 88-6 56-52 97-91 137-38 39-70 76-69 112 0 17 7 37 28 62 21 25 56 53 109 85z m-66-80l0-21 220 0 0 21-220 0z m-9-115l0-22 229 0 0 22-229 0z m104-116l0-21 221 0 0 21-221 0z m31-115l0-22 229 0 0 22-229 0z\" /></g>',\r\n        );\r\n        break;\r\n      case 'SEND':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M99 608l401-227 401 227-802 0z m1-84l0-448 802 0 0 448-402-224-400 224z\" /></g>',\r\n        );\r\n        break;\r\n      case 'BUSINESSRULE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"task__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M89 659l0-617 822 0 0 617-822 0z m35-209l159 0 0-173-159 0 0 173z m194 0l558 0 0-173-558 0 0 173z m-194-208l159 0 0-165-159 0 0 165z m194 0l558 0 0-165-558 0 0 165z\" /></g>',\r\n        );\r\n        break;\r\n      case 'NONE':\r\n        typeIcon = Snap.parse('<g id=\"typeicon\"></g>');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    const typeIconGroup = typeIcon.select('g');\r\n    typeIconGroup.transform(`s0.03, T${4},${23}`);\r\n    const taskTypeIcon = typeIcon.select('.task__typeicon');\r\n    if (taskTypeIcon) {\r\n      taskTypeIcon.attr({\r\n        fill: this._foregroundColor,\r\n      });\r\n    }\r\n    return typeIconGroup;\r\n  }\r\n\r\n  _updateTaskTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#typeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const typeIconGroup = this._drawTaskTypeIcon();\r\n    typeIconGroup.appendTo(this._graphic);\r\n  }\r\n\r\n  _drawLoopTypeIcon() {\r\n    let looptypeIcon;\r\n    switch (this.loopType.toUpperCase()) {\r\n      case 'MULTIINSTANCE':\r\n        looptypeIcon = Snap.parse(\r\n          '<g id=\"looptypeicon\"><path class=\"task__looptypeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M250 650l0-600 100 0 0 600-100 0z m200 0l0-600 100 0 0 600-100 0z m200 0l0-600 100 0 0 600-100 0z\" /></g>',\r\n        );\r\n        break;\r\n      case 'NONE':\r\n        looptypeIcon = Snap.parse('<g id=\"looptypeicon\"></g>');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const loopTypeIconGroup = looptypeIcon.select('g');\r\n    loopTypeIconGroup.transform(\r\n      `s0.022, T${this._WIDTH / 2 - 10},${this._HEIGHT - 8}`,\r\n    );\r\n\r\n    const taskLoopTypeIcon = looptypeIcon.select('.task__looptypeicon');\r\n    if (taskLoopTypeIcon) {\r\n      taskLoopTypeIcon.attr({\r\n        fill: this._foregroundColor,\r\n      });\r\n    }\r\n\r\n    return loopTypeIconGroup;\r\n  }\r\n\r\n  _updateLoopTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#looptypeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const loopTypeIconGroup = this._drawLoopTypeIcon();\r\n    loopTypeIconGroup.appendTo(this._graphic);\r\n  }\r\n\r\n  _updateTitleLabel() {\r\n    const text = this._graphic.select('.task__group__text');\r\n    text.node.innerText = this.title;\r\n  }\r\n\r\n  // Only for Facilis purpose\r\n  deleteFormIfExist(form) {\r\n    let deleteFlag = false;\r\n    if (this.forms) {\r\n      this.forms.forEach((step) => {\r\n        const {\r\n          EForms, PForms, entity, process,\r\n        } = step;\r\n        const indexEForm = EForms.findIndex((frm) => frm.id === form.id);\r\n        const indexPForm = PForms.findIndex((frm) => frm.id === form.id);\r\n        if (indexEForm !== -1) {\r\n          EForms.splice(indexEForm, 1);\r\n          const updEnt = Number.parseInt(entity, 10) - 1;\r\n          step.entity = updEnt.toString();\r\n          deleteFlag = true;\r\n        }\r\n        if (indexPForm !== -1) {\r\n          PForms.splice(indexPForm, 1);\r\n          const updProc = Number.parseInt(process, 10) - 1;\r\n          step.process = updProc.toString();\r\n          deleteFlag = true;\r\n        }\r\n      });\r\n    }\r\n    return deleteFlag;\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport Element from './element';\r\n\r\nexport default class EventElement extends Element {\r\n  constructor(\r\n    event,\r\n    id,\r\n    x,\r\n    y,\r\n    viewport,\r\n    properties,\r\n    isMovable,\r\n    contextMenuItems,\r\n  ) {\r\n    super(event, id, viewport, x, y, properties, isMovable, contextMenuItems);\r\n    this._radius = Config.EVENT_SIZE.radius;\r\n    if (!properties) {\r\n      this._properties.type = 'none';\r\n      const nameEvt = this.elementType.split('Event');\r\n      this._properties.activity = { id, name: `${nameEvt[0]} Event` };\r\n    }\r\n    this.drawElement();\r\n  }\r\n\r\n  get isAttached() {\r\n    return this._properties.isAttached;\r\n  }\r\n\r\n  get radius() {\r\n    return this._radius;\r\n  }\r\n\r\n  get eventName() {\r\n    return this._properties.activity.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this._properties.activity.name = value;\r\n  }\r\n\r\n  get eventType() {\r\n    return this._properties.type;\r\n  }\r\n\r\n  get message() {\r\n    return this._properties.message;\r\n  }\r\n\r\n  get timer() {\r\n    return this._properties.timer;\r\n  }\r\n\r\n  set timer(value) {\r\n    this._properties.timer = value;\r\n  }\r\n\r\n  get trasitions() {\r\n    return this._properties.trasitions || [];\r\n  }\r\n\r\n  set message(value) {\r\n    this._properties.message = value;\r\n  }\r\n\r\n  get webServiceMessage() {\r\n    return this.message ? this.message.webService : undefined;\r\n  }\r\n\r\n  get catchThrowMessage() {\r\n    return this.message ? this.message.catchThrow : undefined;\r\n  }\r\n\r\n  set catchThrowMessage(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._createDefaultMessage();\r\n    this._properties.message.catchThrow = value;\r\n  }\r\n\r\n  getFactorFrequency(unit) {\r\n    switch (unit) {\r\n      case 'MINUTES':\r\n        return 1000;\r\n      case 'HOURS':\r\n        return 60000;\r\n      case 'DAYS':\r\n        return 1440000;\r\n      case 'WEEKS':\r\n        return 10080000;\r\n      default:\r\n        break;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  addTransition(transition) {\r\n    if (this.trasitions.length === 0) {\r\n      this._properties.trasitions = [];\r\n    }\r\n    this.trasitions.push(transition);\r\n  }\r\n\r\n  get processAttributesMessage() {\r\n    return this.message ? this.message.attrProc : [];\r\n  }\r\n\r\n  get entityAttributesMessage() {\r\n    return this.message ? this.message.attrEnt : [];\r\n  }\r\n\r\n  set processAttributesMessage(value) {\r\n    this._properties.message.attrProc = value;\r\n  }\r\n\r\n  set entityAttributesMessage(value) {\r\n    this._properties.message.attrEnt = value;\r\n  }\r\n\r\n  set webServiceMessage(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._createDefaultMessage();\r\n    this._properties.message.webService = value;\r\n  }\r\n\r\n  get webServices() {\r\n    return this._properties.events;\r\n  }\r\n\r\n  set webServices(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events = value;\r\n  }\r\n\r\n  _createDefaultMessage() {\r\n    if (!this.message) {\r\n      const type = this.elementType;\r\n      const catchThrow = type === Config.START_EVENT || type === Config.INTERMEDIATE_EVENT\r\n        ? 'catch'\r\n        : 'throw';\r\n      this._properties.message = { catchThrow };\r\n    }\r\n  }\r\n\r\n  get dateTimer() {\r\n    return this.timer.date;\r\n  }\r\n\r\n  set dateTimer(value) {\r\n    this._properties.timer.date = value;\r\n  }\r\n\r\n  get frequencyTimer() {\r\n    return this.timer ? this.timer.frequency : undefined;\r\n  }\r\n\r\n  set frequencyTimer(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._createDefaultFrequencyTimer();\r\n    this._properties.timer.frequency = value;\r\n  }\r\n\r\n  get attributeTimer() {\r\n    return this.timer ? this.timer.attribute : undefined;\r\n  }\r\n\r\n  set attributeTimer(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._createDefaultAttributeTimer();\r\n    this._properties.timer.attribute = value;\r\n  }\r\n\r\n  _createDefaultDateTimer() {\r\n    if (!this.timer) this.timer = {};\r\n    if (!this.dateTimer) this.dateTimer = {};\r\n  }\r\n\r\n  _createDefaultFrequencyTimer() {\r\n    if (!this.timer) this.timer = {};\r\n    if (!this.frequencyTimer) this._properties.timer.frequency = {};\r\n  }\r\n\r\n  _createDefaultAttributeTimer() {\r\n    if (!this.timer) this.timer = {};\r\n    if (!this.attributeTimer) this._properties.timer.attribute = {};\r\n  }\r\n\r\n  setDateTimerByType(value, type) {\r\n    this.emit('element_onpropertychange');\r\n    this._createDefaultDateTimer();\r\n    this._properties.timer.date[type] = value;\r\n  }\r\n\r\n  deleteTimerProperty(prop) {\r\n    if (this.timer[prop]) delete this._properties.timer[prop];\r\n  }\r\n\r\n  _defaultAttrsMessageProperties(flag) {\r\n    this._createDefaultMessage();\r\n    if (!this.message[flag]) this._properties.message[flag] = [];\r\n  }\r\n\r\n  existMessageAttribute(id, arrayType) {\r\n    const message = this._properties.message || {};\r\n    const join = message[arrayType] || [];\r\n    return join.find((attr) => parseInt(attr.id, 10) === parseInt(id, 10));\r\n  }\r\n\r\n  findMessageAttributeIndex(id, arrayType) {\r\n    const attributes = this.message[arrayType] || [];\r\n    for (let index = 0; index < attributes.length; index++) {\r\n      const attr = attributes[index];\r\n      if (parseInt(attr.id, 10) === parseInt(id, 10)) {\r\n        return index;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  addMessageAttribute(attribute, flag) {\r\n    const arrayType = flag === 'entity' ? 'attrEnt' : 'attrProc';\r\n    this.emit('element_onpropertychange');\r\n    this._defaultAttrsMessageProperties(arrayType);\r\n    this._properties.message[arrayType].push(attribute);\r\n  }\r\n\r\n  editMessageAttribute(id, type, value) {\r\n    const arrayType = type === 'entity' ? 'attrEnt' : 'attrProc';\r\n    const position = this.findMessageAttributeIndex(id, arrayType);\r\n    if (position !== -1) {\r\n      this.emit('element_onpropertychange');\r\n      this._properties.message[arrayType][position] = value;\r\n    }\r\n  }\r\n\r\n  deleteMessageAttribute(id, type) {\r\n    const arrayType = type === 'entity' ? 'attrEnt' : 'attrProc';\r\n    const position = this.findMessageAttributeIndex(id, arrayType);\r\n    if (position !== -1) {\r\n      this.emit('element_onpropertychange');\r\n      this._properties.message[arrayType].splice(position, 1);\r\n    }\r\n  }\r\n\r\n  deleteAllMessageAttributes(type) {\r\n    const arrayType = type === 'entity' ? 'attrEnt' : 'attrProc';\r\n    this.emit('element_onpropertychange');\r\n    this._properties.message[arrayType] = [];\r\n  }\r\n\r\n  _defaultWebServices() {\r\n    if (!this.message) this._createDefaultMessage();\r\n    this._properties.events = [\r\n      {\r\n        WS: true,\r\n        busClaId: 102,\r\n        busClaName: 'BPMNAutoComplete',\r\n        eventId: 11,\r\n        id: 1,\r\n        name: 'ONREADY',\r\n        order: 0,\r\n      },\r\n    ];\r\n  }\r\n\r\n  maxId(data) {\r\n    let max = 0;\r\n    data.forEach((item) => {\r\n      if (parseInt(item.id, 10) > max) max = parseInt(item.id, 10);\r\n    });\r\n    return max;\r\n  }\r\n\r\n  existWebService(id) {\r\n    const wsList = this.webServices || [];\r\n    const wsFind = wsList.find((ws) => {\r\n      return parseInt(ws.id, 10) === parseInt(id, 10);\r\n    });\r\n    return wsFind;\r\n  }\r\n\r\n  existWSBindingParameter(wsId, bindingId) {\r\n    const wsIndex = this.getWebServiceIndexById(wsId);\r\n    let binding;\r\n    if (wsIndex !== -1) {\r\n      const bindings = this.webServices[wsIndex].bindings || [];\r\n      binding = bindings.find((param) => {\r\n        return parseInt(param.busClaParId, 10) === parseInt(bindingId, 10);\r\n      });\r\n    }\r\n    return binding;\r\n  }\r\n\r\n  getWebServiceIndexById(id) {\r\n    const index = this.webServices.findIndex((ws) => {\r\n      return parseInt(ws.id, 10) === parseInt(id, 10);\r\n    });\r\n    return index;\r\n  }\r\n\r\n  getBindingIndexById(wsIndex, id) {\r\n    const bindings = this.webServices[wsIndex].bindings || [];\r\n    const index = bindings.findIndex((bin) => {\r\n      return parseInt(bin.busClaParId, 10) === parseInt(id, 10);\r\n    });\r\n    return index;\r\n  }\r\n\r\n  addWebService(webService) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.webServices) this._defaultWebServices();\r\n    const newWS = {\r\n      id: this.maxId(this.webServices) + 1,\r\n      order: this.webServices.length,\r\n      WS: true,\r\n      bindings: [],\r\n      ...webService,\r\n    };\r\n    this._properties.events.push(newWS);\r\n  }\r\n\r\n  editWebService(id, value) {\r\n    const index = this.getWebServiceIndexById(id);\r\n    let webService;\r\n    if (index !== -1) {\r\n      this.emit('element_onpropertychange');\r\n      webService = this.webServices[index];\r\n      webService.busClaId = parseInt(value.id, 10);\r\n      webService.busClaName = value.name;\r\n      webService.bindings = [];\r\n    }\r\n    return webService;\r\n  }\r\n\r\n  deleteWebService(id) {\r\n    const index = this.getWebServiceIndexById(id);\r\n    if (index !== -1) {\r\n      this.emit('element_onpropertychange');\r\n      if (this.webServices.length === 2) {\r\n        this._properties.events = [];\r\n      } else {\r\n        this._properties.events.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  editBindingParameter(wsId, bindingId, values) {\r\n    const wsIndex = this.getWebServiceIndexById(wsId);\r\n    if (wsIndex !== -1) {\r\n      const bindIndex = this.getBindingIndexById(wsIndex, bindingId);\r\n      if (bindIndex !== -1) {\r\n        const entries = Object.entries(values);\r\n        this.emit('element_onpropertychange');\r\n        entries.forEach((ent) => {\r\n          const [prop, value] = ent;\r\n          this.webServices[wsIndex].bindings[bindIndex][prop] = value;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  deletePropertyOfBindingParameter(wsId, bindingId, props) {\r\n    const wsIndex = this.getWebServiceIndexById(wsId);\r\n    if (wsIndex !== -1) {\r\n      const bindIndex = this.getBindingIndexById(wsIndex, bindingId);\r\n      if (bindIndex !== -1) {\r\n        props.forEach((prop) => {\r\n          if (this.webServices[wsIndex].bindings[bindIndex][prop]) {\r\n            delete this.webServices[wsIndex].bindings[bindIndex][prop];\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteBindingParameter(wsId, bindingId) {\r\n    const wsIndex = this.getWebServiceIndexById(wsId);\r\n    if (wsIndex !== -1) {\r\n      const bindIndex = this.getBindingIndexById(wsIndex, bindingId);\r\n      if (bindIndex !== -1) {\r\n        this.emit('element_onpropertychange');\r\n        this.webServices[wsIndex].bindings.splice(bindIndex, 1);\r\n        if (this.webServices[wsIndex].bindings.length === 0) {\r\n          delete this.webServices[wsIndex].bindings;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addBindingParameter(wsId, binding) {\r\n    const wsIndex = this.getWebServiceIndexById(wsId);\r\n    if (wsIndex !== -1) {\r\n      this.emit('element_onpropertychange');\r\n      if (!this.webServices[wsIndex].bindings) this.webServices[wsIndex].bindings = [];\r\n      this.webServices[wsIndex].bindings.push(binding);\r\n    }\r\n  }\r\n}\r\n","import * as Snap from 'snapsvg-cjs';\r\nimport Config from 'config';\r\nimport EventElement from './eventElement';\r\n\r\nexport default class StartEvent extends EventElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.START_EVENT, id, x, y, viewport, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TASK,\r\n      Config.SUBPROCESS,\r\n      Config.CONNECTOR,\r\n      Config.INTERMEDIATE_EVENT,\r\n      Config.GATEWAY,\r\n      Config.TEXT,\r\n    ]);\r\n\r\n    this.initElement();\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    super.name = value;\r\n    this.updateTextLabel('start_event__group__text', value);\r\n  }\r\n\r\n  set type(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.type = value;\r\n    this._updateDetailTypeIcon();\r\n  }\r\n\r\n  drawElement() {\r\n    const circle = this._viewport\r\n      .circle(20, 20, this._radius)\r\n      .attr({ class: 'start_event__bg' });\r\n\r\n    const startEvent = circle.appendTo(this._viewport);\r\n    const bounds = startEvent.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const label = this.drawForeignObjLabel(\r\n      -40,\r\n      48,\r\n      120,\r\n      80,\r\n      this.eventName,\r\n      'start_event__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    label.select('g').attr({\r\n      class: 'start_event__group',\r\n    });\r\n\r\n    const icon = this._drawEventDetailTypeIcon();\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, startEvent, label, icon)\r\n      .mousedown(this.onElementMouseDown)\r\n      .attr({\r\n        class: 'start_event',\r\n        id: `${Config.START_EVENT}_${this._properties.id}`,\r\n      });\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  _drawEventDetailTypeIcon() {\r\n    let typeIcon;\r\n    let typeIconGroup;\r\n    switch (this.eventType.toUpperCase()) {\r\n      case 'MESSAGE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path  class=\"start_event__typeicon__message\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M95 618l0-535 811 0 0 535-811 0z m83-35l644 0-322-212-322 212z m-48-10l370-244 371 244 0-455-741 0 0 455z\" /></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.02, T${10},${25}`);\r\n        break;\r\n      case 'TIMER':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><g><path class=\"start_event__typeicon\" d=\"M47.5,0C21.3,0,0,21.3,0,47.5S21.3,95,47.5,95S95,73.7,95,47.5S73.7,0,47.5,0z M47.5,90.7c-23.8,0-43.2-19.4-43.2-43.2 S23.7,4.3,47.5,4.3s43.2,19.4,43.2,43.2S71.3,90.7,47.5,90.7z\"/><path class=\"start_event__typeicon\" d=\"M47.5,19.4c1.2,0,2.2-1,2.2-2.2v-5.3c0-1.2-1-2.2-2.2-2.2s-2.2,1-2.2,2.2v5.3C45.3,18.5,46.3,19.4,47.5,19.4z\"/><path class=\"start_event__typeicon\" d=\"M30.5,22.4c0.4,0.7,1.1,1.1,1.9,1.1c0.4,0,0.7-0.1,1.1-0.3c1-0.6,1.4-1.9,0.8-2.9l-2.6-4.6c-0.6-1-1.9-1.4-2.9-0.8 c-1,0.6-1.4,1.9-0.8,2.9L30.5,22.4z\"/><path class=\"start_event__typeicon\" d=\"M22.4,30.5l-4.6-2.6c-1-0.6-2.3-0.2-2.9,0.8c-0.6,1-0.2,2.3,0.8,2.9l4.6,2.6c0.3,0.2,0.7,0.3,1.1,0.3 c0.7,0,1.5-0.4,1.9-1.1C23.8,32.4,23.4,31.1,22.4,30.5z\"/><path class=\"start_event__typeicon\" d=\"M19.4,47.5c0-1.2-1-2.2-2.2-2.2h-5.3c-1.2,0-2.2,1-2.2,2.2s1,2.2,2.2,2.2h5.3C18.5,49.7,19.4,48.7,19.4,47.5z\"/><path class=\"start_event__typeicon\" d=\"M20.2,60.8l-4.6,2.6c-1,0.6-1.4,1.9-0.8,2.9c0.4,0.7,1.1,1.1,1.9,1.1c0.4,0,0.7-0.1,1.1-0.3l4.6-2.6 c1-0.6,1.4-1.9,0.8-2.9C22.6,60.5,21.3,60.2,20.2,60.8z\"/><path class=\"start_event__typeicon\" d=\"M33.5,71.8c-1-0.6-2.3-0.2-2.9,0.8L28,77.2c-0.6,1-0.2,2.3,0.8,2.9c0.3,0.2,0.7,0.3,1.1,0.3c0.7,0,1.5-0.4,1.9-1.1 l2.6-4.6C34.8,73.7,34.5,72.4,33.5,71.8z\"/><path class=\"start_event__typeicon\" d=\"M47.5,75.6c-1.2,0-2.2,1-2.2,2.2v5.3c0,1.2,1,2.2,2.2,2.2s2.2-1,2.2-2.2v-5.3C49.6,76.5,48.7,75.6,47.5,75.6z\"/><path class=\"start_event__typeicon\" d=\"M64.5,72.6c-0.6-1-1.9-1.4-2.9-0.8s-1.4,1.9-0.8,2.9l2.6,4.6c0.4,0.7,1.1,1.1,1.9,1.1c0.4,0,0.7-0.1,1.1-0.3 c1-0.6,1.4-1.9,0.8-2.9L64.5,72.6z\"/><path class=\"start_event__typeicon\" d=\"M79.3,63.4l-4.6-2.6c-1-0.6-2.3-0.2-2.9,0.8c-0.6,1-0.2,2.3,0.8,2.9l4.6,2.6c0.3,0.2,0.7,0.3,1.1,0.3 c0.7,0,1.5-0.4,1.9-1.1C80.7,65.3,80.3,64,79.3,63.4z\"/><path class=\"start_event__typeicon\" d=\"M83,45.4h-5.3c-1.2,0-2.2,1-2.2,2.2s1,2.2,2.2,2.2H83c1.2,0,2.2-1,2.2-2.2S84.2,45.4,83,45.4z\"/><path class=\"start_event__typeicon\" d=\"M73.7,34.5c0.4,0,0.7-0.1,1.1-0.3l4.6-2.6c1-0.6,1.4-1.9,0.8-2.9c-0.6-1-1.9-1.4-2.9-0.8l-4.7,2.6c-1,0.6-1.4,1.9-0.8,2.9 C72.2,34.1,72.9,34.5,73.7,34.5z\"/><path class=\"start_event__typeicon\" d=\"M66.3,14.9c-1-0.6-2.3-0.2-2.9,0.8l-2.6,4.6c-0.6,1-0.2,2.3,0.8,2.9c0.3,0.2,0.7,0.3,1.1,0.3c0.7,0,1.5-0.4,1.9-1.1 l2.6-4.6C67.7,16.8,67.4,15.5,66.3,14.9z\"/><path class=\"start_event__typeicon\" d=\"M47.5,49.7h13c1.2,0,2.2-1,2.2-2.2s-1-2.2-2.2-2.2H49.6V28.8c0-1.2-1-2.2-2.2-2.2s-2.2,1-2.2,2.2v18.7 C45.3,48.7,46.3,49.7,47.5,49.7z\"/></g></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.23, T${9},${9}`);\r\n        break;\r\n      case 'SIGNAL':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><polygon class=\"start_event__signalicon\" points=\"50 15, 100 100, 0 100\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.17, T${11.5},${8.5}`);\r\n        break;\r\n      case 'NONE':\r\n        typeIcon = Snap.parse('<g id=\"typeicon\"></g>');\r\n        typeIconGroup = typeIcon.select('g');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return typeIconGroup;\r\n  }\r\n\r\n  _updateDetailTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#typeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const typeIconGroup = this._drawEventDetailTypeIcon();\r\n    typeIconGroup.appendTo(this._graphic);\r\n  }\r\n}\r\n","import * as Snap from 'snapsvg-cjs';\r\nimport Config from 'config';\r\nimport EventElement from './eventElement';\r\n\r\nexport default class EndEvent extends EventElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.END_EVENT, id, x, y, viewport, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TEXT,\r\n    ]);\r\n    this.initElement();\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    super.name = value;\r\n    this.updateTextLabel('end_event__group__text', value);\r\n  }\r\n\r\n  set type(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.type = value;\r\n    this._updateDetailTypeIcon();\r\n  }\r\n\r\n  drawElement() {\r\n    const circle = this._viewport\r\n      .circle(20, 20, this._radius)\r\n      .attr({ class: 'end_event__bg' });\r\n\r\n    const endEvent = circle.appendTo(this._viewport);\r\n    const bounds = endEvent.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const label = this.drawForeignObjLabel(\r\n      -40,\r\n      48,\r\n      120,\r\n      80,\r\n      this.eventName,\r\n      'end_event__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    label.select('g').attr({\r\n      class: 'end_event__group',\r\n    });\r\n    const icon = this._drawEventDetailTypeIcon();\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, endEvent, label, icon)\r\n      .mousedown(this.onElementMouseDown)\r\n      .attr({\r\n        class: 'end_event',\r\n        id: `${Config.END_EVENT}_${this._properties.id}`,\r\n      });\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  _drawEventDetailTypeIcon() {\r\n    let typeIcon;\r\n    let typeIconGroup;\r\n    switch (this.eventType.toUpperCase()) {\r\n      case 'MESSAGE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"end_event__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M99 608l401-227 401 227-802 0z m1-84l0-448 802 0 0 448-402-224-400 224z\" /></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.02, T${10},${25}`);\r\n        break;\r\n      case 'SIGNAL':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><polygon class=\"end_event__signalicon\" points=\"50 15, 100 100, 0 100\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.17, T${11.5},${8.5}`);\r\n        break;\r\n      case 'TERMINATE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><circle class=\"end_event__typeicon\" cx=\"0\" cy=\"0\" r=\"12\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s1, T${20},${20}`);\r\n        break;\r\n      case 'ERROR':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"end_event__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M0,0c39,114,77,228,116,342c42-55,85-110,128-166c34,70,68,139,102,209c-27-124-55-248-82-372 c-45,51-89,103-134,154C87,111,43,55,0,0z\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.07, T${8},${25}`);\r\n        break;\r\n      case 'NONE':\r\n        typeIcon = Snap.parse('<g id=\"typeicon\"></g>');\r\n        typeIconGroup = typeIcon.select('g');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return typeIconGroup;\r\n  }\r\n\r\n  _updateDetailTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#typeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const typeIconGroup = this._drawEventDetailTypeIcon();\r\n    typeIconGroup.appendTo(this._graphic);\r\n  }\r\n}\r\n","import * as Snap from 'snapsvg-cjs';\r\nimport Config from 'config';\r\nimport EventElement from './eventElement';\r\n\r\nexport default class IntermediateEvent extends EventElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(\r\n      Config.INTERMEDIATE_EVENT,\r\n      id,\r\n      x,\r\n      y,\r\n      viewport,\r\n      properties,\r\n      isMovable,\r\n      [\r\n        Config.DELETE,\r\n        Config.TASK,\r\n        Config.SUBPROCESS,\r\n        Config.END_EVENT,\r\n        Config.INTERMEDIATE_EVENT,\r\n        Config.GATEWAY,\r\n        Config.TEXT,\r\n        Config.CONNECTOR,\r\n      ],\r\n    );\r\n    this.initElement();\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    super.name = value;\r\n    this.updateTextLabel('intermediate_event__group__text', value);\r\n  }\r\n\r\n  set type(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.type = value;\r\n    if (value === 'message') {\r\n      this._properties.message = { catchThrow: 'catch' };\r\n    } else {\r\n      delete this._properties.message;\r\n    }\r\n    this._updateDetailTypeIcon();\r\n  }\r\n\r\n  get catchThrowMessage() {\r\n    return this.message ? this.message.catchThrow : undefined;\r\n  }\r\n\r\n  set catchThrowMessage(value) {\r\n    const isDifferent = value !== this.catchThrowMessage;\r\n    super.catchThrowMessage = value;\r\n    this._updateDetailTypeIcon();\r\n    if (isDifferent) {\r\n      this.updateMessageProperties(value);\r\n    }\r\n  }\r\n\r\n  updateMessageProperties(value) {\r\n    if (value === 'throw') {\r\n      delete this._properties.message.attrProc;\r\n      delete this._properties.message.attrEnt;\r\n      delete this._properties.message.webService;\r\n    } else {\r\n      delete this._properties.events;\r\n    }\r\n  }\r\n\r\n  setTypeWithoutSave(type) {\r\n    this._properties.type = type;\r\n    this._updateDetailTypeIcon();\r\n  }\r\n\r\n  get isAttached() {\r\n    return this._properties.isAttached;\r\n  }\r\n\r\n  get target() {\r\n    return this._properties.target;\r\n  }\r\n\r\n  set isAttached(value) {\r\n    this._properties.isAttached = value;\r\n  }\r\n\r\n  set target(value) {\r\n    this._properties.target = value;\r\n  }\r\n\r\n  drawElement() {\r\n    const outerCircle = this._viewport\r\n      .circle(20, 20, this._radius)\r\n      .attr({ class: 'intermediate_event__bg' });\r\n    const innerCircle = this._viewport\r\n      .circle(20, 20, this._radius - 4)\r\n      .attr({ class: 'intermediate_event__inner' });\r\n\r\n    const intermediateEvent = outerCircle.appendTo(this._viewport);\r\n    const bounds = intermediateEvent.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const label = this.drawForeignObjLabel(\r\n      -40,\r\n      48,\r\n      120,\r\n      80,\r\n      this.eventName,\r\n      'intermediate_event__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    label.select('g').attr({\r\n      class: 'intermediate_event__group',\r\n    });\r\n\r\n    const icon = this._drawEventDetailTypeIcon();\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, intermediateEvent, innerCircle, label, icon)\r\n      .attr({\r\n        class: 'intermediate_event',\r\n        id: `${Config.INTERMEDIATE_EVENT}_${this.properties.id}`,\r\n      })\r\n      .mousedown(this.onElementMouseDown);\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  _drawEventDetailTypeIcon() {\r\n    let typeIcon;\r\n    let typeIconGroup;\r\n    switch (this.eventType.toUpperCase()) {\r\n      case 'MESSAGE':\r\n        typeIcon = Snap.parse(\r\n          `<g id=\"typeicon\">\r\n            <path \r\n              class=\"start_event__typeicon__message\" \r\n              transform=\"scale(1, -1) \r\n              translate(0, -100)\" \r\n              d=\"M95 618l0-535 811 0 0 535-811 0z m83-35l644 \r\n              0-322-212-322 212z m-48-10l370-244 371 244 0-455-741 0 0 455z\" \r\n            /></g>`,\r\n        );\r\n        if (this.catchThrowMessage === 'throw') {\r\n          typeIcon = Snap.parse(\r\n            `<g id=\"typeicon\">\r\n              <path \r\n                class=\"task__typeicon\" \r\n                transform=\"scale(1, -1) \r\n                translate(0, -100)\" \r\n                d=\"M99 608l401-227 401 227-802 0z \r\n                m1-84l0-448 802 0 0 448-402-224-400 224z\" \r\n              />\r\n            </g>`,\r\n          );\r\n        }\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.02, T${10},${25}`);\r\n        break;\r\n      case 'TIMER':\r\n        typeIcon = Snap.parse(\r\n          `<g id=\"typeicon\"><g>\r\n          <path \r\n            class=\"start_event__typeicon\" \r\n            d=\"M47.5,0C21.3,0,0,21.3,0,47.5S21.3,95,47.5,95S95,73.7,95,47.5S73.7,0,47.5,0z M47.5,90.7c-23.8,0-43.2-19.4-43.2-43.2 S23.7,4.3,47.5,4.3s43.2,19.4,43.2,43.2S71.3,90.7,47.5,90.7z\"/>\r\n            <path \r\n              class=\"start_event__typeicon\" \r\n              d=\"M47.5,19.4c1.2,0,2.2-1,2.2-2.2v-5.3c0-1.2-1-2.2-2.2-2.2s-2.2,1-2.2,2.2v5.3C45.3,18.5,46.3,19.4,47.5,19.4z\"/>\r\n            <path \r\n              class=\"start_event__typeicon\" \r\n              d=\"M30.5,22.4c0.4,0.7,1.1,1.1,1.9,1.1c0.4,0,0.7-0.1,1.1-0.3c1-0.6,1.4-1.9,0.8-2.9l-2.6-4.6c-0.6-1-1.9-1.4-2.9-0.8 c-1,0.6-1.4,1.9-0.8,2.9L30.5,22.4z\"/>\r\n            <path class=\"start_event__typeicon\" d=\"M22.4,30.5l-4.6-2.6c-1-0.6-2.3-0.2-2.9,0.8c-0.6,1-0.2,2.3,0.8,2.9l4.6,2.6c0.3,0.2,0.7,0.3,1.1,0.3 c0.7,0,1.5-0.4,1.9-1.1C23.8,32.4,23.4,31.1,22.4,30.5z\"/><path class=\"start_event__typeicon\" d=\"M19.4,47.5c0-1.2-1-2.2-2.2-2.2h-5.3c-1.2,0-2.2,1-2.2,2.2s1,2.2,2.2,2.2h5.3C18.5,49.7,19.4,48.7,19.4,47.5z\"/><path class=\"start_event__typeicon\" d=\"M20.2,60.8l-4.6,2.6c-1,0.6-1.4,1.9-0.8,2.9c0.4,0.7,1.1,1.1,1.9,1.1c0.4,0,0.7-0.1,1.1-0.3l4.6-2.6 c1-0.6,1.4-1.9,0.8-2.9C22.6,60.5,21.3,60.2,20.2,60.8z\"/><path class=\"start_event__typeicon\" d=\"M33.5,71.8c-1-0.6-2.3-0.2-2.9,0.8L28,77.2c-0.6,1-0.2,2.3,0.8,2.9c0.3,0.2,0.7,0.3,1.1,0.3c0.7,0,1.5-0.4,1.9-1.1 l2.6-4.6C34.8,73.7,34.5,72.4,33.5,71.8z\"/><path class=\"start_event__typeicon\" d=\"M47.5,75.6c-1.2,0-2.2,1-2.2,2.2v5.3c0,1.2,1,2.2,2.2,2.2s2.2-1,2.2-2.2v-5.3C49.6,76.5,48.7,75.6,47.5,75.6z\"/><path class=\"start_event__typeicon\" d=\"M64.5,72.6c-0.6-1-1.9-1.4-2.9-0.8s-1.4,1.9-0.8,2.9l2.6,4.6c0.4,0.7,1.1,1.1,1.9,1.1c0.4,0,0.7-0.1,1.1-0.3 c1-0.6,1.4-1.9,0.8-2.9L64.5,72.6z\"/><path class=\"start_event__typeicon\" d=\"M79.3,63.4l-4.6-2.6c-1-0.6-2.3-0.2-2.9,0.8c-0.6,1-0.2,2.3,0.8,2.9l4.6,2.6c0.3,0.2,0.7,0.3,1.1,0.3 c0.7,0,1.5-0.4,1.9-1.1C80.7,65.3,80.3,64,79.3,63.4z\"/><path class=\"start_event__typeicon\" d=\"M83,45.4h-5.3c-1.2,0-2.2,1-2.2,2.2s1,2.2,2.2,2.2H83c1.2,0,2.2-1,2.2-2.2S84.2,45.4,83,45.4z\"/><path class=\"start_event__typeicon\" d=\"M73.7,34.5c0.4,0,0.7-0.1,1.1-0.3l4.6-2.6c1-0.6,1.4-1.9,0.8-2.9c-0.6-1-1.9-1.4-2.9-0.8l-4.7,2.6c-1,0.6-1.4,1.9-0.8,2.9 C72.2,34.1,72.9,34.5,73.7,34.5z\"/><path class=\"start_event__typeicon\" d=\"M66.3,14.9c-1-0.6-2.3-0.2-2.9,0.8l-2.6,4.6c-0.6,1-0.2,2.3,0.8,2.9c0.3,0.2,0.7,0.3,1.1,0.3c0.7,0,1.5-0.4,1.9-1.1 l2.6-4.6C67.7,16.8,67.4,15.5,66.3,14.9z\"/><path class=\"start_event__typeicon\" d=\"M47.5,49.7h13c1.2,0,2.2-1,2.2-2.2s-1-2.2-2.2-2.2H49.6V28.8c0-1.2-1-2.2-2.2-2.2s-2.2,1-2.2,2.2v18.7 C45.3,48.7,46.3,49.7,47.5,49.7z\"/></g></g>`,\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.22, T${9.5},${9.5}`);\r\n        break;\r\n      case 'SIGNAL':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><polygon class=\"start_event__signalicon\" points=\"50 15, 100 100, 0 100\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.17, T${11.5},${8.5}`);\r\n        break;\r\n      case 'NONE':\r\n        typeIcon = Snap.parse('<g id=\"typeicon\"></g>');\r\n        typeIconGroup = typeIcon.select('g');\r\n        break;\r\n      case 'ERROR':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"end_event__typeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M0,0c39,114,77,228,116,342c42-55,85-110,128-166c34,70,68,139,102,209c-27-124-55-248-82-372 c-45,51-89,103-134,154C87,111,43,55,0,0z\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.07, T${8},${25}`);\r\n        break;\r\n      case 'MULTIPLE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><polygon class=\"intermediate_event__multipleicon\" points=\"294,3 585.246118,214.602691 474,556.983037 114,556.983037 2.753882,214.602691\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.04, T${8},${8}`);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return typeIconGroup;\r\n  }\r\n\r\n  _updateDetailTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#typeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const typeIconGroup = this._drawEventDetailTypeIcon();\r\n    typeIconGroup.appendTo(this._graphic);\r\n  }\r\n}\r\n","import * as Snap from 'snapsvg-cjs';\r\nimport Config from 'config';\r\nimport Element from './element';\r\nimport { getElementsOfType } from '../../utils/util';\r\n\r\nexport default class Gateway extends Element {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.GATEWAY, id, viewport, x, y, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TASK,\r\n      Config.SUBPROCESS,\r\n      Config.END_EVENT,\r\n      Config.INTERMEDIATE_EVENT,\r\n      Config.GATEWAY,\r\n      Config.TEXT,\r\n      Config.CONNECTOR,\r\n    ]);\r\n\r\n    if (!properties) {\r\n      this._properties.type = 'exclusive';\r\n      this._properties.executionType = 'automatic';\r\n      this._properties.activity = {\r\n        id,\r\n        name: this._properties.name,\r\n      };\r\n    }\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get type() {\r\n    return this._properties.type;\r\n  }\r\n\r\n  set type(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (this._properties.type === 'exclusive' && value !== 'exclusive') {\r\n      this.emit('delete_exclusive');\r\n    }\r\n    this._properties.type = value;\r\n    if (value === 'exclusive' || value === 'inclusive') {\r\n     // this._properties.executionType = 'automatic';\r\n    } else {\r\n      delete this.properties.executionType;\r\n    }\r\n    if (value === 'parallel' || value === 'event') {\r\n      this.emit('change_parallel_event');\r\n    }\r\n    this._updateTypeIcon();\r\n  }\r\n\r\n  get name() {\r\n    return this._properties.activity.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.activity.name = value;\r\n    this._properties.name = value;\r\n    this.updateTextLabel('gateway__group__text', value);\r\n  }\r\n\r\n  get executionType() {\r\n    return this._properties.executionType;\r\n  }\r\n\r\n  set executionType(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.executionType = value;\r\n  }\r\n\r\n  getAllConnectorAssociated(elements) {\r\n    const connectors = getElementsOfType(Config.CONNECTOR, elements);\r\n    const transitions = connectors.filter((conn) => {\r\n      return (\r\n        conn.type === Config.CONNECTOR_TYPE_TRANSITION\r\n        && parseInt(this.id, 10) === parseInt(conn.from, 10)\r\n      );\r\n    });\r\n    return transitions;\r\n  }\r\n\r\n  deleteAllExecutionOrderConnector(elements) {\r\n    const transitions = this.getAllConnectorAssociated(elements);\r\n    transitions.forEach((transition) => {\r\n      transition.deletePropertyByName('executionOrder');\r\n    });\r\n  }\r\n\r\n  changeAllConnectorsKind(elements) {\r\n    const transitions = this.getAllConnectorAssociated(elements);\r\n    transitions.forEach((transition) => {\r\n      transition.properties.kind = 'none';\r\n    });\r\n  }\r\n\r\n  drawElement() {\r\n    const rhombo = this._viewport\r\n      .polygon(\r\n        20,\r\n        0,\r\n        0,\r\n        20,\r\n        20,\r\n        Config.GATEWAY_SIZE.width,\r\n        Config.GATEWAY_SIZE.height,\r\n        20,\r\n      )\r\n      .attr({\r\n        class: 'gateway__bg',\r\n      });\r\n\r\n    const gateway = rhombo.appendTo(this._viewport);\r\n    const bounds = gateway.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n    const icon = this._drawGatewayTypeIcon();\r\n\r\n    const label = this.drawForeignObjLabel(\r\n      -40,\r\n      48,\r\n      120,\r\n      80,\r\n      this.name,\r\n      'gateway__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    label.select('g').attr({\r\n      class: 'gateway__group',\r\n    });\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, gateway, icon, label)\r\n      .mousedown(this.onElementMouseDown)\r\n      .attr({\r\n        class: 'gateway',\r\n        id: `${Config.GATEWAY}_${this._properties.id}`,\r\n      });\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  _drawGatewayTypeIcon() {\r\n    let typeIcon;\r\n    let typeIconGroup;\r\n    switch (this.type.toUpperCase()) {\r\n      case 'EXCLUSIVE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"gateway__typeicon--exclusive\" d=\"M38,12.8L35.2,10L24,21.2L12.8,10L10,12.8L21.2,24L10,35.2l2.8,2.8L24,26.8L35.2,38l2.8-2.8L26.8,24L38,12.8z\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.5, T${8},${8}`);\r\n        break;\r\n      case 'INCLUSIVE':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"gateway__typeicon--inclusive\" d=\"M 25, 50 a 25,25 0 1,1 50,0 a 25,25 0 1,1 -50,0\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.4, T${0},${0}`);\r\n        break;\r\n      case 'PARALLEL':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"gateway__typeicon--parallel\" d=\"M38,26H26v12h-4V26H10v-4h12V10h4v12h12V26z\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.6, T${5.5},${5.5}`);\r\n        break;\r\n      case 'EVENT':\r\n        typeIcon = Snap.parse(\r\n          '<g id=\"typeicon\"><path class=\"gateway__typeicon--event\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M499 802c-220 4-425-177-448-396-24-185 78-380 247-461 160-80 368-56 501 66 134 118 190 318 128 486-57 167-217 293-393 303-12 1-23 2-35 2z m-5-49c202 7 391-161 407-362 19-178-92-361-262-420-166-61-368-2-468 145-103 144-99 356 18 490 74 90 188 146 305 147z m8-44c-186 6-358-158-361-344-9-169 116-334 283-367 155-33 328 46 397 190 71 140 39 327-83 430-64 57-150 91-236 91z m-2-48c164 4 314-144 311-308 3-152-119-297-272-312-143-19-295 73-336 213-43 134 14 295 138 364 48 28 103 43 159 43z m0-87c-72-52-143-104-215-156 27-84 55-169 82-253 89 0 177 0 266 0 28 84 55 169 82 253-71 52-143 104-215 156z m0-30c62-45 124-90 187-135-24-74-48-147-72-220-77 0-153 0-230 0-24 73-48 146-72 220 63 45 125 90 187 135z\"/></g>',\r\n        );\r\n        typeIconGroup = typeIcon.select('g');\r\n        typeIconGroup.transform(`s0.03, T${5},${27}`);\r\n        break;\r\n      case 'NONE':\r\n        typeIcon = Snap.parse('<g id=\"typeicon\"></g>');\r\n        typeIconGroup = typeIcon.select('g');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return typeIconGroup;\r\n  }\r\n\r\n  _updateTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#typeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const typeIconGroup = this._drawGatewayTypeIcon();\r\n    typeIconGroup.appendTo(this._graphic);\r\n  }\r\n}\r\n","import * as Snap from 'snapsvg-cjs';\r\nimport Config from 'config';\r\nimport Element from './element';\r\n\r\nexport default class Subprocess extends Element {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.SUBPROCESS, id, viewport, x, y, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TASK,\r\n      Config.SUBPROCESS,\r\n      Config.END_EVENT,\r\n      Config.INTERMEDIATE_EVENT,\r\n      Config.GATEWAY,\r\n      Config.TEXT,\r\n      Config.CONNECTOR,\r\n      Config.OPEN_SUBPROCESS,\r\n    ]);\r\n    this._WIDTH = Config.TASK_SIZE.width;\r\n    this._HEIGHT = Config.TASK_SIZE.height;\r\n\r\n    if (!properties) {\r\n      this._properties.activity = {\r\n        id,\r\n        name: 'Default_Process',\r\n      };\r\n      this._properties.name = 'Default_Process';\r\n      if (Config.ENV !== 'Offline') this._properties.activitySetId = 1;\r\n      this._properties.type = 'embedded';\r\n      this._properties.loopType = 'none';\r\n      this._properties.color = this._foregroundColor;\r\n    }\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get name() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.activity.name = value.name;\r\n    this._properties.name = value.name;\r\n    const propToChange = this.type === 'reusable' ? 'subprocessId' : 'activitySetId';\r\n    this._properties[propToChange] = parseInt(value.id, 10);\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  get type() {\r\n    return this._properties.type;\r\n  }\r\n\r\n  get subprocessId() {\r\n    return this._properties.activitySetId || this._properties.subprocessId;\r\n  }\r\n\r\n  set type(value) {\r\n    this.emit('element_onpropertychange');\r\n    const idToChange = this.type === 'reusable' ? 'subprocessId' : 'activitySetId';\r\n    const idValue = this._properties[idToChange];\r\n    this.deletePropertyByName(idToChange);\r\n    if (value === 'reusable') {\r\n      this._properties.subprocessId = idValue;\r\n    } else {\r\n      this._properties.activitySetId = idValue;\r\n    }\r\n    this._properties.type = value;\r\n    this._updateType();\r\n  }\r\n\r\n  get loopType() {\r\n    return this._properties.loopType;\r\n  }\r\n\r\n  set loopType(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.loopType = value;\r\n    this._updateLoopTypeIcon();\r\n  }\r\n\r\n  // only for facilis purpose\r\n  get multiplyCount() {\r\n    return this._properties.multiplyCount;\r\n  }\r\n\r\n  set multiplyCount(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiplyCount = value;\r\n  }\r\n\r\n  get color() {\r\n    return this._properties.color || '#D6F6FF';\r\n  }\r\n\r\n  set color(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.color = value;\r\n    this._setColors(this.color, '.subprocess__bg', '.subprocess__group__text', [\r\n      '.subprocess__subprocess_icon',\r\n      '.subprocess__looptypeicon',\r\n    ]);\r\n  }\r\n\r\n  get standard() {\r\n    return this._properties.standard;\r\n  }\r\n\r\n  set standard(value) {\r\n    this._properties.standard = value;\r\n  }\r\n\r\n  get standardDocumentation() {\r\n    return this._properties.standard.conditionDoc;\r\n  }\r\n\r\n  get standardCondition() {\r\n    return this._properties.standard\r\n      ? this._properties.standard.condition\r\n      : undefined;\r\n  }\r\n\r\n  set standardDocumentation(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.standard) this.standard = {};\r\n    this._properties.standard.conditionDoc = value;\r\n  }\r\n\r\n  set standardCondition(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.standard) this.standard = {};\r\n    this._properties.standard.condition = value;\r\n  }\r\n\r\n  get reusable() {\r\n    return this._properties.reusable;\r\n  }\r\n\r\n  set reusable(value) {\r\n    this._properties.reusable = value;\r\n  }\r\n\r\n  get reusableEntity() {\r\n    let entity = {};\r\n    const reusable = this.reusable || {};\r\n    if (reusable.entityId) {\r\n      entity = {\r\n        id: this._properties.reusable.entityId,\r\n        name: this._properties.reusable.entityAttrName,\r\n      };\r\n    }\r\n    return entity;\r\n  }\r\n\r\n  get reusableForms() {\r\n    return this.reusable ? this._properties.reusable.forms : undefined;\r\n  }\r\n\r\n  set reusableEntity(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.reusable) this._properties.reusable = {};\r\n    if (value === null) {\r\n      delete this._properties.reusable.entityId;\r\n      delete this._properties.reusable.entityAttrName;\r\n    } else {\r\n      this._properties.reusable.entityId = parseInt(value.id, 10);\r\n      this._properties.reusable.entityAttrName = value.name;\r\n    }\r\n  }\r\n\r\n  get execution() {\r\n    return this.reusable ? this._properties.reusable.execution : undefined;\r\n  }\r\n\r\n  get skipFirst() {\r\n    return this.reusable ? this._properties.reusable.skipFirst : undefined;\r\n  }\r\n\r\n  set execution(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.reusable.execution = value;\r\n  }\r\n\r\n  set skipFirst(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.reusable.skipFirst = value;\r\n  }\r\n\r\n  get multiInstance() {\r\n    return this._properties.multiInstance;\r\n  }\r\n\r\n  get multiInstanceType() {\r\n    return this.multiInstance ? this.multiInstance.type : undefined;\r\n  }\r\n\r\n  set multiInstanceType(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiInstance.type = value;\r\n    if (value === 'attribute' && this.multiInstanceValue !== undefined) {\r\n      delete this._properties.multiInstance.value;\r\n    }\r\n    if (value === 'value' && this.multiInstanceAttribute !== {}) {\r\n      delete this._properties.multiInstance.attribute;\r\n      delete this._properties.multiInstance.attributeId;\r\n    }\r\n  }\r\n\r\n  get multiInstanceValue() {\r\n    return this.multiInstance ? this.multiInstance.value : undefined;\r\n  }\r\n\r\n  set multiInstanceValue(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiInstance.value = value;\r\n  }\r\n\r\n  get multiInstanceAttribute() {\r\n    let attribute = {};\r\n    if (this.multiInstance) {\r\n      attribute = {\r\n        id: this.multiInstance.attributeId,\r\n        name: this.multiInstance.attribute,\r\n      };\r\n    }\r\n    return attribute;\r\n  }\r\n\r\n  set multiInstanceAttribute(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiInstance.attributeId = parseInt(value.id, 10);\r\n    this._properties.multiInstance.attribute = value.name;\r\n  }\r\n\r\n  set multiInstance(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.multiInstance = value;\r\n  }\r\n\r\n  addReusableForm(form) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.reusable) this._properties.reusable = {};\r\n    if (!this.reusableForms) this.properties.reusable.forms = [];\r\n    this.reusableForms.push(form);\r\n  }\r\n\r\n  deleteReusableForm(index) {\r\n    const form = this.properties.reusable.forms[index];\r\n    if (form) {\r\n      this.emit('element_onpropertychange');\r\n      this.properties.reusable.forms.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  editReusableForm(index, value) {\r\n    const form = this._properties.reusable.forms[index];\r\n    if (form) {\r\n      this.emit('element_onpropertychange');\r\n      this._properties.reusable.forms[index] = value;\r\n    }\r\n  }\r\n\r\n /* changeReusableFormPosition(position, form,frmType) {\r\n    let forms = this._properties.reusable.forms.filter( x => x.formType === frmType);\r\n    let formsOther  = this._properties.reusable.forms.filter( x => x.formType !== frmType);\r\n    if (forms[position]) {\r\n      \r\n      forms[position] = form;\r\n      forms[position].order = position;\r\n      \r\n      this._properties.reusable.forms[position] = forms.concat(formsOther);\r\n      //this._properties.reusable.forms[position].order = position;\r\n    }\r\n  }*/\r\n\r\n  changeReusableFormPosition(actualPos, oldPos, actual, old, formType){\r\n    let forms = this._properties.reusable.forms.filter( x => x.formType === formType);\r\n    let formsOther  = this._properties.reusable.forms.filter( x => x.formType !== formType);\r\n    \r\n    if (forms[oldPos]  && forms[actualPos]) {\r\n      \r\n      forms[actualPos] = actual;\r\n      forms[actualPos].order = actualPos;\r\n\r\n      forms[oldPos] = old;\r\n      forms[oldPos].order = oldPos;\r\n    }\r\n\r\n    this._properties.reusable.forms = forms.concat(formsOther);\r\n\r\n  }\r\n\r\n  cleanReusableForm(frmType) {\r\n    this.emit('element_onpropertychange');\r\n    //this.properties.reusable.forms = [];\r\n    this.properties.reusable.forms = this.properties.reusable.forms.filter( x => x.formType !== frmType);\r\n  }\r\n\r\n  drawElement() {\r\n    const svgSubprocessIcon = Snap.parse(\r\n      '<g id=\"icon\"><path d=\"M56,0H8C3.6,0,0,3.6,0,8v48c0,4.4,3.6,8,8,8h48c4.4,0,8-3.6,8-8V8C64,3.6,60.4,0,56,0z M58.7,56c0,1.5-1.2,2.7-2.7,2.7H8 c-1.5,0-2.7-1.2-2.7-2.7V8c0-1.5,1.2-2.7,2.7-2.7h48c1.5,0,2.7,1.2,2.7,2.7V56z\" /><path d=\"M50.7,29.3h-16v-16c0-1.5-1.2-2.7-2.7-2.7c-1.5,0-2.7,1.2-2.7,2.7v16h-16c-1.5,0-2.7,1.2-2.7,2.7c0,1.5,1.2,2.7,2.7,2.7 h16v16c0,1.5,1.2,2.7,2.7,2.7c1.5,0,2.7-1.2,2.7-2.7v-16h16c1.5,0,2.7-1.2,2.7-2.7C53.3,30.5,52.1,29.3,50.7,29.3z\" /></g>',\r\n    );\r\n    const subprocessIcon = svgSubprocessIcon.select('g').attr({\r\n      class: 'subprocess__subprocess_icon',\r\n    });\r\n\r\n    subprocessIcon.transform(\r\n      `s0.2, T${Math.floor(this._WIDTH / 2) - 8},${Math.floor(\r\n        this._HEIGHT - 20,\r\n      )}`,\r\n    );\r\n\r\n    this._box = this._viewport\r\n      .rect(0, 0, this._WIDTH, this._HEIGHT, 8)\r\n      .attr({ class: 'subprocess__bg', fill: this.color });\r\n\r\n    this._label = this.drawForeignObjLabel(\r\n      0,\r\n      0,\r\n      this._WIDTH,\r\n      this._HEIGHT,\r\n      this.name,\r\n      'subprocess__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    this._label.select('g').attr({\r\n      class: 'subprocess__group',\r\n    });\r\n\r\n    const subProcess = this._box.appendTo(this._viewport);\r\n    const bounds = subProcess.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const loopTypeIconGroup = this._drawLoopTypeIcon();\r\n\r\n    this._graphic = this._viewport\r\n      .g(\r\n        selectionBox,\r\n        subProcess,\r\n        this._label,\r\n        subprocessIcon,\r\n        loopTypeIconGroup,\r\n      )\r\n      .mousedown(this.onElementMouseDown)\r\n      .attr({\r\n        class: 'subprocess',\r\n        id: `${Config.SUBPROCESS}_${this._properties.id}`,\r\n      });\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n\r\n    this._updateType();\r\n    this._setColors(this.color, '.subprocess__bg', '.subprocess__group__text', [\r\n      '.subprocess__subprocess_icon',\r\n      '.subprocess__looptypeicon',\r\n    ]);\r\n  }\r\n\r\n  _drawLoopTypeIcon() {\r\n    let looptypeIcon;\r\n    switch (this.loopType.toUpperCase()) {\r\n      case 'STANDARD':\r\n        looptypeIcon = Snap.parse(\r\n          '<g id=\"looptypeicon\"><path class=\"subprocess__looptypeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M529 645c-126 1-247-86-283-207-28-87-12-187 42-260-44 8-89 17-134 26-4-20-8-40-12-59 81-16 162-32 242-47 16 80 32 160 47 240-19 4-39 8-59 11-9-48-19-97-28-145-69 82-68 214 2 295 69 86 200 111 295 57 92-47 143-159 118-259-22-104-124-184-230-182-28 2-42-38-19-53 20-13 45-4 67-3 124 19 229 125 245 250 19 119-46 244-152 300-43 23-92 36-141 36z\" /></g>',\r\n        );\r\n        break;\r\n      case 'MULTIINSTANCE':\r\n        looptypeIcon = Snap.parse(\r\n          '<g id=\"looptypeicon\"><path class=\"subprocess__looptypeicon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M250 650l0-600 100 0 0 600-100 0z m200 0l0-600 100 0 0 600-100 0z m200 0l0-600 100 0 0 600-100 0z\" /></g>',\r\n        );\r\n        break;\r\n      case 'NONE':\r\n        looptypeIcon = Snap.parse('<g id=\"looptypeicon\"></g>');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const loopTypeIconGroup = looptypeIcon.select('g');\r\n    loopTypeIconGroup.transform(\r\n      `s0.025, T${24},${Math.floor(this._HEIGHT - 8)}`,\r\n    );\r\n\r\n    const subprocessLoopTypeIcon = looptypeIcon.select(\r\n      '.subprocess__looptypeicon',\r\n    );\r\n    if (subprocessLoopTypeIcon) {\r\n      subprocessLoopTypeIcon.attr({\r\n        fill: this._foregroundColor,\r\n      });\r\n    }\r\n\r\n    return loopTypeIconGroup;\r\n  }\r\n\r\n  _updateLoopTypeIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#looptypeicon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const loopTypeIconGroup = this._drawLoopTypeIcon();\r\n    loopTypeIconGroup.appendTo(this._graphic);\r\n  }\r\n\r\n  _updateNameLabel() {\r\n    const text = this._graphic.select('.subprocess__group__text');\r\n    text.node.innerText = this.name;\r\n  }\r\n\r\n  _updateType() {\r\n    if (this._properties.type.toUpperCase() === 'REUSABLE') {\r\n      this._graphic.addClass('subprocess--reusable');\r\n    } else {\r\n      this._graphic.removeClass('subprocess--reusable');\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport Element from './element';\r\nimport { getViewPortBBox } from '../../utils/util';\r\n\r\nexport default class Pool extends Element {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.POOL, id, viewport, x, y, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.LANE,\r\n      Config.TEXT,\r\n    ]);\r\n    this.resizable = true;\r\n    this._poolBox = null;\r\n    this._poolNameBox = null;\r\n    this._label = null;\r\n    this._minHeight = 0;\r\n\r\n    const vx = getViewPortBBox(this._viewport);\r\n\r\n    if (!properties) {\r\n      this._properties.size = {\r\n        width: vx.width > 0 ? vx.width + 120 : Config.POOL_SIZE.width,\r\n        height: vx.height > 0 ? vx.height + 80 : Config.POOL_SIZE.height,\r\n      };\r\n      this.properties.lanes = [];\r\n      this._height = this._properties.size.height;\r\n      this._width = this._properties.size.width;\r\n    } else {\r\n      this._height = this._properties.size.height;\r\n      this._width = this._properties.size.width;\r\n    }\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get width() {\r\n    return this._width;\r\n  }\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  set height(value) {\r\n    this._height = value;\r\n  }\r\n\r\n  get name() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.name = value;\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  set minHeight(value) {\r\n    this._minHeight = value;\r\n  }\r\n\r\n  drawElement() {\r\n    this._poolBox = this._viewport\r\n      .rect(0, 0, this._width, this._height)\r\n      .attr({ class: 'pool__outer_box' });\r\n\r\n    this._poolNameBox = this._viewport\r\n      .rect(0, 0, 30, this._height)\r\n      .attr({ class: 'pool__name_box' });\r\n\r\n    const box = this._poolBox.appendTo(this._viewport);\r\n    const bounds = box.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    this._label = this.drawForeignObjLabel(\r\n      -this.height,\r\n      0,\r\n      this.height,\r\n      30,\r\n      this.name,\r\n      'pool__group__text',\r\n      `pool_${this.id}`,\r\n    );\r\n    const lblGroup = this._label.select('g');\r\n    lblGroup.attr({\r\n      class: 'pool__group',\r\n    });\r\n    lblGroup.transform('R-90');\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, this._poolBox, this._poolNameBox, this._label)\r\n      .attr({ class: 'pool', id: `${Config.POOL}_${this._properties.id}` })\r\n      .mousedown(this.onElementMouseDown);\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  onHandleDragStart() {\r\n    // stop dragging object while resizing\r\n    this._graphic.undrag();\r\n    // reposition handle\r\n    this.removeResizeHandles();\r\n    this.drawResizeHandles();\r\n    this._contextMenu.hide();\r\n    this.emit('element_resize_start');\r\n  }\r\n\r\n  onHandleDrag(dx, dy, x, y, e) {\r\n    const selBox = this._selectionBox;\r\n    const [se] = this._handles;\r\n\r\n    const snapInvMatrix = selBox.transform().diffMatrix.invert();\r\n    snapInvMatrix.e = 0;\r\n    snapInvMatrix.f = 0;\r\n    const tdx = Math.round(snapInvMatrix.x(dx, dy) + this.SELECTSIZE / 2);\r\n    const tdy = Math.round(snapInvMatrix.y(dx, dy) + this.SELECTSIZE / 2);\r\n\r\n    const ep = this._viewport.getMousePoint(e, 0, 0);\r\n\r\n    const offX = Math.round(ep.x - this._graphic.matrix.e);\r\n    const offY = Math.round(ep.y - this._graphic.matrix.f);\r\n\r\n    if (offY >= this._minHeight) {\r\n      if (offX > 0 && offY > 0) {\r\n        this.emit('element_resizing', offX, offY);\r\n      }\r\n    }\r\n    se.transform(`t${[tdx - offX + this._width, tdy - offY + this._height]}`);\r\n  }\r\n\r\n  onHandleDragEnd() {\r\n    this.emit('element_resize_end');\r\n    this._properties.size = { width: this._width, height: this._height };\r\n    // restore dragging\r\n    this._graphic.drag(\r\n      this.onElementMove,\r\n      this.onElementMoveStart,\r\n      this.onElementMoveEnd,\r\n    );\r\n  }\r\n\r\n  resize(width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n\r\n    this._poolBox.attr({\r\n      width,\r\n      height,\r\n    });\r\n    this._poolNameBox.attr({ height });\r\n\r\n    this._selectionBox.attr({\r\n      width: width + this.SELECTSIZE,\r\n      height: height + this.SELECTSIZE,\r\n    });\r\n    this._updateNameLabel();\r\n    this._properties.size = { width: this._width, height: this._height };\r\n  }\r\n\r\n  _updateNameLabel() {\r\n    // reposition label\r\n    const bounds = this._poolNameBox.getBBox();\r\n    const fo = this._graphic.select(`#pool_${this.id}`);\r\n    fo.attr({\r\n      x: -bounds.height,\r\n      width: bounds.height,\r\n    });\r\n    this.updateTextLabel('pool__group__text', this._properties.name);\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport Element from './element';\r\n\r\nexport default class Lane extends Element {\r\n  constructor(id, x, y, viewport, properties) {\r\n    super(Config.LANE, id, viewport, x, y, properties, false, [Config.DELETE]);\r\n\r\n    if (properties) {\r\n      this._height = this._properties.size.height;\r\n      this._width = this._properties.size.width;\r\n\r\n      if (!properties.name || properties.name === '') {\r\n        properties.name = Config.LANE;\r\n      }\r\n    }\r\n    this._minHeight = 160;\r\n    this._maxHeight = Number.POSITIVE_INFINITY;\r\n    this._nameBoxWidth = 30;\r\n    this._laneBox = null;\r\n    this._laneNameBox = null;\r\n    this._label = null;\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get name() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.name = value;\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  get width() {\r\n    return this._width;\r\n  }\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  set maxHeight(value) {\r\n    this._maxHeight = value;\r\n  }\r\n\r\n  get maxHeight() {\r\n    return this._maxHeight;\r\n  }\r\n\r\n  drawElement() {\r\n    this._laneBox = this._viewport\r\n      .rect(this._nameBoxWidth, 0, this._width, this._height)\r\n      .attr({ class: 'lane__outer_box' });\r\n\r\n    this._laneNameBox = this._viewport\r\n      .rect(this._nameBoxWidth, 0, this._nameBoxWidth, this._height)\r\n      .attr({ class: 'lane__name_box' });\r\n\r\n    const box = this._laneBox.appendTo(this._viewport);\r\n    const bounds = box.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    this._label = this.drawForeignObjLabel(\r\n      -this.height,\r\n      this._nameBoxWidth,\r\n      this.height,\r\n      this._nameBoxWidth,\r\n      this.name,\r\n      'lane__group__text',\r\n      `lane_${this.id}`,\r\n    );\r\n    const lblGroup = this._label.select('g');\r\n    lblGroup.attr({\r\n      class: 'lane__group',\r\n    });\r\n    lblGroup.transform('R-90');\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, this._laneBox, this._laneNameBox, this._label)\r\n      .attr({ class: 'lane', id: `${Config.LANE}_${this._properties.id}` })\r\n      .mousedown(this.onElementMouseDown)\r\n      .click(this.onElementClick);\r\n\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  _updateNameLabel() {\r\n    // reposition label\r\n    const bounds = this._laneNameBox.getBBox();\r\n    const fo = this._graphic.select(`#lane_${this.id}`);\r\n    fo.attr({\r\n      x: -bounds.height,\r\n      width: bounds.height,\r\n    });\r\n    this.updateTextLabel('lane__group__text', this.name);\r\n  }\r\n\r\n  resizeWidth(w) {\r\n    this._width = w;\r\n    this._laneBox.attr({\r\n      width: w,\r\n    });\r\n    this._selectionBox.attr({\r\n      width: w + this.SELECTSIZE,\r\n    });\r\n  }\r\n\r\n  resizeHeight(h) {\r\n    this._laneBox.attr({\r\n      height: h,\r\n    });\r\n    this._laneNameBox.attr({\r\n      height: h,\r\n    });\r\n    this._selectionBox.attr({\r\n      height: h + this.SELECTSIZE,\r\n    });\r\n    this._height = h;\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  _onSelected() {\r\n    this._drawResizeBar();\r\n    this.emit('element_selected');\r\n  }\r\n\r\n  _onDeselected() {\r\n    this._removeResizeBar();\r\n    this.emit('element_unselected');\r\n  }\r\n\r\n  _drawResizeBar() {\r\n    const bounds = this._selectionBox.getBBox();\r\n    this._handle = this._viewport\r\n      .rect(\r\n        bounds.x2 - bounds.width / 2 - this._hSize / 2,\r\n        bounds.y2 - this._hSize / 2,\r\n        this._hSize,\r\n        this._hSize,\r\n      )\r\n      .attr({ class: 'resize__handle--row', id: 'resize__handle' });\r\n\r\n    const handlesGroup = this._viewport\r\n      .g(this._handle)\r\n      .drag(this.onHandleDrag, this.onHandleDragStart, this.onHandleDragEnd)\r\n      .attr({ class: 'resize', id: 'resize_bar' });\r\n    this._graphic.append(handlesGroup);\r\n  }\r\n\r\n  _removeResizeBar() {\r\n    if (this._graphic.select('#resize_bar')) {\r\n      this._graphic.select('#resize_bar').remove();\r\n    }\r\n  }\r\n\r\n  onHandleDragStart() {\r\n    this.emit('lane_resize_start');\r\n  }\r\n\r\n  onHandleDrag(dx, dy, x, y, e) {\r\n    const selBox = this._selectionBox;\r\n\r\n    const snapInvMatrix = selBox.transform().diffMatrix.invert();\r\n    snapInvMatrix.e = 0;\r\n    snapInvMatrix.f = 0;\r\n    const tdy = Math.round(snapInvMatrix.y(dx, dy) + this.SELECTSIZE / 2);\r\n    const ep = this._viewport.getMousePoint(e, 0, 0);\r\n\r\n    const offY = Math.round(ep.y - this._graphic.matrix.f);\r\n\r\n    if (offY >= this._minHeight && offY <= this._maxHeight) {\r\n      this.emit('lane_resizing', offY);\r\n    }\r\n    // update handle position\r\n    this._handle.transform(`t${[0, tdy - offY + this._height]}`);\r\n  }\r\n\r\n  onHandleDragEnd() {\r\n    this.emit('lane_resize_end');\r\n    this._removeResizeBar();\r\n    this._drawResizeBar();\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport Element from './element';\r\n\r\nexport default class Group extends Element {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.GROUP, id, viewport, x, y, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TEXT,\r\n    ]);\r\n\r\n    this.resizable = true;\r\n\r\n    if (!properties) {\r\n      this._properties.size = {\r\n        width: Config.GROUP_SIZE.width,\r\n        height: Config.GROUP_SIZE.height,\r\n      };\r\n      this._properties.name = '';\r\n    }\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get name() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.name = value;\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  drawElement() {\r\n    const groupBox = this._viewport\r\n      .rect(0, 0, this._properties.size.width, this._properties.size.height, 8)\r\n      .attr({ class: 'group__box' });\r\n\r\n    const groupHotSpot = this._viewport\r\n      .rect(\r\n        5,\r\n        5,\r\n        this._properties.size.width - 20,\r\n        this._properties.size.height - 20,\r\n        8,\r\n      )\r\n      .attr({ class: 'group__box__hotspot' });\r\n\r\n    const group = groupBox.appendTo(this._viewport);\r\n    const bounds = group.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const label = this.drawLabel(this.name, 'group__text', -20, bounds);\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, group, groupHotSpot, label)\r\n      .attr({ class: 'group', id: `${Config.GROUP}_${this._properties.id}` })\r\n      .mousedown(this.onElementMouseDown);\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  onResizingStart() {\r\n    this._contextMenu.hide();\r\n  }\r\n\r\n  onResizing(width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n\r\n    this._selectionBox.attr({\r\n      width: this._width + this.SELECTSIZE,\r\n      height: this._height + this.SELECTSIZE,\r\n    });\r\n    const el = this._graphic.select('.group__box');\r\n    el.attr({\r\n      width: this._width,\r\n      height: this._height,\r\n    });\r\n    const hotspot = this._graphic.select('.group__box__hotspot');\r\n    hotspot.attr({\r\n      width: Math.abs(this._width - 20),\r\n      height: Math.abs(this._height - 20),\r\n    });\r\n\r\n    const label = this._graphic.select('.group__text');\r\n    label.attr({ x: this._width / 2 });\r\n  }\r\n\r\n  onResizeEnd() {\r\n    // on element resize end\r\n  }\r\n\r\n  _updateNameLabel() {\r\n    const label = this._graphic.select('.group__text');\r\n    // set text\r\n    label.attr('text', this.name);\r\n    // reposition label\r\n    label.attr('x', Math.round(this._properties.size.width / 2));\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport Element from './element';\r\n\r\nexport default class TextAnnotation extends Element {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.TEXT, id, viewport, x, y, properties, isMovable, [\r\n      Config.DELETE,\r\n    ]);\r\n\r\n    this.resizable = true;\r\n\r\n    if (!properties) {\r\n      this._properties.size = {\r\n        width: Config.TEXT_SIZE.width,\r\n        height: Config.TEXT_SIZE.height,\r\n      };\r\n      this._properties.text = '';\r\n    }\r\n\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  get text() {\r\n    return this._properties.text;\r\n  }\r\n\r\n  set text(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.text = value;\r\n    this.updateTextLabel('annotation__box__text', this._properties.text);\r\n  }\r\n\r\n  drawElement() {\r\n    const annotationBox = this._viewport\r\n      .rect(0, 0, this._properties.size.width, this._properties.size.height)\r\n      .attr({ class: 'annotation__bg' });\r\n\r\n    const label = this.drawForeignObjLabel(\r\n      0,\r\n      0,\r\n      this._properties.size.width,\r\n      this._properties.size.height,\r\n      this._properties.text,\r\n      'annotation__box__text',\r\n      'text_box',\r\n    );\r\n\r\n    const annotationText = annotationBox.appendTo(this._viewport);\r\n    const bounds = annotationText.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n\r\n    const c = this._drawTextBorder(bounds);\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, annotationText, label, c)\r\n      .attr({\r\n        class: 'annotation',\r\n        id: `${Config.TEXT}_${this._properties.id}`,\r\n      })\r\n      .mousedown(this.onElementMouseDown);\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  onResizingStart() {\r\n    this._contextMenu.hide();\r\n  }\r\n\r\n  onResizing(width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n    const elBg = this._graphic.select('.annotation__bg');\r\n    const elText = this._graphic.select('#text_box');\r\n\r\n    const annotationBorder = this._graphic.select('.annotation__border');\r\n    if (annotationBorder) annotationBorder.remove();\r\n\r\n    this._selectionBox.attr({\r\n      width: this._width + this.SELECTSIZE,\r\n      height: this._height + this.SELECTSIZE,\r\n    });\r\n\r\n    elBg.attr({\r\n      width: this._width,\r\n      height: this._height,\r\n    });\r\n\r\n    elText.attr({\r\n      width: this._width,\r\n      height: this._height,\r\n    });\r\n\r\n    const bounds = elBg.getBBox();\r\n    this.graphic.add(this._drawTextBorder(bounds));\r\n  }\r\n\r\n  onResizeEnd() {\r\n    // on element resize\r\n  }\r\n\r\n  _drawTextBorder(bounds) {\r\n    const depth = 10;\r\n    const c = this._viewport\r\n      .polyline([\r\n        bounds.x + depth,\r\n        bounds.y,\r\n        bounds.x,\r\n        bounds.y,\r\n        bounds.x,\r\n        bounds.y,\r\n        bounds.x,\r\n        bounds.y2,\r\n        bounds.x,\r\n        bounds.y2,\r\n        bounds.x + depth,\r\n        bounds.y2,\r\n      ])\r\n      .attr({ class: 'annotation__border' });\r\n    return c;\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport Snap from 'snapsvg-cjs';\r\nimport Element from './element';\r\n\r\nexport default class DataElement extends Element {\r\n  constructor(type, id, x, y, viewport, properties, isMovable, menu) {\r\n    super(type, id, viewport, x, y, properties, isMovable, menu);\r\n    this._shapeNamePrefix = '';\r\n    this._typeId = type;\r\n    const dataName = this.elementType.split('Data');\r\n    if(this._properties.name===this._typeId){\r\n      this._properties.name = `Data ${dataName[1]}`;\r\n    }\r\n  }\r\n\r\n  get dataName() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  get state() {\r\n    return this._properties.state || '';\r\n  }\r\n\r\n  set state(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.state = value;\r\n    const stateValue = this._getCurrentState(value);\r\n    this.updateTextLabel(\r\n      `${this._shapeNamePrefix}__group__text__state`,\r\n      stateValue,\r\n    );\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.name = value;\r\n    this.updateTextLabel(`${this._shapeNamePrefix}__group__text`, value);\r\n  }\r\n\r\n  get collection() {\r\n    return this._properties.collection || false;\r\n  }\r\n\r\n  set collection(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.collection = value;\r\n    this._updateCollIcon();\r\n  }\r\n\r\n  get capacity() {\r\n    return this._properties.capacity || '';\r\n  }\r\n\r\n  set capacity(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.capacity = value;\r\n  }\r\n\r\n  get unlimit() {\r\n    return this._properties.unlimit || false;\r\n  }\r\n\r\n  set unlimit(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.unlimit = value;\r\n    if (value) delete this._properties.capacity;\r\n  }\r\n\r\n  _getCurrentState(value) {\r\n    return value === undefined || value === '' ? '' : `[${value}]`;\r\n  }\r\n\r\n  drawElement(shape, name, transform) {\r\n    this._shapeNamePrefix = name;\r\n    const icon = Snap.parse(`<g id=\"icon\">${shape}</g>`);\r\n    const dataElIcon = icon.select('g').attr({\r\n      class: `${name}__icon`,\r\n    });\r\n\r\n    dataElIcon.transform(transform);\r\n    const bgBox = this._viewport\r\n      .rect(0, 0, Config.DATA_SIZE.width, Config.DATA_SIZE.height)\r\n      .attr({ stroke: 'none', fill: 'none' });\r\n    const dataEl = dataElIcon.appendTo(this._viewport);\r\n    const bounds = bgBox.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds);\r\n    const collIcon = this._drawCollectionIcon();\r\n\r\n    const label = this.drawForeignObjLabel(\r\n      -40,\r\n      48,\r\n      120,\r\n      80,\r\n      this._properties.name,\r\n      this._getCurrentState(this._properties.state),\r\n      `${name}__group__text`,\r\n      `text_${this.id}`,\r\n    );\r\n    label.select('g').attr({\r\n      class: `${name}__group`,\r\n    });\r\n\r\n    this._graphic = this._viewport\r\n      .g(selectionBox, dataEl, collIcon, label, bgBox)\r\n      .mousedown(this.onElementMouseDown)\r\n      .attr({\r\n        class: name,\r\n        id: `${this._typeId}_${this._properties.id}`,\r\n      });\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.drag(\r\n        this.onElementMove,\r\n        this.onElementMoveStart,\r\n        this.onElementMoveEnd,\r\n      );\r\n    }\r\n  }\r\n\r\n  _drawCollectionIcon() {\r\n    let collIcon;\r\n    switch (this.collection) {\r\n      case true:\r\n        collIcon = Snap.parse(\r\n          '<g id=\"collIcon\"><path class=\"data__collIcon\" transform=\"scale(1, -1) translate(0, -100)\" d=\"M250 650l0-600 100 0 0 600-100 0z m200 0l0-600 100 0 0 600-100 0z m200 0l0-600 100 0 0 600-100 0z\" /></g>',\r\n        );\r\n        break;\r\n      case false:\r\n      case '':\r\n      case undefined:\r\n        collIcon = Snap.parse('<g id=\"collIcon\"></g>');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const collIconGroup = collIcon.select('g');\r\n    collIconGroup.transform('s0.020, T10,34');\r\n    return collIconGroup;\r\n  }\r\n\r\n  _updateCollIcon() {\r\n    // delete old icon\r\n    const oldIcon = this._graphic.select('#collIcon');\r\n    oldIcon.remove();\r\n    // append new icon\r\n    const collIconGroup = this._drawCollectionIcon();\r\n    collIconGroup.appendTo(this._graphic);\r\n  }\r\n\r\n  drawForeignObjLabel(x, y, width, height, title, state, classname, id) {\r\n    const fobjectSVG = `<g><foreignObject \r\n      x=\"${x}\"\r\n      y=\"${y}\"\r\n      width=\"${width}\" \r\n      height=\"${height}\"\r\n      id=\"${id}\">\r\n    <p class=\"${classname}\">${title}</p>\r\n    <p class=\"${classname}__state\">${state}</p>\r\n    </foreignObject></g>`;\r\n    return Snap.parse(fobjectSVG);\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport DataElement from './dataElement';\r\n\r\nexport default class DataObject extends DataElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.DATA_OBJECT, id, x, y, viewport, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TEXT,\r\n      Config.CONNECTOR,\r\n    ]);\r\n    this.drawElement(\r\n      '<path class=\"data_object__icon__fill\" d=\"M31.3,3.7c-9.2,0-18.4,0-27.6,0c0,19.4,0,38.9,0,58.3c14.3,0,28.6,0,42.9,0c0-14.3,0-28.6,0-42.9 c-5.1,0-10.2,0-15.3,0C31.3,14,31.3,8.9,31.3,3.7z\" /> <path class=\"data_object__icon__fill\" d=\"M35.1,4.7c0,3.6,0,7.1,0,10.7c3.5,0,6.9,0,10.4,0C42,11.9,38.6,8.3,35.1,4.7z\" /> <path d=\"M35.6,0C23.8,0,11.9,0,0,0c0,21.9,0,43.9,0,65.8c16.8,0,33.6,0,50.4,0c0-16.9,0-33.8,0-50.7C45.4,10.1,40.5,5.1,35.6,0z M35.1,4.7c3.5,3.6,6.9,7.1,10.4,10.7c-3.5,0-6.9,0-10.4,0C35.1,11.9,35.1,8.3,35.1,4.7z M46.6,62.1c-14.3,0-28.6,0-42.9,0 c0-19.4,0-38.9,0-58.3c9.1,0,18.4,0,27.6,0c0,5.2,0,10.3,0,15.5c5.1,0,10.2,0,15.3,0C46.6,33.5,46.6,47.8,46.6,62.1z\" />',\r\n      'data_object',\r\n      's0.60 t8',\r\n    );\r\n    this.initElement();\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport DataElement from './dataElement';\r\n\r\nexport default class DataInput extends DataElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.DATA_INPUT, id, x, y, viewport, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TEXT,\r\n      Config.CONNECTOR,\r\n    ]);\r\n    this.drawElement(\r\n      '<polygon class=\"data_input__icon__fill\" points=\"8.9 19 17.6 19 17.6 24.4 25.2 17.3 17.6 10.3 17.6 15.7 8.9 15.7\"/> <polygon class=\"data_input__icon__fill\" points=\"34.6 4.7 34.6 15.3 44.9 15.3\"/> <path class=\"data_input__icon__fill\" d=\"m30.9 3.7h-27.2v57.6h42.3v-42.3h-15.1v-15.3zm-14.9 24.5v-7.6h-8.7v-6.6h8.7v-7.6l11.6 10.9-11.6 10.9z\"/> <path d=\"m35.2 0h-35.2v65h49.7v-50.1c-4.8-5-9.6-9.9-14.5-14.9zm-0.6 4.7l10.3 10.6h-10.3v-10.6zm11.4 56.6h-42.3v-57.6h27.2v15.3h15.1v42.3z\"/> <path d=\"M16,8.4V14H7.3v6.6H16v7.6l11.6-10.8L16,6.4V8.4z M17.6,10.3l7.6,7.1l-7.6,7.1V19H8.9v-3.3h8.7V10.3z\"/>',\r\n      'data_input',\r\n      's0.60 t8',\r\n    );\r\n    this.initElement();\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport DataElement from './dataElement';\r\n\r\nexport default class DataOutput extends DataElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.DATA_OUTPUT, id, x, y, viewport, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TEXT,\r\n    ]);\r\n    this.drawElement(\r\n      '<path class=\"data_output__icon__fill\" d=\"M30.9,3.7c-9.1,0-18.2,0-27.2,0v57.6H46V19H30.9V3.7z M16,28.2v-7.6H7.3V14H16V6.4l11.6,10.9L16,28.2z\"/> <polygon class=\"data_output__icon__fill\" points=\"34.6 4.7 34.6 15.3 44.9 15.3\"/> <path d=\"m35.2 0h-35.2v65h49.7v-50.1c-4.8-5-9.6-9.9-14.5-14.9zm-0.6 4.7l10.3 10.6h-10.3v-10.6zm11.4 56.6h-42.3v-57.6h27.2v15.3h15.1v42.3z\"/> <polygon points=\"16 14 7.3 14 7.3 20.6 16 20.6 16 28.2 27.6 17.3 16 6.4\"/>',\r\n      'data_output',\r\n      's0.60 t8',\r\n    );\r\n    this.initElement();\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport DataElement from './dataElement';\r\n\r\nexport default class DataStore extends DataElement {\r\n  constructor(id, x, y, viewport, properties, isMovable) {\r\n    super(Config.DATA_STORE, id, x, y, viewport, properties, isMovable, [\r\n      Config.DELETE,\r\n      Config.TEXT,\r\n      Config.CONNECTOR,\r\n    ]);\r\n    this.drawElement(\r\n      '<path class=\"data_store__icon__fill\" d=\"M33.6,15.7c-3.7,0.8-8.4,1.2-13.2,1.2c-4.8,0-9.5-0.4-13.2-1.2c-1.9-0.4-3.5-0.9-4.8-1.6 c-0.1-0.1-0.3-0.2-0.4-0.2v2.5c0.1,0.3,0.5,0.8,1.4,1.3c1,0.5,2.4,1,4.2,1.4c3.5,0.7,8.1,1.1,12.8,1.1c4.6,0,9.3-0.4,12.8-1.1 c1.7-0.4,3.2-0.8,4.2-1.4c0.9-0.5,1.3-1,1.4-1.3v-2.5c-0.1,0.1-0.3,0.2-0.4,0.2C37.1,14.8,35.5,15.3,33.6,15.7z\"/><path class=\"data_store__icon__fill\" d=\"M33.6,10.3c-3.7,0.8-8.4,1.2-13.2,1.2c-4.8,0-9.5-0.4-13.2-1.2C5.4,9.9,3.8,9.4,2.5,8.8 C2.4,8.7,2.2,8.6,2.1,8.5V11c0.1,0.3,0.5,0.8,1.4,1.3c1,0.5,2.4,1,4.2,1.4c3.5,0.7,8.1,1.1,12.8,1.1c4.6,0,9.3-0.4,12.8-1.1 c1.7-0.4,3.2-0.8,4.2-1.4c0.9-0.5,1.3-1,1.4-1.3V8.5c-0.1,0.1-0.3,0.2-0.4,0.2C37.1,9.4,35.5,9.9,33.6,10.3z\"/><path class=\"data_store__icon__fill\" d=\"M3.5,6.9c1,0.5,2.4,1,4.2,1.4c3.5,0.7,8.1,1.1,12.8,1.1c4.6,0,9.3-0.4,12.8-1.1c1.7-0.4,3.2-0.8,4.2-1.4 c0.8-0.4,1.2-0.8,1.4-1.1c-0.2-0.3-0.6-0.7-1.4-1.1c-1-0.5-2.4-1-4.2-1.3c-3.5-0.8-8.1-1.2-12.8-1.2c-4.6,0-9.3,0.4-12.8,1.2 C6,3.7,4.5,4.2,3.5,4.6C2.8,5.1,2.3,5.5,2.2,5.8C2.3,6.1,2.8,6.5,3.5,6.9z\"/><path class=\"data_store__icon__fill\" d=\"M20.4,0C20.4,0,20.3,0,20.4,0C20.3,0,20.4,0,20.4,0C20.4,0,20.4,0,20.4,0z\"/><path class=\"data_store__icon__fill\" d=\"M33.6,21.1c-3.7,0.8-8.4,1.2-13.2,1.2c-4.8,0-9.5-0.4-13.2-1.2c-1.9-0.4-3.5-0.9-4.8-1.6 c-0.1-0.1-0.3-0.2-0.4-0.2v14.6c0.1,0.3,0.5,0.8,1.4,1.3c1,0.5,2.4,1,4.2,1.4c2.7,0.6,6,0.9,9.5,1.1c1,0,2,0.1,3.1,0.1c0,0,0,0,0,0 c0.1,0,0.3,0,0.4,0c0.5,0,1,0,1.5,0c3.5-0.1,6.9-0.4,9.8-0.9c0.4-0.1,0.9-0.2,1.3-0.3c1.7-0.4,3.2-0.8,4.2-1.4 c0.9-0.5,1.3-1,1.4-1.3V19.2c-0.1,0.1-0.3,0.2-0.4,0.2C37.1,20.2,35.5,20.6,33.6,21.1z\"/><path d=\"M40.8,5.4c-0.3-1.1-1.3-2-2.5-2.6c-1.3-0.7-2.9-1.2-4.8-1.6c-3-0.6-6.7-1-10.6-1.2c-0.1,0-0.1,0-0.2,0c-0.8,0-1.6,0-2.4,0 c0,0,0,0,0,0c0,0-0.1,0-0.1,0c-4.7,0-9.4,0.4-13,1.2c-1.9,0.4-3.5,1-4.8,1.6C1.3,3.4,0.4,4.3,0.1,5.4C0,5.5,0,5.6,0,5.7v0.1 c0,0.1,0,0.1,0,0.1c0,8.8,0,19,0,28.3v0.1c0.3,1.3,1.3,2.1,2.5,2.8c1.3,0.7,2.9,1.2,4.8,1.6c3.7,0.8,8.4,1.2,13.2,1.2 c4.8,0,9.5-0.4,13.2-1.2c1.9-0.4,3.5-0.9,4.8-1.6c1.2-0.7,2.2-1.5,2.5-2.8v-0.1c0-9.7,0-18.7,0-28.2V5.8V5.7 C40.9,5.6,40.8,5.5,40.8,5.4z M3.5,4.6c1-0.5,2.4-1,4.2-1.3c3.5-0.8,8.1-1.2,12.8-1.2c4.6,0,9.3,0.4,12.8,1.2 c1.7,0.4,3.2,0.8,4.2,1.3c0.8,0.4,1.2,0.8,1.4,1.1c-0.2,0.3-0.6,0.7-1.4,1.1c-1,0.5-2.4,1-4.2,1.4C29.7,9,25.1,9.4,20.5,9.4 c-4.6,0-9.3-0.4-12.8-1.1C6,7.9,4.5,7.5,3.5,6.9C2.8,6.5,2.3,6.1,2.2,5.8C2.3,5.5,2.8,5.1,3.5,4.6z M38.8,33.9 c-0.1,0.3-0.5,0.8-1.4,1.3c-1,0.5-2.4,1-4.2,1.4c-0.4,0.1-0.8,0.2-1.3,0.3c-2.9,0.5-6.3,0.8-9.8,0.9c-0.5,0-1,0-1.5,0 c-0.1,0-0.1,0-0.2,0c-0.1,0-0.1,0-0.2,0c0,0,0,0,0,0c-1,0-2.1,0-3.1-0.1c-3.5-0.1-6.8-0.5-9.5-1.1c-1.7-0.4-3.2-0.8-4.2-1.4 c-1-0.5-1.3-1-1.4-1.3V19.2c0.1,0.1,0.3,0.2,0.4,0.2c1.3,0.7,2.9,1.1,4.8,1.6c3.7,0.8,8.4,1.2,13.2,1.2c4.8,0,9.5-0.4,13.2-1.2 c1.9-0.4,3.5-0.9,4.8-1.6c0.1-0.1,0.3-0.2,0.4-0.2V33.9z M38.8,16.4c-0.1,0.3-0.5,0.8-1.4,1.3c-1,0.5-2.4,1-4.2,1.4 c-3.5,0.7-8.1,1.1-12.8,1.1c-4.6,0-9.3-0.4-12.8-1.1c-1.7-0.4-3.2-0.8-4.2-1.4c-1-0.5-1.3-1-1.4-1.3v-2.5c0.1,0.1,0.3,0.2,0.4,0.2 c1.3,0.7,2.9,1.1,4.8,1.6c3.7,0.8,8.4,1.2,13.2,1.2c4.8,0,9.5-0.4,13.2-1.2c1.9-0.4,3.5-0.9,4.8-1.6c0.1-0.1,0.3-0.2,0.4-0.2V16.4z M38.8,11c-0.1,0.3-0.5,0.8-1.4,1.3c-1,0.5-2.4,1-4.2,1.4c-3.5,0.7-8.1,1.1-12.8,1.1c-4.6,0-9.3-0.4-12.8-1.1 c-1.7-0.4-3.2-0.8-4.2-1.4c-1-0.5-1.3-1-1.4-1.3V8.5c0.1,0.1,0.3,0.2,0.4,0.2c1.3,0.7,2.9,1.1,4.8,1.6c3.7,0.8,8.4,1.2,13.2,1.2 c4.8,0,9.5-0.4,13.2-1.2c1.9-0.4,3.5-0.9,4.8-1.6c0.1-0.1,0.3-0.2,0.4-0.2V11z\"/>',\r\n      'data_store',\r\n      's1',\r\n    );\r\n    this.initElement();\r\n    if (!this._properties.unlimit) this._properties.unlimit = false;\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport Config from 'config';\r\n\r\nexport default class Workflow extends EventEmitter {\r\n  constructor(id, properties) {\r\n    super();\r\n    this._elementType = Config.WORKFLOW;\r\n    if (!properties) {\r\n      this.properties = {\r\n        id,\r\n      };\r\n    } else {\r\n      this.properties = properties;\r\n    }\r\n    if (\r\n      (!properties.name || properties.name === '')\r\n      && Config.ENV === 'Offline'\r\n    ) {\r\n      properties.name = 'Default_Process';\r\n    }\r\n  }\r\n\r\n  get id() {\r\n    return this._properties.id;\r\n  }\r\n\r\n  get properties() {\r\n    return this._properties;\r\n  }\r\n\r\n  set properties(value) {\r\n    this._properties = value;\r\n  }\r\n\r\n  get elementType() {\r\n    return this._elementType;\r\n  }\r\n\r\n  get documentation() {\r\n    return this._properties.documentation\r\n      ? this._properties.documentation.text\r\n      : '';\r\n  }\r\n\r\n  getConditionEvent(id) {\r\n    if (this._properties.events) {\r\n      const event = this._properties.events.find((value) => value.id === id);\r\n      if (event) return event.condition || '';\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get events() {\r\n    return this._properties.events || [];\r\n  }\r\n\r\n  set events(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events = value;\r\n  }\r\n\r\n  set newEvent(value) {\r\n    this._properties.events.push(value);\r\n  }\r\n\r\n  set forms(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.forms = value;\r\n  }\r\n\r\n  get forms() {\r\n    return this._properties.forms;\r\n  }\r\n\r\n  get name() {\r\n    return this._properties.name;\r\n  }\r\n\r\n  set name(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.name = value;\r\n    this.emit('process_name_changed');\r\n  }\r\n\r\n  set documentation(value) {\r\n    this.emit('element_onpropertychange');\r\n    if (!this.documentation) {\r\n      this._properties.documentation = { id: value.id };\r\n    }\r\n    this._properties.documentation.text = value.text;\r\n  }\r\n\r\n  setBindingsEventByIndex(index, value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events[index].bindings = value;\r\n  }\r\n\r\n  setBindingEvent(indexEvt, indexBinding, value) {\r\n    if (indexBinding === -1) {\r\n      this.events[indexEvt].bindings.push(value);\r\n    } else {\r\n      this._properties.events[indexEvt].bindings[indexBinding] = value;\r\n    }\r\n  }\r\n\r\n  deleteBindingInIndex(indexEvt, indexBin) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.events[indexEvt].bindings.splice(indexBin, 1);\r\n  }\r\n\r\n  setSpecificBindingAttribute(event, attr, type, value = null) {\r\n    const eventIndex = this.objectIndex(event, 'events');\r\n    if (eventIndex !== -1) {\r\n      const attrs = this.events[eventIndex].bindings || [];\r\n      const attrIndex = attrs.findIndex((bin) => {\r\n        return parseInt(bin.busClaParId, 10) === parseInt(attr.id, 10);\r\n      });\r\n      if (attrIndex !== -1) {\r\n        this.events[eventIndex].bindings[attrIndex].busClaParBndType = type;\r\n        this.emit('element_onpropertychange');\r\n        if (type === 'V' && value) {\r\n          this.events[eventIndex].bindings[attrIndex].busClaParBndValue = value;\r\n        }\r\n        if ((type === 'E' || type === 'P') && value) {\r\n          this.events[eventIndex].bindings[attrIndex].attId = value.attId;\r\n          this.events[eventIndex].bindings[attrIndex].attTooltip = value.attTooltip;\r\n          this.events[eventIndex].bindings[attrIndex].attName = value.attName;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  objectIndex(obj, prop, idCompare = 'id') {\r\n    const copyArray = Array.isArray(prop) ? prop : this._properties[prop] || [];\r\n    const index = copyArray.findIndex((value) => {\r\n      return parseInt(value[idCompare], 10) === parseInt(obj[idCompare], 10);\r\n    });\r\n    return index;\r\n  }\r\n\r\n  setPropertyObject(object, propArray, propToChange, value) {\r\n    const index = this.objectIndex(object, propArray);\r\n    if (index !== -1 && this._properties[propArray]) {\r\n      this.emit('element_onpropertychange');\r\n      if (Array.isArray(propToChange) && Array.isArray(value)) {\r\n        let i = 0;\r\n        propToChange.forEach((prop) => {\r\n          this._properties[propArray][index][prop] = value[i];\r\n          i++;\r\n        });\r\n      } else {\r\n        this._properties[propArray][index][propToChange] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  deletePropertyByName(name) {\r\n    if (this._properties[name]) {\r\n      delete this._properties[name];\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-cond-assign */\r\nimport Config from 'config';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport Snap from 'snapsvg-cjs';\r\nimport {} from '../../utils/snaptoolkit';\r\nimport Element from './element';\r\nimport { getProcessElementByID, getSquareIntersection, getClosestMultiple } from '../../utils/util';\r\n// import PathfinderManager from '../../pathfinderManager';\r\n\r\nexport default class Connector extends Element {\r\n  constructor(\r\n    id,\r\n    viewport,\r\n    properties,\r\n    elements,\r\n    startMarker,\r\n    endMarker,\r\n    expressionMarker,\r\n    wizardMarker,\r\n    isMovable,\r\n  ) {\r\n    super(Config.CONNECTOR, id, viewport, null, null, properties, isMovable, [Config.DELETE]);\r\n    this._path = null;\r\n    this._selectionPath = null;\r\n    this._elements = elements;\r\n    this._endMarker = endMarker;\r\n    this._startMarker = startMarker;\r\n    this._expressionMarker = expressionMarker;\r\n    this._wizardMarker = wizardMarker;\r\n    this._segmentPoints = Snap.set();\r\n    this._fromEl = getProcessElementByID(this._properties.from, this._elements);\r\n    this._toEl = getProcessElementByID(this._properties.to, this._elements);\r\n    this._CONTROL_POINT_RADIUS = 4;\r\n    this._clickCount = 0;\r\n    this._timeout = 300;\r\n    this._ox = 0;\r\n    this._oy = 0;\r\n    this._oldElMoving = { srcEl: null, x: 0, y: 0 };\r\n    // this._pathfinderManager = new PathfinderManager(viewport);\r\n    // if from/to element don't yet exist, exit\r\n    if (!this._fromEl || !this._toEl) {\r\n      return;\r\n    }\r\n\r\n    if (!this.properties.points) {\r\n      this.properties.points = [];\r\n    }\r\n\r\n    this._points = cloneDeep(this.properties.points) || [];\r\n\r\n    if (properties.type === Config.CONNECTOR_TYPE_ASSOCIATION && !properties.direction) {\r\n      properties.direction = 'none';\r\n    }\r\n    if (properties.type === Config.CONNECTOR_TYPE_TRANSITION && !properties.class) {\r\n      properties.class = 'N';\r\n    }\r\n    if (this._fromEl.elementType === Config.GATEWAY) {\r\n      if (this._fromEl.type === 'exclusive' || this._fromEl.type === 'inclusive') {\r\n        properties.kind = 'expression';\r\n      } else if (this._fromEl.type === 'parallel' || this._fromEl.type === 'event') {\r\n        properties.kind = 'none';\r\n      }\r\n    }\r\n\r\n    this._onConnectorMouseOver = this._onConnectorMouseOver.bind(this);\r\n    this._onConnectorMouseOut = this._onConnectorMouseOut.bind(this);\r\n    this._onDblClick = this._onDblClick.bind(this);\r\n\r\n    this.drawElement();\r\n    this.initElement();\r\n  }\r\n\r\n  // getters methods\r\n\r\n  get connectorName() {\r\n    return this._properties.name || '';\r\n  }\r\n\r\n  get from() {\r\n    return this._properties.from;\r\n  }\r\n\r\n  get to() {\r\n    return this._properties.to;\r\n  }\r\n\r\n  get connectorClass() {\r\n    return this._properties.class || 'n';\r\n  }\r\n\r\n  get expression() {\r\n    return this._properties.expression;\r\n  }\r\n\r\n  get kind() {\r\n    return this._properties.kind || 'none';\r\n  }\r\n\r\n  get direction() {\r\n    return this._properties.direction || 'none';\r\n  }\r\n\r\n  get type() {\r\n    return this._properties.type;\r\n  }\r\n\r\n  get executionOrder() {\r\n    return this._properties.executionOrder;\r\n  }\r\n\r\n  // setters methods\r\n\r\n  set connectorName(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.name = value;\r\n    this._updateNameLabel();\r\n  }\r\n\r\n  set from(value) {\r\n    this._properties.from = value;\r\n  }\r\n\r\n  set to(value) {\r\n    this._properties.to = value;\r\n  }\r\n\r\n  set connectorClass(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.class = value;\r\n    this._updateConnectorClass();\r\n  }\r\n\r\n  set kind(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.kind = value;\r\n    if (this._fromEl.elementType !== Config.GATEWAY) {\r\n      this._updateConditionType();\r\n    }\r\n  }\r\n\r\n  set expression(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.expression = value;\r\n  }\r\n\r\n  set executionOrder(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.executionOrder = value;\r\n  }\r\n\r\n  // Only when the connector type is association\r\n\r\n  set direction(value) {\r\n    this.emit('element_onpropertychange');\r\n    this._properties.direction = value;\r\n    this._updateDirection(value);\r\n  }\r\n\r\n  setInitialDirection(value) {\r\n    this._properties.direction = value;\r\n    this._updateDirection(value);\r\n  }\r\n\r\n  set points(value) {\r\n    // restore start/end points to element's center for future compat\r\n    // set first points to elements center\r\n    this.properties.points = cloneDeep(value);\r\n    this.properties.points[0] = {\r\n      x: this._fromEl.graphic.matrix.e + this._fromEl.width / 2 - Config.ELEMENT_SELECT_SIZE / 2,\r\n      y: this._fromEl.graphic.matrix.f + this._fromEl.height / 2 - Config.ELEMENT_SELECT_SIZE / 2,\r\n    };\r\n    // set last points to elements center\r\n    this.properties.points[this.properties.points.length - 1] = {\r\n      x: this._toEl.graphic.matrix.e + this._toEl.width / 2 - Config.ELEMENT_SELECT_SIZE / 2,\r\n      y: this._toEl.graphic.matrix.f + this._toEl.height / 2 - Config.ELEMENT_SELECT_SIZE / 2,\r\n    };\r\n  }\r\n\r\n  drawElement() {\r\n    let pathString = null;\r\n    for (let i = 0, len = this._points.length; i < len; i++) {\r\n      if (i === 0) {\r\n        pathString = `M ${this._points[0].x} ${this._points[0].y} `;\r\n      } else {\r\n        pathString += `L ${this._points[i].x} ${this._points[i].y} `;\r\n      }\r\n    }\r\n    this._path = this._viewport.path(pathString).attr({\r\n      class: `connector--${this.properties.type}`,\r\n      markerEnd: this._endMarker,\r\n    });\r\n\r\n    this._selectionPath = this._viewport.path(pathString).attr({\r\n      class: 'connector__selection',\r\n    });\r\n\r\n    if (this._isMovable) this._path.dblclick(this._onDblClick);\r\n\r\n    const bounds = this._path.getBBox();\r\n    const selectionBox = this.drawSelectionBox(bounds, 'selectionBox selectionBox--connector');\r\n\r\n    const pathlen = this._path.getTotalLength() / 2;\r\n    const centerCoords = this._path.getPointAtLength(pathlen);\r\n\r\n    this._label = this._drawForeignObjLabel(\r\n      centerCoords.x,\r\n      centerCoords.y,\r\n      this.connectorName,\r\n      'connector__group__text',\r\n      `text_${this.id}`,\r\n    );\r\n    this._label.select('g').attr({\r\n      class: 'connector__group',\r\n      dy: -10,\r\n    });\r\n\r\n    this._graphic = this._viewport\r\n      .g(this._selectionPath, selectionBox, this._path, this._label, this._segmentPoints)\r\n      .click(this.onElementMouseDown)\r\n      .attr({\r\n        class: 'connector',\r\n        id: `${Config.CONNECTOR}_${this._properties.id}`,\r\n      });\r\n\r\n    // send after grid\r\n    this.toBack();\r\n\r\n    if (this._isMovable) {\r\n      this._graphic.mouseover(this._onConnectorMouseOver).mouseout(this._onConnectorMouseOut);\r\n    }\r\n\r\n    this._updateConditionType();\r\n    this._updateConnectorClass();\r\n    if (this.properties.type === Config.CONNECTOR_TYPE_ASSOCIATION) {\r\n      this._updateDirection();\r\n    }\r\n    this.updateConnection();\r\n  }\r\n\r\n  _drawForeignObjLabel(x, y, title, classname, id) {\r\n    const fobjectSVG = `<g><foreignObject \r\n      x=\"${x}\"\r\n      y=\"${y}\"\r\n      width=\"80\" \r\n      height=\"80\"\r\n      id=\"${id}\">\r\n    <p class=\"${classname}\">${title}</p></foreignObject></g>`;\r\n    return Snap.parse(fobjectSVG);\r\n  }\r\n\r\n  _updateConnectorClass() {\r\n    switch (this.connectorClass.toUpperCase()) {\r\n      case 'N':\r\n        this._path.removeClass('connector--loopback');\r\n        this._path.attr({\r\n          markerEnd: this._endMarker,\r\n        });\r\n        break;\r\n      case 'W':\r\n        this._path.attr({\r\n          markerEnd: this._wizardMarker,\r\n        });\r\n        break;\r\n      case 'L':\r\n        this._path.addClass('connector--loopback');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  _updateConditionType() {\r\n    switch (this.kind.toUpperCase()) {\r\n      case 'NONE':\r\n        this._path.attr({\r\n          markerStart: '',\r\n        });\r\n        break;\r\n      case 'EXPRESSION':\r\n        if (this._fromEl.elementType !== Config.GATEWAY) {\r\n          this._path.attr({\r\n            markerStart: this._expressionMarker,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  _updateDirection() {\r\n    switch (this.direction.toUpperCase()) {\r\n      case 'NONE':\r\n        this._path.attr({\r\n          markerEnd: '',\r\n          markerStart: '',\r\n        });\r\n        break;\r\n      case 'DIRECTIONAL':\r\n        this._path.attr({\r\n          markerEnd: this._endMarker,\r\n        });\r\n        break;\r\n      case 'BOTH':\r\n        this._path.attr({\r\n          markerEnd: this._endMarker,\r\n          markerStart: this._startMarker,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  updateConnectionStart() {\r\n    // send to back when parent element on move starts\r\n    this.toBack();\r\n  }\r\n\r\n  updateConnection(offset = { x: 0, y: 0 }, isPoolMoving = false) {\r\n    if (this._fromEl === null || this._toEl === null) {\r\n      return;\r\n    }\r\n    const selectionSize = Config.ELEMENT_SELECT_SIZE / 2;\r\n    let w1 = this._fromEl.width / 2;\r\n    let h1 = this._fromEl.height / 2;\r\n    let w2 = this._toEl.width / 2;\r\n    let h2 = this._toEl.height / 2;\r\n    let pathString = null;\r\n    let cx1;\r\n    let cy1;\r\n    let cx2;\r\n    let cy2;\r\n    let dy;\r\n    let dx;\r\n    let p1;\r\n    let p2;\r\n\r\n    if (this._points.length < 3) {\r\n      // one segment path\r\n\r\n      // Straight line\r\n      cx1 = this._fromEl.graphic.matrix.e - selectionSize + w1;\r\n      cy1 = this._fromEl.graphic.matrix.f - selectionSize + h1;\r\n      cx2 = this._toEl.graphic.matrix.e - selectionSize + w2;\r\n      cy2 = this._toEl.graphic.matrix.f - selectionSize + h2;\r\n\r\n      dy = cy2 - cy1;\r\n      dx = cx2 - cx1;\r\n\r\n      p1 = getSquareIntersection(dx, dy, cx1, cy1, w1, h1);\r\n      p2 = getSquareIntersection(-dx, -dy, cx2, cy2, w2, h2);\r\n\r\n      // replace NaN with offscreen value\r\n      if (p1.includes(NaN) || p2.includes(NaN)) {\r\n        p1 = p1.map((e) => {\r\n          return isNaN(e) ? -40000 : e;\r\n        });\r\n        p2 = p2.map((e) => {\r\n          return isNaN(e) ? -4000 : e;\r\n        });\r\n      }\r\n\r\n      for (let i = 0, len = this._points.length; i < len; i++) {\r\n        if (i === 0) {\r\n          pathString = `M ${p1[0]} ${p1[1]} `;\r\n          this._points[i] = { x: p1[0], y: p1[1] };\r\n        } else {\r\n          pathString += `L ${p2[0]} ${p2[1]} `;\r\n          this._points[i] = { x: p2[0], y: p2[1] };\r\n        }\r\n      }\r\n      this._path.attr({\r\n        d: pathString,\r\n      });\r\n\r\n      this._selectionPath.attr({\r\n        d: pathString,\r\n      });\r\n\r\n      // Pathfinder ---\r\n      // const pathFound = this._pathfinderManager.findPath(\r\n      //   this._fromEl,\r\n      //   this._toEl,\r\n      // );\r\n      // this._path.attr({\r\n      //   d: pathFound,\r\n      // });\r\n      // -------------\r\n    } else {\r\n      // 2 or more segments\r\n      for (let i = 0, len = this._points.length; i < len; i++) {\r\n        if (i === 0) {\r\n          w1 = this._fromEl.width / 2;\r\n          h1 = this._fromEl.height / 2;\r\n          w2 = 0;\r\n          h2 = 0;\r\n          cx1 = this._fromEl.graphic.matrix.e - selectionSize + w1;\r\n          cy1 = this._fromEl.graphic.matrix.f - selectionSize + h1;\r\n          cx2 = this._points[i + 1].x + offset.x / 2;\r\n          cy2 = this._points[i + 1].y + offset.y / 2;\r\n          dy = cy2 - cy1;\r\n          dx = cx2 - cx1;\r\n          p1 = getSquareIntersection(dx, dy, cx1, cy1, w1, h1);\r\n\r\n          if (!p1.includes(NaN)) {\r\n            pathString = `M ${p1[0]} ${p1[1]} `;\r\n            this._points[i] = { x: p1[0], y: p1[1] };\r\n          } else {\r\n            pathString = `M ${cx1} ${cy1} `;\r\n            this._points[i] = { x: cx1, y: cy1 };\r\n          }\r\n        } else if (i > 0 && i < len - 1) {\r\n          // middle segments\r\n          const p = {};\r\n          // if snap is on, then get on the grid, (doesnt work with pool moving)\r\n\r\n          if (this._isSnapOn && !isPoolMoving) {\r\n            // get closest grid if not moved by pool\r\n            p.x = Math.round(\r\n              getClosestMultiple(this._points[i].x + offset.x / 2, this._snapSize)\r\n                + this._snapSize / 2,\r\n            );\r\n            p.y = Math.round(\r\n              getClosestMultiple(this._points[i].y + offset.y / 2, this._snapSize)\r\n                + this._snapSize / 2,\r\n            );\r\n          } else {\r\n            p.x = this._points[i].x + offset.x / 2;\r\n            p.y = this._points[i].y + offset.y / 2;\r\n          }\r\n          pathString += `L ${p.x} ${p.y} `;\r\n          // save all middle points and leave first/last to the center object\r\n          this._points[i] = {\r\n            x: p.x,\r\n            y: p.y,\r\n          };\r\n        } else {\r\n          w1 = 0;\r\n          h1 = 0;\r\n          w2 = this._toEl.width / 2;\r\n          h2 = this._toEl.height / 2;\r\n          cx1 = this._points[i - 1].x + offset.x / 2;\r\n          cy1 = this._points[i - 1].y + offset.y / 2;\r\n          cx2 = this._toEl.graphic.matrix.e - selectionSize + w2;\r\n          cy2 = this._toEl.graphic.matrix.f - selectionSize + h2;\r\n          dy = cy2 - cy1;\r\n          dx = cx2 - cx1;\r\n          p2 = getSquareIntersection(-dx, -dy, cx2, cy2, w2, h2);\r\n          if (!p2.includes(NaN)) {\r\n            pathString += `L ${p2[0]} ${p2[1]} `;\r\n            this._points[i] = { x: p2[0], y: p2[1] };\r\n          }\r\n        }\r\n      }\r\n      this._path.attr({\r\n        d: pathString,\r\n      });\r\n\r\n      this._selectionPath.attr({\r\n        d: pathString,\r\n      });\r\n    }\r\n\r\n    // selection update\r\n    // update selection box w/ new coordenates after elemetns move\r\n    if (this._graphic) {\r\n      const bounds = this._path.getBBox();\r\n      this._selectionBox.attr({\r\n        x: Math.round(bounds.x - Config.ELEMENT_SELECT_SIZE / 2),\r\n        y: Math.round(bounds.y - Config.ELEMENT_SELECT_SIZE / 2),\r\n        width: Math.round(bounds.width + Config.ELEMENT_SELECT_SIZE),\r\n        height: Math.round(bounds.height + Config.ELEMENT_SELECT_SIZE),\r\n      });\r\n    }\r\n\r\n    // Label Position update\r\n    this._updateNameLabel();\r\n\r\n    // update points\r\n    this.points = this._points;\r\n  }\r\n\r\n  _updateNameLabel() {\r\n    const pathlen = this._path.getTotalLength() / 2;\r\n    const centerCoords = this._path.getPointAtLength(pathlen);\r\n    const fo = this._graphic.select('foreignObject');\r\n    const p = this._graphic.select('p');\r\n    const pBounds = p.node.getBoundingClientRect();\r\n    fo.attr({\r\n      x: Math.round(centerCoords.x - pBounds.width / 2),\r\n      y: Math.round(centerCoords.y),\r\n    });\r\n    this.updateTextLabel('connector__group__text', this.connectorName);\r\n  }\r\n\r\n  _onDblClick(evt) {\r\n    this._addNewSegmentToConnector(evt);\r\n  }\r\n\r\n  _onConnectorMouseOver() {\r\n    this._path.attr({ strokeWidth: 5 });\r\n  }\r\n\r\n  _onConnectorMouseOut() {\r\n    this._path.attr({ strokeWidth: 2 });\r\n  }\r\n\r\n  _onSelected() {\r\n    this._drawSegmentPoints();\r\n    this.emit('element_selected');\r\n  }\r\n\r\n  _onDeselected() {\r\n    this._removeSegmentPoints();\r\n    this.emit('element_unselected');\r\n  }\r\n\r\n  _addNewSegmentToConnector(evt) {\r\n    const clientPoint = this._viewport.getInverseScreenPoint(evt.clientX, evt.clientY);\r\n    const point = this._closestPoint(this._path, [clientPoint.x, clientPoint.y]);\r\n    const pointLength = this._getLengthForPointInPath(point, this._path);\r\n    const positionToInsert = this._getNextPositionInPointsArray(pointLength);\r\n    // save to history\r\n    this.emit('connector_point_new');\r\n    this._points.splice(positionToInsert, 0, point);\r\n    this.points = this._points;\r\n    this._removeSegmentPoints();\r\n    this._drawSegmentPoints();\r\n  }\r\n\r\n  _removeSegmentPoints() {\r\n    this._segmentPoints.forEach((handle) => {\r\n      handle.undrag();\r\n      handle.unmouseout();\r\n      handle.unmouseover();\r\n      handle.unclick();\r\n      handle.remove();\r\n    });\r\n    this._segmentPoints.clear();\r\n  }\r\n\r\n  _drawSegmentPoints() {\r\n    const _this = this;\r\n    for (let i = 0, len = this._points.length; i < len; i++) {\r\n      if (i > 0 && i < len - 1) {\r\n        this._segmentPoints.push(\r\n          this._graphic\r\n            .circle(\r\n              Math.round(this._points[i].x),\r\n              Math.round(this._points[i].y),\r\n              this._CONTROL_POINT_RADIUS,\r\n            )\r\n            .data('point', i)\r\n            .attr({ class: 'connector__segment_point' })\r\n            .mouseover(function onMouseOver() {\r\n              this.attr({ r: _this._CONTROL_POINT_RADIUS * 2 });\r\n            })\r\n            .mouseout(function onMouseOut() {\r\n              this.attr({ r: _this._CONTROL_POINT_RADIUS });\r\n            })\r\n            .click(function ondblclick(event) {\r\n              // this hack bc ffox doesnt support the drag (single click?) & dblclick together\r\n              _this._clickCount++;\r\n              if (_this._clickCount === 1) {\r\n                event.preventDefault();\r\n                setTimeout(() => {\r\n                  if (_this._clickCount === 1) {\r\n                    // one click\r\n                  } else if (_this._clickCount === 2) {\r\n                    // remove segment point\r\n                    _this._contextMenu.hide();\r\n                    _this.emit('connector_point_deleted');\r\n                    _this._points.splice(this.data('point'), 1);\r\n                    _this._removeSegmentPoints();\r\n                    // update connector\r\n                    _this.updateConnection();\r\n                    _this._drawSegmentPoints();\r\n                    _this._onConnectorMouseOut();\r\n                    _this.points = _this._points;\r\n                    _this._contextMenu.show();\r\n                    event.stopPropagation();\r\n                  }\r\n                  _this._clickCount = 0;\r\n                }, _this._timeout || 300);\r\n              }\r\n            })\r\n            .drag(\r\n              function onMove(dx, dy, x, y, evt) {\r\n                // const p = _this._viewport.getEventPoint(evt);\r\n                const p = _this._viewport.getMousePoint(evt, 0, 0);\r\n                if (_this._isSnapOn) {\r\n                  p.x = Math.round(getClosestMultiple(p.x, _this._snapSize) + _this._snapSize / 2);\r\n                  p.y = Math.round(getClosestMultiple(p.y, _this._snapSize) + _this._snapSize / 2);\r\n                }\r\n                // move control dot\r\n                this.attr({ cx: p.x, cy: p.y });\r\n                // update points array with new position\r\n                _this._points[this.data('point')] = {\r\n                  x: p.x,\r\n                  y: p.y,\r\n                };\r\n                _this.updateConnection();\r\n              },\r\n              // eslint-disable-next-line prefer-arrow-callback\r\n              function onStart() {\r\n                _this._ox = this.attr('cx');\r\n                _this._oy = this.attr('cy');\r\n                _this.emit('connector_point_move_start');\r\n              },\r\n              // eslint-disable-next-line prefer-arrow-callback\r\n              function onEnd() {\r\n                if (_this._ox !== this.attr('cx') || _this._oy !== this.attr('cy')) {\r\n                  _this.emit('connector_point_move_end');\r\n                  _this.points = _this._points;\r\n                } else {\r\n                  _this.emit('connector_point_no_move_end');\r\n                }\r\n              },\r\n            ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSegmentsPosition(elementMoving) {\r\n    // called when multiple selection of both to and from are moved\r\n    // and segment points need to be updated\r\n    if (this._toEl.selected && this._fromEl.selected) {\r\n      if (this._points.length > 2) {\r\n        this._removeSegmentPoints();\r\n        for (let i = 1, len = this._points.length - 1; i < len; i++) {\r\n          // skip first and last\r\n          if (this._oldElMoving.srcEl === elementMoving) {\r\n            this._points[i].x += elementMoving.mx - this._oldElMoving.x;\r\n            this._points[i].y += elementMoving.my - this._oldElMoving.y;\r\n          } else {\r\n            this._points[i].x += elementMoving.mx;\r\n            this._points[i].y += elementMoving.my;\r\n          }\r\n        }\r\n        this._oldElMoving = {\r\n          srcEl: elementMoving,\r\n          x: elementMoving.mx,\r\n          y: elementMoving.my,\r\n        };\r\n        this._drawSegmentPoints();\r\n        this.updateConnection();\r\n      }\r\n    }\r\n  }\r\n\r\n  resetMovingPointSegment() {\r\n    this._oldElMoving = { srcEl: null, x: 0, y: 0 };\r\n    // update props for undo\r\n    this.points = this._points;\r\n  }\r\n\r\n  _getNextPositionInPointsArray(pointLength) {\r\n    for (let i = 0, len = this._points.length; i < len; i++) {\r\n      const pl = this._getLengthForPointInPath(this._points[i], this._path);\r\n      if (pl > pointLength) {\r\n        return i;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  _closestPoint(pathNode, point) {\r\n    // find closest point in a path from a given point\r\n    const pathLength = pathNode.getTotalLength();\r\n    let precision = 8;\r\n    let best;\r\n    let bestLength;\r\n    let bestDistance = Infinity;\r\n    let scan;\r\n    let scanDistance;\r\n    // linear scan for coarse approximation\r\n    for (let scanLength = 0; scanLength <= pathLength; scanLength += precision) {\r\n      if (\r\n        (scanDistance = this._distance2((scan = pathNode.getPointAtLength(scanLength)), point))\r\n        < bestDistance\r\n      ) {\r\n        best = scan;\r\n        bestLength = scanLength;\r\n        bestDistance = scanDistance;\r\n      }\r\n    }\r\n    // binary search for precise estimate\r\n    precision /= 2;\r\n    while (precision > 0.5) {\r\n      let before;\r\n      let after;\r\n      let beforeLength;\r\n      let afterLength;\r\n      let beforeDistance;\r\n      let afterDistance;\r\n\r\n      if (\r\n        (beforeLength = bestLength - precision) >= 0\r\n        && (beforeDistance = this._distance2(\r\n          (before = pathNode.getPointAtLength(beforeLength)),\r\n          point,\r\n        )) < bestDistance\r\n      ) {\r\n        best = before;\r\n        bestLength = beforeLength;\r\n        bestDistance = beforeDistance;\r\n      } else if (\r\n        (afterLength = bestLength + precision) <= pathLength\r\n        && (afterDistance = this._distance2((after = pathNode.getPointAtLength(afterLength)), point))\r\n          < bestDistance\r\n      ) {\r\n        best = after;\r\n        bestLength = afterLength;\r\n        bestDistance = afterDistance;\r\n      } else {\r\n        precision /= 2;\r\n      }\r\n    }\r\n\r\n    best = {\r\n      x: Math.round(best.x),\r\n      y: Math.round(best.y),\r\n      // dist: Math.sqrt(bestDistance),\r\n    };\r\n    return best;\r\n  }\r\n\r\n  _distance2(p, point) {\r\n    const dx = p.x - point[0];\r\n    const dy = p.y - point[1];\r\n    return dx * dx + dy * dy;\r\n  }\r\n\r\n  _getLengthForPointInPath(p, path) {\r\n    // return length for a given point in a path\r\n    const pathLength = path.getTotalLength();\r\n    const precision = 100;\r\n    const division = pathLength / precision;\r\n    let theRecord = pathLength;\r\n    let theSegment;\r\n    for (let i = 0; i < precision; i++) {\r\n      // get a point on the path for this distance\r\n      const _p = path.getPointAtLength(i * division);\r\n      // get the distance between the new point _p and the point p\r\n      const theDistance = this._distance2(_p, [p.x, p.y]);\r\n      if (theDistance < theRecord) {\r\n        // if the distance is smaller than the record set the new record\r\n        theRecord = theDistance;\r\n        theSegment = i;\r\n      }\r\n    }\r\n    return theSegment * division;\r\n  }\r\n}\r\n","import Config from 'config';\r\n\r\nimport Task from '../ui/elements/task';\r\nimport StartEvent from '../ui/elements/startEvent';\r\nimport EndEvent from '../ui/elements/endEvent';\r\nimport IntermediateEvent from '../ui/elements/intermediateEvent';\r\nimport Gateway from '../ui/elements/gateway';\r\nimport Subprocess from '../ui/elements/subprocess';\r\nimport Pool from '../ui/elements/pool';\r\nimport Lane from '../ui/elements/lane';\r\nimport Group from '../ui/elements/group';\r\nimport TextAnnotation from '../ui/elements/textAnnotation';\r\nimport DataObject from '../ui/elements/dataObject';\r\nimport DataInput from '../ui/elements/dataInput';\r\nimport DataOutput from '../ui/elements/dataOutput';\r\nimport DataStore from '../ui/elements/dataStore';\r\nimport Workflow from '../ui/elements/workflow';\r\nimport Connector from '../ui/elements/connector';\r\n\r\nexport default class elementFactory {\r\n  constructor(editor) {\r\n    this._editor = editor;\r\n  }\r\n\r\n  createElement(type, id, x, y, paper, props, isMovable = true) {\r\n    let element;\r\n    switch (type) {\r\n      case Config.TASK:\r\n        element = new Task(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.START_EVENT:\r\n        element = new StartEvent(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.END_EVENT:\r\n        element = new EndEvent(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.INTERMEDIATE_EVENT:\r\n        element = new IntermediateEvent(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.GATEWAY:\r\n        element = new Gateway(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.SUBPROCESS:\r\n        element = new Subprocess(id, x, y, paper, props, isMovable);\r\n        this._checkSubprocessID(element);\r\n        break;\r\n      case Config.POOL:\r\n        element = new Pool(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.LANE:\r\n        element = new Lane(id, x, y, paper, props);\r\n        break;\r\n      case Config.GROUP:\r\n        element = new Group(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.TEXT:\r\n        element = new TextAnnotation(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.DATA_OBJECT:\r\n        element = new DataObject(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.DATA_INPUT:\r\n        element = new DataInput(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.DATA_OUTPUT:\r\n        element = new DataOutput(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.DATA_STORE:\r\n        element = new DataStore(id, x, y, paper, props, isMovable);\r\n        break;\r\n      case Config.WORKFLOW:\r\n        element = new Workflow(id, props);\r\n        this._editor.workflow = element;\r\n        break;\r\n      case Config.CONNECTOR:\r\n        element = new Connector(\r\n          id,\r\n          paper,\r\n          props,\r\n          this._editor.elements,\r\n          this._editor._startMarker,\r\n          this._editor._endMarker,\r\n          this._editor._expressionMarker,\r\n          this._editor._wizardMarker,\r\n          isMovable,\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return element;\r\n  }\r\n\r\n  _checkSubprocessID(element) {\r\n    const { properties } = element;\r\n    if (Config.ENV === 'Offline' && !properties.activitySetId) {\r\n      properties.activitySetId = this._editor.idIndex++;\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable new-cap */\r\nimport Config from 'config';\r\nimport axios from 'axios';\r\nimport sanitize from 'sanitize-filename';\r\nimport i18next from 'i18next';\r\nimport Documentation from './documentation';\r\nimport { getElementsOfType, downloadPDF, getElementsByConnectedType } from '../utils/util';\r\nimport 'jspdf-autotable';\r\n\r\nexport default class DocManager extends Documentation {\r\n  constructor(editor) {\r\n    super();\r\n    this._editor = editor;\r\n    this._h1 = 22;\r\n    this._h2 = 18;\r\n    this._PAGE_SIZE = 'a4';\r\n  }\r\n\r\n  async generateProcessDocumentation() {\r\n    // downloads PDF directly to browser with png attached\r\n\r\n    // lazy loading webpack import\r\n    const module = await import(/* webpackChunkName: \"jspdf\" */ 'jspdf');\r\n    const doc = new module.default('p', 'pt', this._PAGE_SIZE, true);\r\n\r\n    const parser = new DOMParser();\r\n    // get event info data from apia\r\n    const eventData = await axios.get(Config.CLASSES_DESCRIPTION_URL);\r\n    const xmlEventsDoc = parser.parseFromString(eventData.data, 'text/xml');\r\n\r\n    // Get Process Name from Apia\r\n    let proName;\r\n    let proDesc;\r\n    if (Config.ENV === 'Production') {\r\n      const iframe = window.top.document.querySelectorAll('iframe.active')[0];\r\n      const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n      proName = iframeDoc.querySelector('#dataGenProTitle').innerText || 'Apia Process';\r\n      proDesc = iframeDoc.querySelector('#txtDesc').innerText || '';\r\n    } else {\r\n      proName = 'Apia Process';\r\n      proDesc = 'Process description text from Apia';\r\n    }\r\n\r\n    // Page position and margins\r\n    const margins = 40;\r\n    let offsetY = 0;\r\n    let taskCounter = 0;\r\n    let taskDetailCounter = 0;\r\n    let formCounter = 0;\r\n\r\n    doc.setFontSize(9);\r\n    doc.text(i18next.t('doc.proDesDocHeader'), margins, margins);\r\n\r\n    // Process Title - split text if needed\r\n    let line = doc.internal.pageSize.getHeight() / 2; // Line height to start text at\r\n    const lineHeight = 32;\r\n    const wrapWidth = 380;\r\n    doc.setFontSize(32);\r\n    const splitText = doc.splitTextToSize(proName, wrapWidth);\r\n    for (let i = 0; i < splitText.length; i++) {\r\n      // loop thru each line and increase\r\n      const xOffset = doc.internal.pageSize.width / 2\r\n        - doc.getStringUnitWidth(splitText[i]) * (doc.internal.getFontSize() / 2);\r\n      doc.text(splitText[i], xOffset, line);\r\n      line = lineHeight + line;\r\n    }\r\n\r\n    // Process Description\r\n    doc.autoTable({\r\n      startY: line,\r\n      theme: 'grid',\r\n      headStyles: {\r\n        fontSize: 16,\r\n        fontStyle: 'normal',\r\n        halign: 'center',\r\n        fillColor: '#ffffff',\r\n        textColor: '#000000',\r\n      },\r\n      margin: {\r\n        top: margins,\r\n        right: margins,\r\n        bottom: margins,\r\n        left: margins,\r\n      },\r\n      head: [[proDesc]],\r\n      body: [],\r\n    });\r\n\r\n    // Add Map IMAGE\r\n    // canvas w/ map image\r\n    const canvas = await this.getPNGCanvas();\r\n    doc.addPage(this._PAGE_SIZE, 'l');\r\n    const width = doc.internal.pageSize.getWidth();\r\n    const height = doc.internal.pageSize.getHeight();\r\n    const widthRatio = width / canvas.width;\r\n    const heightRatio = height / canvas.height;\r\n    const ratio = widthRatio > heightRatio ? heightRatio : widthRatio;\r\n\r\n    doc.addImage(\r\n      canvas.toDataURL('image/png'),\r\n      'png',\r\n      (width - canvas.width * ratio) / 2,\r\n      0,\r\n      canvas.width * ratio,\r\n      canvas.height * ratio,\r\n      undefined,\r\n      'FAST',\r\n    );\r\n\r\n    // WORKFLOW Documentation\r\n    doc.addPage(this._PAGE_SIZE, 'p');\r\n\r\n    // Process Events\r\n    doc.setFontSize(this._h1);\r\n    doc.setFontStyle('bold');\r\n    doc.text(i18next.t('doc.proDesWorkProLbl'), margins, 80);\r\n\r\n    offsetY = 80 + 20;\r\n\r\n    if (this._editor.workflow.properties.documentation.text) {\r\n      doc.setFontSize(10);\r\n      doc.setFontStyle('normal');\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        margin: { left: margins },\r\n        body: [\r\n          [\r\n            {\r\n              content: this._editor.workflow.properties.documentation.text,\r\n              theme: 'plain',\r\n              styles: { fontSize: 10, halign: 'left', fillColor: '#ffffff' },\r\n            },\r\n          ],\r\n        ],\r\n      });\r\n      offsetY = doc.previousAutoTable.finalY + 30;\r\n    }\r\n\r\n    // Process Events\r\n    doc.setFontSize(12);\r\n    doc.setFontStyle('bold');\r\n    const procEvents = this._getEvents(this._editor.workflow.events, xmlEventsDoc);\r\n    if (procEvents.length > 0) {\r\n      doc.text(i18next.t('doc.proDesProEvtLbl'), margins, offsetY, {\r\n        align: 'left',\r\n      });\r\n\r\n      offsetY += 18;\r\n\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        theme: 'grid',\r\n        headStyles: { fillColor: '#7FDBFF', textColor: '#000000' },\r\n        margin: {\r\n          top: 100,\r\n          right: margins,\r\n          bottom: 0,\r\n          left: margins,\r\n        },\r\n        head: [\r\n          [\r\n            i18next.t('doc.proDesProEvtEvtHeaderLbl'),\r\n            i18next.t('doc.proDesProBizClsHeaderLbl'),\r\n            i18next.t('doc.proDesProDescHeaderLbl'),\r\n          ],\r\n        ],\r\n        body: this._getEvents(this._editor.workflow.events, xmlEventsDoc),\r\n      });\r\n\r\n      offsetY = doc.previousAutoTable.finalY + 60;\r\n    }\r\n\r\n    offsetY += 30;\r\n    // ---------------------------------------\r\n    // Pool Documentation\r\n    // ---------------------------------------\r\n    const poolArray = getElementsOfType(Config.POOL, this._editor.elements);\r\n    if (poolArray.length > 0) {\r\n      doc.setFontSize(this._h1);\r\n      doc.setFontStyle('bold');\r\n      // Pool Title\r\n      doc.text(i18next.t('doc.proDesPoolLbl'), margins, offsetY);\r\n      offsetY += 10;\r\n\r\n      // Pool details\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        theme: 'grid',\r\n        margin: {\r\n          top: margins,\r\n          right: margins,\r\n          bottom: margins,\r\n          left: margins,\r\n        },\r\n        body: [\r\n          [i18next.t('doc.proDesPoolDetailsNameLbl'), poolArray[0].properties.name],\r\n          [\r\n            i18next.t('doc.proDesPoolDetailsDocLbl'),\r\n            poolArray[0].properties.documentation ? poolArray[0].properties.documentation.text : '',\r\n          ],\r\n        ],\r\n        columnStyles: {\r\n          0: {\r\n            cellWidth: 160,\r\n            fillColor: '#DDDDDD',\r\n            textColor: '#000000',\r\n            fontStyle: 'bold',\r\n          },\r\n        },\r\n      });\r\n      offsetY = doc.previousAutoTable.finalY + 60;\r\n    }\r\n\r\n    // ---------------------------------------\r\n    // Lanes Documentation\r\n    // ---------------------------------------\r\n    const lanesArray = getElementsOfType(Config.LANE, this._editor.elements);\r\n    if (lanesArray.length > 0) {\r\n      doc.setFontSize(this._h1);\r\n      doc.setFontStyle('bold');\r\n      // lanes Title\r\n      doc.text(i18next.t('doc.proDesLanesLbl'), margins, offsetY);\r\n      offsetY += 10;\r\n      // Lanes details\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n        margin: {\r\n          top: margins,\r\n          right: margins,\r\n          bottom: margins,\r\n          left: margins,\r\n        },\r\n        head: [\r\n          [i18next.t('doc.proDesLanesDetailsNameLbl'), i18next.t('doc.proDesLanesDetailsDocLbl')],\r\n        ],\r\n        body: this._getLanes(lanesArray),\r\n      });\r\n      offsetY = doc.previousAutoTable.finalY + 60;\r\n    }\r\n\r\n    // ---------------------------------------\r\n    // TASKS Documentation\r\n    // ---------------------------------------\r\n    doc.setFontSize(this._h1);\r\n    doc.setFontStyle('bold');\r\n    // Task Title\r\n    doc.text(i18next.t('doc.proDesTasksLbl'), margins, offsetY);\r\n    offsetY += 30;\r\n\r\n    const taskArray = getElementsOfType(Config.TASK, this._editor.elements);\r\n    // sort task array alphabetically by title\r\n    taskArray.sort((a, b) => (a.properties.title > b.properties.title ? 1 : -1));\r\n\r\n    // LOOP all TASKS\r\n    for await (const task of taskArray) {\r\n      if (taskCounter > 0) {\r\n        doc.addPage(this._PAGE_SIZE, 'p');\r\n        offsetY = margins + 20;\r\n      }\r\n      formCounter = 1;\r\n      taskDetailCounter = 1;\r\n      const { title } = task;\r\n      const taskGroupArray = task.properties.groups;\r\n      const taskEventsArray = task.properties.events;\r\n      const taskStatesArray = task.properties.states;\r\n      const taskBoundaryEvents = task.properties.boundaryEvents;\r\n\r\n      let role;\r\n      if (task.properties.role) {\r\n        role = task.properties.role.name;\r\n      } else {\r\n        role = '';\r\n      }\r\n\r\n      // Task Title Name\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        theme: 'grid',\r\n        headStyles: {\r\n          fontSize: this._h2,\r\n          fontWeight: 'bold',\r\n          fillColor: '#ffffff',\r\n          textColor: '#000000',\r\n        },\r\n        margin: {\r\n          top: margins,\r\n          right: margins,\r\n          bottom: margins,\r\n          left: margins,\r\n        },\r\n        head: [[`${++taskCounter}. ${title}`]],\r\n        body: [],\r\n      });\r\n\r\n      offsetY = doc.previousAutoTable.finalY + 10;\r\n\r\n      // task documentation from map props\r\n      if (task.properties.documentation) {\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          margin: { left: margins },\r\n          body: [\r\n            [\r\n              {\r\n                content: task.properties.documentation.text,\r\n                theme: 'plain',\r\n                styles: { fontSize: 10, halign: 'left', fillColor: '#ffffff' },\r\n              },\r\n            ],\r\n          ],\r\n        });\r\n        offsetY = doc.previousAutoTable.finalY + 30;\r\n      }\r\n\r\n      // Task Details Table\r\n      offsetY += 18;\r\n      doc.setFontSize(12);\r\n      doc.setFontStyle('bold');\r\n      doc.text(\r\n        `${taskCounter}.${taskDetailCounter} ${i18next.t('doc.proDesTaskDetailsLbl')}:`,\r\n        margins,\r\n        offsetY,\r\n        {\r\n          align: 'left',\r\n        },\r\n      );\r\n      offsetY += 10;\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        theme: 'grid',\r\n        margin: {\r\n          top: margins,\r\n          right: margins,\r\n          bottom: margins,\r\n          left: margins,\r\n        },\r\n        body: [\r\n          [i18next.t('doc.proDesTaskDetailsNameLbl'), task.properties.name],\r\n          [i18next.t('doc.proDesTaskDetailsTypeLbl'), task.properties.taskType],\r\n          [i18next.t('doc.proDesTaskDetailsConLbl'), task.properties.condition],\r\n          [i18next.t('doc.proDesTaskDetailsRoleLbl'), role],\r\n        ],\r\n        columnStyles: {\r\n          0: {\r\n            cellWidth: 160,\r\n            fillColor: '#DDDDDD',\r\n            textColor: '#000000',\r\n            fontStyle: 'bold',\r\n          },\r\n        },\r\n      });\r\n\r\n      offsetY = doc.previousAutoTable.finalY + 18;\r\n\r\n      // TASK GROUPS\r\n      if (taskGroupArray) {\r\n        offsetY += 18;\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesTaskGrpLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n\r\n        offsetY += 14;\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [i18next.t('doc.proDesTaskGrpNameHeader'), i18next.t('doc.proDesTaskGrpCondHeader')],\r\n          ],\r\n          body: this._getTaskGroups(taskGroupArray),\r\n        });\r\n      }\r\n\r\n      offsetY = doc.previousAutoTable.finalY + 30;\r\n\r\n      // TASK ANNOTATIONS AND DATA OBJECTS\r\n      //  Annotations\r\n      const annotationsArr = getElementsByConnectedType(task, Config.TEXT, this._editor.elements);\r\n\r\n      const dataObjectsArr = getElementsByConnectedType(\r\n        task,\r\n        Config.DATA_OBJECT,\r\n        this._editor.elements,\r\n      );\r\n\r\n      const dataStoreArr = getElementsByConnectedType(\r\n        task,\r\n        Config.DATA_STORE,\r\n        this._editor.elements,\r\n      );\r\n\r\n      const dataInputArr = getElementsByConnectedType(\r\n        task,\r\n        Config.DATA_INPUT,\r\n        this._editor.elements,\r\n      );\r\n\r\n      const dataOutputArr = getElementsByConnectedType(\r\n        task,\r\n        Config.DATA_OUTPUT,\r\n        this._editor.elements,\r\n      );\r\n\r\n      const doArr = [...dataObjectsArr, ...dataInputArr, ...dataOutputArr];\r\n\r\n      if (annotationsArr.length > 0) {\r\n        offsetY += 18;\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesTaskAnnotationLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n\r\n        offsetY += 14;\r\n        // Anotation details\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          body: [\r\n            [i18next.t('doc.proDesPoolDetailsNameLbl'), annotationsArr[0].properties.text || ''],\r\n            [\r\n              i18next.t('doc.proDesPoolDetailsDocLbl'),\r\n              annotationsArr[0].properties.documentation\r\n                ? annotationsArr[0].properties.documentation.text\r\n                : '',\r\n            ],\r\n          ],\r\n          columnStyles: {\r\n            0: {\r\n              cellWidth: 160,\r\n              fillColor: '#DDDDDD',\r\n              textColor: '#000000',\r\n              fontStyle: 'bold',\r\n            },\r\n          },\r\n        });\r\n        offsetY = doc.previousAutoTable.finalY + 30;\r\n      }\r\n\r\n      // Data Objects\r\n      if (doArr.length > 0) {\r\n        offsetY += 18;\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesDoLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n        offsetY += 14;\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              i18next.t('doc.proDesTaskDOTypeHeader'),\r\n              i18next.t('doc.proDesTaskDONameHeader'),\r\n              i18next.t('doc.proDesTaskDOStateHeader'),\r\n              i18next.t('doc.proDesTaskDOCollHeader'),\r\n              i18next.t('doc.proDesTaskDODocsHeader'),\r\n            ],\r\n          ],\r\n          body: this._getTaskDo(doArr),\r\n        });\r\n        offsetY = doc.previousAutoTable.finalY + 30;\r\n      }\r\n\r\n      // Data Store\r\n      if (dataStoreArr.length > 0) {\r\n        offsetY += 18;\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesDtaStoreLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n        offsetY += 14;\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              i18next.t('doc.proDesTaskDOStoreNameHeader'),\r\n              i18next.t('doc.proDesTaskDOStoreStateHeader'),\r\n              i18next.t('doc.proDesTaskDOStoreCapacityHeader'),\r\n              i18next.t('doc.proDesTaskDOStoreLimitHeader'),\r\n              i18next.t('doc.proDesTaskDOStoreDocsHeader'),\r\n            ],\r\n          ],\r\n          body: this._getTaskDtaStore(dataStoreArr),\r\n        });\r\n        offsetY = doc.previousAutoTable.finalY + 60;\r\n      }\r\n\r\n      // TASK STATES\r\n      if (taskStatesArray) {\r\n        offsetY += 14;\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesTaskStateLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n\r\n        offsetY += 14;\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              i18next.t('doc.proDesTaskStateEvtHeader'),\r\n              i18next.t('doc.proDesTaskStateNameHeader'),\r\n              i18next.t('doc.proDesTaskStateDescHeader'),\r\n            ],\r\n          ],\r\n          body: this._getTaskStates(taskStatesArray),\r\n        });\r\n      }\r\n\r\n      offsetY = doc.previousAutoTable.finalY + 30;\r\n\r\n      // Get forms data XML by task id\r\n      const xmlDoc = await this._getFormDataByTaskId(task.properties.id);\r\n      const forms = xmlDoc.getElementsByTagName('form');\r\n\r\n      // TASK FORMS\r\n      if (forms.length > 0) {\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesTaskFormsLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n      }\r\n\r\n      // Iterate all task form elements\r\n      for (let i = 0; i < forms.length; i++) {\r\n        offsetY += 18;\r\n        const taskFormData = this._getTaskFormData(forms[i]);\r\n\r\n        // Task Form Name Title\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#ffffff', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              `${taskCounter}.${taskDetailCounter}.${formCounter++} ${forms[i].getAttribute(\r\n                'frmTitle',\r\n              )}`,\r\n            ],\r\n          ],\r\n          body: [],\r\n        });\r\n\r\n        // Task Forms Table\r\n        doc.autoTable({\r\n          startY: doc.previousAutoTable.finalY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              i18next.t('doc.proDesTaskFormsNameHeader'),\r\n              i18next.t('doc.proDesTaskFormsDescHeader'),\r\n            ],\r\n          ],\r\n          body: [[forms[i].getAttribute('frmName'), forms[i].getAttribute('frmDesc')]],\r\n          pageBreak: 'avoid',\r\n        });\r\n\r\n        // Form Events Table\r\n        if (taskFormData.taskFormEvents.length > 0) {\r\n          doc.autoTable({\r\n            startY: doc.previousAutoTable.finalY,\r\n            theme: 'grid',\r\n            headStyles: { fillColor: '#7FDBFF', textColor: '#000000' },\r\n            margin: {\r\n              top: margins,\r\n              right: margins,\r\n              bottom: margins,\r\n              left: margins,\r\n            },\r\n            head: [\r\n              [\r\n                i18next.t('doc.proDesTaskFormsEvtNameHeader'),\r\n                i18next.t('doc.proDesTaskFormsEvtTypeHeader'),\r\n                i18next.t('doc.proDesTaskFormsEvtDescHeader'),\r\n              ],\r\n            ],\r\n            body: taskFormData.taskFormEvents,\r\n            pageBreak: 'avoid',\r\n          });\r\n        }\r\n\r\n        // Task Fields Table\r\n        if (taskFormData.formFieldAttributes.length > 0) {\r\n          doc.autoTable({\r\n            startY: doc.previousAutoTable.finalY,\r\n            theme: 'grid',\r\n            headStyles: { fillColor: '#DDDDDD', textColor: '#000000' },\r\n            margin: {\r\n              top: margins,\r\n              right: margins,\r\n              bottom: margins,\r\n              left: margins,\r\n            },\r\n            head: [\r\n              [\r\n                i18next.t('doc.proDesTaskFormsFldsNameHeader'),\r\n                i18next.t('doc.proDesTaskFormsFldsFieldHeader'),\r\n                i18next.t('doc.proDesTaskFormsFldsTypeHeader'),\r\n                i18next.t('doc.proDesTaskFormsFldsEditHeader'),\r\n                i18next.t('doc.proDesTaskFormsFldsReqHeader'),\r\n                i18next.t('doc.proDesTaskFormsFldsGridHeader'),\r\n                i18next.t('doc.proDesTaskFormsFldsDescHeader'),\r\n              ],\r\n            ],\r\n            body: taskFormData.formFieldAttributes,\r\n            pageBreak: 'avoid',\r\n          });\r\n        }\r\n\r\n        // Task Fields Events Table\r\n        if (taskFormData.taskFieldsEvents.length > 0) {\r\n          doc.autoTable({\r\n            startY: doc.previousAutoTable.finalY,\r\n            theme: 'grid',\r\n            headStyles: { fillColor: '#7FDBFF', textColor: '#000000' },\r\n            margin: {\r\n              top: margins,\r\n              right: margins,\r\n              bottom: margins,\r\n              left: margins,\r\n            },\r\n            head: [['Field', 'Event Name', 'Event Type', 'Description']],\r\n            body: taskFormData.taskFieldsEvents,\r\n            pageBreak: 'avoid',\r\n          });\r\n        }\r\n        offsetY = doc.previousAutoTable.finalY + 30;\r\n      }\r\n\r\n      // TASK EVENTS\r\n      if (taskEventsArray) {\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesTaskEventsLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n        offsetY += 14;\r\n        // Task Events Table\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#7FDBFF', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              i18next.t('doc.proDesTaskEventsEvtHeader'),\r\n              i18next.t('doc.proDesTaskEventsBizHeader'),\r\n              i18next.t('doc.proDesTaskEventsDescHeader'),\r\n            ],\r\n          ],\r\n          body: this._getEvents(taskEventsArray, xmlEventsDoc),\r\n          pageBreak: 'avoid',\r\n        });\r\n        offsetY = doc.previousAutoTable.finalY + 30;\r\n      }\r\n\r\n      // TASK BOUNDARY EVENTS\r\n      if (taskBoundaryEvents.length > 0) {\r\n        doc.setFontSize(12);\r\n        doc.setFontStyle('bold');\r\n        // Title\r\n        doc.text(\r\n          `${taskCounter}.${++taskDetailCounter} ${i18next.t('doc.proDesTaskBoundLbl')}:`,\r\n          margins,\r\n          offsetY,\r\n          {\r\n            align: 'left',\r\n          },\r\n        );\r\n        offsetY += 14;\r\n        // Task Events Table\r\n        doc.autoTable({\r\n          startY: offsetY,\r\n          theme: 'grid',\r\n          headStyles: { fillColor: '#7FDBFF', textColor: '#000000' },\r\n          margin: {\r\n            top: margins,\r\n            right: margins,\r\n            bottom: margins,\r\n            left: margins,\r\n          },\r\n          head: [\r\n            [\r\n              i18next.t('doc.proDesTaskBoundEvtHeader'),\r\n              i18next.t('doc.proDesTaskBoundTypeHeader'),\r\n              i18next.t('doc.proDesTaskBoundDtlHeader'),\r\n            ],\r\n          ],\r\n          body: this._getBoundaryEvents(taskBoundaryEvents),\r\n          pageBreak: 'avoid',\r\n        });\r\n        offsetY = doc.previousAutoTable.finalY + 30;\r\n      }\r\n    }\r\n\r\n    offsetY += 30;\r\n\r\n    // ---------------------------------------\r\n    // Gateway Documentation\r\n    // ---------------------------------------\r\n    const gatewayArray = getElementsOfType(Config.GATEWAY, this._editor.elements);\r\n    if (gatewayArray.length > 0) {\r\n      doc.setFontSize(this._h1);\r\n      doc.setFontStyle('bold');\r\n      // Gateway Title\r\n      doc.text(i18next.t('doc.proDesGatewayLbl'), margins, offsetY);\r\n      offsetY += 10;\r\n      // LOOP all TASKS\r\n      doc.autoTable({\r\n        startY: offsetY,\r\n        theme: 'grid',\r\n        headStyles: { fillColor: '#7FDBFF', textColor: '#000000' },\r\n        margin: {\r\n          top: margins,\r\n          right: margins,\r\n          bottom: margins,\r\n          left: margins,\r\n        },\r\n        head: [\r\n          [\r\n            i18next.t('doc.proDesGatewaysNameHeader'),\r\n            i18next.t('doc.proDesGatewaysTypeHeader'),\r\n            i18next.t('doc.proDesGatewaysExecTypeHeader'),\r\n            i18next.t('doc.proDesGatewaysDocumentationHeader'),\r\n          ],\r\n        ],\r\n        body: this._getGatewayDetails(gatewayArray),\r\n      });\r\n      offsetY = doc.previousAutoTable.finalY + 60;\r\n    }\r\n\r\n    // -----------------------------------------------------\r\n    // save pdf to browser\r\n    // -----------------------------------------------------\r\n    if (Config.ENV === 'Production') {\r\n      downloadPDF(doc.output('arraybuffer'), `${sanitize(proName)}.pdf`);\r\n    } else {\r\n      doc.save(sanitize(proName));\r\n    }\r\n  }\r\n\r\n  _getLanes(lanesArray) {\r\n    const lanesArr = [];\r\n    lanesArray.forEach((lane, index) => {\r\n      lanesArr[index] = [\r\n        lane.properties.name || '',\r\n        lane.properties.documentation ? lane.properties.documentation.text : '',\r\n      ];\r\n    });\r\n    return lanesArr;\r\n  }\r\n\r\n  _getTaskDtaStore(dtaStore) {\r\n    const dtaStoreArr = [];\r\n    dtaStore.forEach((dtaObj, index) => {\r\n      dtaStoreArr[index] = [\r\n        dtaObj.properties.name || '',\r\n        dtaObj.properties.state || '',\r\n        dtaObj.properties.capacity || '',\r\n        dtaObj.properties.unlimit || '',\r\n        dtaObj.properties.documentation ? dtaObj.properties.documentation.text : '',\r\n      ];\r\n    });\r\n    return dtaStoreArr;\r\n  }\r\n\r\n  _getTaskDo(doArray) {\r\n    const dtaObjectArr = [];\r\n    doArray.forEach((dtaObj, index) => {\r\n      dtaObjectArr[index] = [\r\n        dtaObj.elementType || '',\r\n        dtaObj.properties.name || '',\r\n        dtaObj.properties.state || '',\r\n        dtaObj.properties.collection || 'false',\r\n        dtaObj.properties.documentation ? dtaObj.properties.documentation.text : '',\r\n      ];\r\n    });\r\n    return dtaObjectArr;\r\n  }\r\n\r\n  _getGatewayDetails(gatewaysArray) {\r\n    const gatewaysDetails = [];\r\n    gatewaysArray.forEach((gateway, index) => {\r\n      gatewaysDetails[index] = [\r\n        gateway.properties.name || '---',\r\n        gateway.properties.type || '',\r\n        gateway.properties.executionType || '',\r\n        gateway.documentation || '',\r\n      ];\r\n    });\r\n    return gatewaysDetails;\r\n  }\r\n\r\n  _getEvents(eventsArray, xmlDoc) {\r\n    const tskEvents = [];\r\n    eventsArray.forEach((event, index) => {\r\n      // console.log(event.busClaId);\r\n      tskEvents[index] = [\r\n        event.name,\r\n        xmlDoc.querySelector(`[*|id='${event.busClaId}']`).getAttribute('name'),\r\n        xmlDoc.querySelector(`[*|id='${event.busClaId}']`).getAttribute('desc'),\r\n      ];\r\n    });\r\n    return tskEvents;\r\n  }\r\n\r\n  _getTaskGroups(taskGroupArray) {\r\n    const tskGroups = [];\r\n    taskGroupArray.forEach((group, index) => {\r\n      tskGroups[index] = [group.name, group.condition];\r\n    });\r\n    return tskGroups;\r\n  }\r\n\r\n  _getTaskStates(taskStatesArray) {\r\n    const tskStates = [];\r\n    taskStatesArray.forEach((state, index) => {\r\n      tskStates[index] = [state.event, state.name, state.conditionDoc];\r\n    });\r\n    return tskStates;\r\n  }\r\n\r\n  _getBoundaryEvents(taskBoundaryEventsArray) {\r\n    const tskBoundEvts = [];\r\n    // let evtDetail;\r\n    taskBoundaryEventsArray.forEach((evt, index) => {\r\n      switch (evt.eventType) {\r\n        case 'timer':\r\n          // evtDetail = evt.dateTimer\r\n          break;\r\n        case 'message':\r\n          // evtDetail = evt.dateTimer\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      tskBoundEvts[index] = [evt.eventName, evt.eventType, 'ToDo'];\r\n    });\r\n    return tskBoundEvts;\r\n  }\r\n\r\n  async _getFormDataByTaskId(taskId) {\r\n    const parser = new DOMParser();\r\n    let formData;\r\n    if (Config.ENV === 'Development') {\r\n      formData = await axios.get(`${Config.TASK_FORM_DOC}/${taskId}`);\r\n    } else if (Config.ENV === 'Production') {\r\n      formData = await axios.get(`${Config.TASK_FORM_DOC}&taskid=${taskId}`);\r\n    }\r\n    return parser.parseFromString(formData.data, 'text/xml');\r\n  }\r\n\r\n  _getTaskFormData(formTag) {\r\n    // get form events\r\n    const taskFormEvents = [];\r\n    // get form field attributes\r\n    const formFieldAttributes = [];\r\n    // get form field events for each field\r\n    const taskFieldsEvents = [];\r\n    let tskFldEvtCounter = 0;\r\n    for (let f = 0; f < formTag.children.length; f++) {\r\n      if (formTag.children[f].nodeName === 'attribute') {\r\n        const attributeField = formTag.children[f];\r\n        formFieldAttributes[f] = [\r\n          attributeField.getAttribute('attLabel'),\r\n          attributeField.getAttribute('fieldtype'),\r\n          attributeField.getAttribute('datatype'),\r\n          attributeField.getAttribute('editable'),\r\n          attributeField.getAttribute('required'),\r\n          attributeField.getAttribute('grid'),\r\n          attributeField.getAttribute('attTooltip'),\r\n        ];\r\n        // Get Task Field Events\r\n        for (let e = 0; e < attributeField.children.length; e++) {\r\n          if (attributeField.children[e].nodeName === 'events') {\r\n            for (let v = 0; v < attributeField.children[e].children.length; v++) {\r\n              taskFieldsEvents[tskFldEvtCounter++] = [\r\n                attributeField.getAttribute('attLabel'),\r\n                attributeField.children[e].children[v].getAttribute('busClaName'),\r\n                attributeField.children[e].children[v].getAttribute('evtName'),\r\n                attributeField.children[e].children[v].getAttribute('busClaDesc'),\r\n              ];\r\n            }\r\n          }\r\n        }\r\n      } else if (formTag.children[f].nodeName === 'events') {\r\n        // Get Form Events\r\n        const events = formTag.children[f];\r\n        for (let c = 0; c < events.children.length; c++) {\r\n          taskFormEvents[c] = [\r\n            events.children[c].getAttribute('busClaName'),\r\n            events.children[c].getAttribute('evtName'),\r\n            events.children[c].getAttribute('busClaDesc'),\r\n          ];\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      taskFormEvents,\r\n      formFieldAttributes,\r\n      taskFieldsEvents,\r\n    };\r\n  }\r\n}\r\n","import { saveSvgAsPng, svgAsDataUri } from 'save-svg-as-png';\r\nimport { saveAs } from 'file-saver';\r\nimport { getSVGMapBBox, getName } from '../utils/util';\r\n\r\nexport default class Documentation {\r\n  constructor(editor) {\r\n    this._editor = editor;\r\n  }\r\n\r\n  async getPNGCanvas() {\r\n    // used by facilis to generate canvas of image in PDF file\r\n    this._editor.unSelectAllElements();\r\n    // check grid state to turn off if  on.\r\n    const gridState = this._editor._gridManager.isGridOn;\r\n    this._editor.unSelectAllElements();\r\n    // reset viewport view\r\n    this._editor.resetView();\r\n    if (gridState) {\r\n      this._editor.showGrid(false);\r\n    }\r\n    const mapBounds = getSVGMapBBox(this._editor.elements);\r\n    const svguri = await svgAsDataUri(document.getElementById('app'), {\r\n      backgroundColor: '#fff',\r\n      width: mapBounds.width + 40,\r\n      height: mapBounds.height + 40,\r\n      left: mapBounds.x - 20,\r\n      top: mapBounds.y - 20,\r\n      excludeUnusedCss: false,\r\n      scale: 1,\r\n    });\r\n    const canvasObj = this._addImage(svguri).then((image) => {\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n      context.drawImage(image, 0, 0, image.width, image.height);\r\n      return canvas;\r\n    });\r\n    if (gridState) {\r\n      this._editor.showGrid(true);\r\n    }\r\n\r\n    return canvasObj;\r\n  }\r\n\r\n  generateXPDLFile() {\r\n    // downloads current xpdl file directly to browser, used by online apaia\r\n    const xpdl = this._editor.buildXMLProcess();\r\n    const blob = new Blob([xpdl], { type: 'text/plain;charset=utf-8' });\r\n    saveAs(blob, `${getName(this._editor.workflow.properties.name)}.xpdl`);\r\n  }\r\n\r\n  generateProcessPNG() {\r\n    // downloads a PNG file to browser, used by apia online\r\n    const mapBounds = getSVGMapBBox(this._editor.elements);\r\n    const app = document.getElementById('app');\r\n    this._editor.unSelectAllElements();\r\n    saveSvgAsPng(app, `${getName(this._editor.workflow.properties.name)}.png`, {\r\n      backgroundColor: '#fff',\r\n      width: mapBounds.width + 40,\r\n      height: mapBounds.height + 40,\r\n      left: mapBounds.x - 20,\r\n      top: mapBounds.y - 20,\r\n      excludeUnusedCss: false,\r\n      scale: 1,\r\n    });\r\n  }\r\n\r\n  async getPNGDataURL() {\r\n    // returns the diagram as a png data url,\r\n    // used by facilis renderer class to export image\r\n    const gridState = this._editor._gridManager.isGridOn;\r\n    this._editor.unSelectAllElements();\r\n    this._editor.resetView();\r\n    if (gridState) {\r\n      this._editor.showGrid(false);\r\n    }\r\n    const mapBounds = getSVGMapBBox(this._editor.elements);\r\n    const svguri = await svgAsDataUri(document.getElementById('app'), {\r\n      backgroundColor: '#fff',\r\n      width: mapBounds.width + 40,\r\n      height: mapBounds.height + 40,\r\n      left: mapBounds.x - 40,\r\n      top: mapBounds.y - 40,\r\n      excludeUnusedCss: false,\r\n      scale: 1,\r\n    });\r\n    const urlData = this._addImage(svguri).then((image) => {\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n      context.drawImage(image, 0, 0, image.width, image.height);\r\n      const url = canvas\r\n        .toDataURL('image/png')\r\n        .substring('data:image/png;base64,'.length);\r\n      return url;\r\n    });\r\n    if (gridState) {\r\n      this._editor.showGrid(true);\r\n    }\r\n    return urlData;\r\n  }\r\n\r\n  _addImage(uri) {\r\n    return new Promise((resolve, reject) => {\r\n      const image = document.createElement('img');\r\n      image.onload = () => {\r\n        return resolve(image);\r\n      };\r\n      image.onerror = reject;\r\n      image.src = uri;\r\n    });\r\n  }\r\n}\r\n","import sax from 'sax';\r\n\r\nexport default class Converter {\r\n  constructor() {\r\n    this.arrayJs = [];\r\n    this.convert = sax.parser(true);\r\n    this.textValid = false;\r\n  }\r\n\r\n  _isValidTag(name) {\r\n    return (\r\n      name === 'VALUE'\r\n      || name === 'EVENT'\r\n      || name === 'TASK'\r\n      || name === 'CALENDAR'\r\n      || name === 'STATUS'\r\n    );\r\n  }\r\n\r\n  convertToJson(xml) {\r\n    const data = [];\r\n    let detail = {};\r\n    this.convert.onopentag = (tag) => {\r\n      const name = tag.name.toUpperCase();\r\n      switch (name) {\r\n        case 'LEVEL': {\r\n          detail[tag.attributes.name] = tag.attributes.value;\r\n          break;\r\n        }\r\n        case 'EVENT':\r\n        case 'CALENDAR':\r\n        case 'TASK':\r\n        case 'STATUS': {\r\n          detail.id = tag.attributes.id;\r\n          detail.name = tag.attributes.name;\r\n          break;\r\n        }\r\n        case 'MESSAGE':\r\n        case 'EXCEPTION': {\r\n          this.textValid = true;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    this.convert.onclosetag = (name) => {\r\n      if (this._isValidTag(name.toUpperCase())) {\r\n        data.push(detail);\r\n        detail = {};\r\n      }\r\n      if (this.textValid) {\r\n        this.textValid = false;\r\n        data.push({ message: 'OK' });\r\n      }\r\n    };\r\n\r\n    this.convert.ontext = (text) => {\r\n      if (this.textValid) {\r\n        data.push({ message: text });\r\n        this.textValid = false;\r\n      }\r\n    };\r\n\r\n    this.convert.write(xml).close();\r\n    return data;\r\n  }\r\n}\r\n","export const TEMPLATE = '<i class=\"fas fa-info-circle fa-2x icon\"></i><div class=\"toast-body\"><h4></h4><p></p></div>';\r\n\r\nexport const OPTIONS_TOAST = {\r\n  duration: 3000,\r\n  position: 'bottom-left',\r\n};\r\n\r\nexport const ICON_CLASS = {\r\n  infoClass: 'fa-info-circle',\r\n  successClass: 'fa-check-circle',\r\n  warningClass: 'fa-exclamation-triangle',\r\n  dangerClass: 'fa-exclamation-circle',\r\n};\r\n\r\nexport const TYPE_CLASS = {\r\n  neutral: 'neutral',\r\n  info: 'info',\r\n  success: 'success',\r\n  warning: 'warning',\r\n  danger: 'danger',\r\n};\r\n\r\nexport const POSITION_CLASS = {\r\n  top: 'top',\r\n  bottom: 'bottom',\r\n  center: 'center',\r\n  left: 'left',\r\n  right: 'right',\r\n};\r\n\r\nexport default {\r\n  TEMPLATE,\r\n  ICON_CLASS,\r\n  TYPE_CLASS,\r\n  POSITION_CLASS,\r\n};\r\n","import {\r\n  TEMPLATE, ICON_CLASS, TYPE_CLASS, POSITION_CLASS, OPTIONS_TOAST,\r\n} from './ConfigToast';\r\n\r\nexport default class ToastMessage {\r\n  constructor() {\r\n    this.containerToast = !this._exists() ? document.createElement('div') : this._exists();\r\n    this.body = document.querySelector('body');\r\n    if (!this._exists()) {\r\n      this.containerToast.classList.add('toast-container');\r\n      this.containerToast.innerHTML = TEMPLATE;\r\n      this.body.insertAdjacentElement('afterbegin', this.containerToast);\r\n    }\r\n    this._title = this.containerToast.querySelector('div.toast-body h4');\r\n    this._icon = this.containerToast.querySelector('svg.icon');\r\n    this._message = this.containerToast.querySelector('div.toast-body p');\r\n  }\r\n\r\n  _exists() {\r\n    const container = document.querySelector('.toast-container');\r\n    return container;\r\n  }\r\n\r\n  cleanClass(element, className) {\r\n    if (element) element.classList.remove(className);\r\n  }\r\n\r\n  cleanFirstAllClass(element, classType) {\r\n    const entries = Object.entries(classType);\r\n    for (let index = 0; index < entries.length; index++) {\r\n      this.cleanClass(element, entries[index][1]);\r\n    }\r\n  }\r\n\r\n  get icon() {\r\n    return this._icon;\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  get message() {\r\n    return this._message;\r\n  }\r\n\r\n  set icon(type) {\r\n    this._icon = this.containerToast.querySelector('svg.icon');\r\n    this.cleanFirstAllClass(this._icon, ICON_CLASS);\r\n    this._icon.classList.add(ICON_CLASS[`${type}Class`]);\r\n  }\r\n\r\n  set title(title) {\r\n    if (this._title) this._title.innerText = title;\r\n  }\r\n\r\n  set message(msg) {\r\n    if (this._message) this._message.innerHTML = msg;\r\n  }\r\n\r\n  set position(position) {\r\n    const positions = position.split('-');\r\n    this.cleanFirstAllClass(this.containerToast, POSITION_CLASS);\r\n    if (positions.length > 0) {\r\n      positions.forEach((value) => {\r\n        this.containerToast.classList.add(value);\r\n      });\r\n    }\r\n  }\r\n\r\n  moveXY(coordinate) {\r\n    this.containerToast.style.top = `${coordinate.y}px`;\r\n    this.containerToast.style.left = `${coordinate.x}px`;\r\n  }\r\n\r\n  waitTime(execFunction, duration) {\r\n    let timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      execFunction();\r\n      clearTimeout(timeout);\r\n    }, duration);\r\n  }\r\n\r\n  fadeIn() {\r\n    this.containerToast.style.display = 'flex';\r\n    this.waitTime(() => {\r\n      this.containerToast.classList.add('show');\r\n    }, 0.2);\r\n  }\r\n\r\n  fadeOut() {\r\n    this.containerToast.classList.remove('show');\r\n    this.waitTime(() => {\r\n      this.containerToast.style.display = 'none';\r\n    }, 0.5);\r\n  }\r\n\r\n  show(duration) {\r\n    this.fadeIn();\r\n    this.waitTime(() => {\r\n      this.fadeOut();\r\n    }, duration);\r\n  }\r\n\r\n  showMessage(options) {\r\n    const {\r\n      type, title, message, duration, position, coordinate,\r\n    } = options;\r\n    this.cleanFirstAllClass(this.containerToast, TYPE_CLASS);\r\n    this.containerToast.classList.add(type || 'neutral');\r\n    this.icon = type || '';\r\n    this.title = title || '';\r\n    this.message = message || '';\r\n    if (coordinate) this.moveXY(coordinate);\r\n    if (position) this.position = position;\r\n    this.show(duration || 2000);\r\n  }\r\n\r\n  showWrongMessage(options) {\r\n    const { title, message } = options;\r\n    this.showMessage({\r\n      ...OPTIONS_TOAST,\r\n      type: 'danger',\r\n      title,\r\n      message,\r\n      duration: 4000,\r\n    });\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport i18next from 'i18next';\r\nimport ToastMessage from './ToastMessage';\r\n\r\nexport default class Component extends EventEmitter {\r\n  constructor(type, nameId, panel, label = undefined) {\r\n    super();\r\n    this._nameId = nameId;\r\n    this._panel = panel;\r\n    const modified = this.panel.querySelector(`#wrapper_${type}`);\r\n    modified.setAttribute('id', `${modified.id}_${this.nameId}`);\r\n    this._wrapper = modified;\r\n    this._label = label;\r\n    this._labelEl = this._wrapper.querySelector('.main__sidepanel__form__label');\r\n    if (this._labelEl) this.labelEl = `${label}:`;\r\n  }\r\n\r\n  get nameId() {\r\n    return this._nameId;\r\n  }\r\n\r\n  get panel() {\r\n    return this._panel;\r\n  }\r\n\r\n  get wrapper() {\r\n    return this._wrapper;\r\n  }\r\n\r\n  set nameID(value) {\r\n    this._nameId = value;\r\n  }\r\n\r\n  set panel(value) {\r\n    this._panel = value;\r\n  }\r\n\r\n  set wrapper(value) {\r\n    this._wrapper = value;\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  set labelEl(value) {\r\n    this._labelEl.innerText = value;\r\n  }\r\n\r\n  get label() {\r\n    return this._label;\r\n  }\r\n\r\n  clean() {\r\n    this.wrapper.remove();\r\n  }\r\n\r\n  disabled(el, flag) {\r\n    el.setAttribute('disabled', flag);\r\n  }\r\n\r\n  showInvalidSession() {\r\n    const toast = new ToastMessage();\r\n    const option = {\r\n      duration: 15000,\r\n      position: 'bottom-left',\r\n    };\r\n    toast.showMessage({\r\n      type: 'danger',\r\n      title: i18next.t('component.txtComponentToastTitleError'),\r\n      message: i18next.t('component.txtComponentToastMessage'),\r\n      ...option,\r\n    });\r\n  }\r\n}\r\n","import Component from './Component';\r\n\r\nexport default class ExpanderComponent extends Component {\r\n  constructor(nameId, panel, expandId, label) {\r\n    super('expander', nameId, panel, label);\r\n    this.expandId = expandId;\r\n\r\n    this._init();\r\n  }\r\n\r\n  get isExpand() {\r\n    return JSON.parse(this._expandZone.getAttribute('data-visible'));\r\n  }\r\n\r\n  get inputEl() {\r\n    return this.showInput;\r\n  }\r\n\r\n  set inputEl(value) {\r\n    this.showInput.placeholder = value;\r\n  }\r\n\r\n  get expandZone() {\r\n    return this._expandZone;\r\n  }\r\n\r\n  _init() {\r\n    this.expandBtn = this.wrapper.querySelector('.btn');\r\n    this.showInput = this.wrapper.querySelector('input[type=text]');\r\n    this._expandZone = this.panel.querySelector(`#${this.expandId}`);\r\n    this._expandZone.setAttribute('data-visible', false);\r\n\r\n    // Add Events\r\n    this.expandBtn.addEventListener('click', () => {\r\n      this.expand();\r\n    });\r\n  }\r\n\r\n  expand() {\r\n    const iconUp = 'fa-arrow-up';\r\n    const iconDown = 'fa-arrow-down';\r\n    const iconEl = this.expandBtn.querySelector('svg');\r\n    if (this.isExpand) {\r\n      iconEl.classList.replace(iconUp, iconDown);\r\n      this._expandZone.setAttribute('data-visible', false);\r\n    } else {\r\n      iconEl.classList.replace(iconDown, iconUp);\r\n      this._expandZone.setAttribute('data-visible', true);\r\n      this.emit('expand');\r\n    }\r\n  }\r\n\r\n  showValue(data) {\r\n    if (data.length > 0) {\r\n      let newData = `(${data.length}) - `;\r\n      let index = 0;\r\n      const quantity = 2;\r\n      while (index < quantity && index < data.length) {\r\n        const element = data[index];\r\n        newData = newData.concat(`${element}`);\r\n        if (index !== quantity - 1 && index !== data.length - 1) {\r\n          newData = newData.concat(', ');\r\n        }\r\n        index++;\r\n      }\r\n      if (data.length > quantity) {\r\n        newData = newData.concat(' ... ');\r\n      }\r\n      this.showInput.setAttribute('placeholder', newData);\r\n    } else {\r\n      this.showInput.setAttribute('placeholder', '');\r\n    }\r\n  }\r\n}\r\n","import i18next from 'i18next';\r\nimport Component from './Component';\r\nimport ToastMessage from './ToastMessage';\r\n\r\nexport default class ListComponent extends Component {\r\n  constructor(nameId, panel, label, arrayList, add) {\r\n    super('list', nameId, panel, label);\r\n    this._arrayList = arrayList;\r\n    this._idItem = 'id';\r\n    this._editStatus = false;\r\n    this._disabledStatus = false;\r\n    this._rowEditableSelected = null;\r\n    this.MAX_ROWS = 6;\r\n    this._initComponent();\r\n    this._initEvents(add);\r\n    this._initListTable();\r\n    this._load = 0;\r\n  }\r\n\r\n  get editStatus() {\r\n    return this._editStatus;\r\n  }\r\n\r\n  set editStatus(value) {\r\n    this._editStatus = value;\r\n    this.addAction.disabled = this._editStatus;\r\n  }\r\n\r\n  get idItem() {\r\n    return this._idItem;\r\n  }\r\n\r\n  set idItem(value) {\r\n    this._idItem = value;\r\n  }\r\n\r\n  get arrayList() {\r\n    return this._arrayList;\r\n  }\r\n\r\n  set arrayList(value) {\r\n    this._arrayList = value;\r\n    this._initListTable();\r\n  }\r\n\r\n  set arrayListData(value) {\r\n    this._cleanElementsList();\r\n    this._arrayList.data = value;\r\n    if (value.length > 0) {\r\n      const list = this.wrapper.querySelector('.list');\r\n      this._cleanElementsList();\r\n      this._createListElement(list, this._arrayList.data);\r\n    }\r\n    if (this.selected()) {\r\n      this.selected().classList.toggle('select');\r\n    }\r\n    this._toggleBlankRow();\r\n    this.moveUpAction.disabled = true;\r\n    this.moveDownAction.disabled = true;\r\n  }\r\n\r\n  get rowsItem() {\r\n    return this.wrapper.querySelectorAll('.list .row');\r\n  }\r\n\r\n  get rowEditableSelected() {\r\n    return this._rowEditableSelected;\r\n  }\r\n\r\n  set rowEditableSelected(value) {\r\n    this._rowEditableSelected = value;\r\n  }\r\n\r\n  rowById(id) {\r\n    return this.wrapper.querySelector(`ul[data-key='${id}']`);\r\n  }\r\n\r\n  get rowSelected() {\r\n    let rowSelected;\r\n    if (this.selected()) {\r\n      const key = this.selected().getAttribute('data-key');\r\n      rowSelected = this.arrayList.data.find((value) => {\r\n        return parseInt(value[this.idItem], 10) === parseInt(key, 10);\r\n      });\r\n    }\r\n    return rowSelected;\r\n  }\r\n\r\n  set rowSelected(value) {\r\n    this.unSelectAll();\r\n    // IF \"rowEditableSelected = true\" addAction button set to disable\r\n    this.addAction.disabled = this.rowEditableSelected && true;\r\n    const rowElement = this.rowById(value[this.idItem]);\r\n    if (rowElement) {\r\n      rowElement.classList.add('select');\r\n    }\r\n  }\r\n\r\n  get isOverflowing() {\r\n    return this._arrayList.data.length > this.MAX_ROWS;\r\n  }\r\n\r\n  updateActionsButtons() {\r\n    if (this.rowSelected) {\r\n      const index = this.arrayList.data.findIndex((item) => {\r\n        return parseInt(item[this.idItem], 10) === parseInt(this.rowSelected[this.idItem], 10);\r\n      });\r\n      if (index !== -1) {\r\n        const count = this.arrayList.data.length - 1;\r\n        this.moveUpAction.disabled = index === 0;\r\n        this.moveDownAction.disabled = index === count;\r\n      }\r\n    }\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabledStatus;\r\n  }\r\n\r\n  set disabled(value) {\r\n    this._disabledStatus = value;\r\n    this.addAction.disabled = value;\r\n    this.moveUpAction.disabled = true;\r\n    this.moveDownAction.disabled = true;\r\n    if (this.rowSelected && !value) {\r\n      const index = this.arrayList.data.findIndex((item) => {\r\n        return parseInt(item[this.idItem], 10) === parseInt(this.rowSelected[this.idItem], 10);\r\n      });\r\n      if (index !== -1) {\r\n        const count = this.arrayList.data.length - 1;\r\n        this.moveUpAction.disabled = index < count;\r\n        this.moveDownAction.disabled = index > count;\r\n      }\r\n    }\r\n  }\r\n\r\n  unSelectAll(disabled = false) {\r\n    if (this.selected()) this.selected().classList.remove('select');\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  _cleanElementsList() {\r\n    const items = this.wrapper.querySelectorAll('.list .row');\r\n    items.forEach((element) => element.remove());\r\n  }\r\n\r\n  refreshList() {\r\n    const selected = this.editStatus ? this.rowEditableSelected : this.rowSelected;\r\n    const list = this.wrapper.querySelector('.list');\r\n    this._cleanElementsList();\r\n    this._createListElement(list, this._arrayList.data);\r\n    if (selected) {\r\n      let elSelected;\r\n      this.rowsItem.forEach((value) => {\r\n        if (parseInt(value.getAttribute('data-key'), 10) === parseInt(selected[this._idItem], 10)) {\r\n          elSelected = value;\r\n        }\r\n      });\r\n      elSelected.classList.toggle(this.editStatus ? 'edit-status' : 'select');\r\n    }\r\n    this.updateActionsButtons();\r\n    this._toggleBlankRow();\r\n  }\r\n\r\n  _initComponent() {\r\n    const buttonList = this.wrapper.querySelectorAll('.actions .btn');\r\n    this._elementsList = this.wrapper.querySelector('.list');\r\n    this._createdDeleteAll = false;\r\n    [this.addAction, this.moveUpAction, this.moveDownAction] = buttonList;\r\n    this._setDefaultStateAction();\r\n  }\r\n\r\n  _initEvents(add) {\r\n    this.moveDownAction.addEventListener('click', () => {\r\n      this._moveDownItem();\r\n    });\r\n    this.moveUpAction.addEventListener('click', () => {\r\n      this._moveUpItem();\r\n    });\r\n    if (add) {\r\n      this.addAction.addEventListener('click', () => {\r\n        this.emit('add_item');\r\n      });\r\n    } else {\r\n      this.addAction.remove();\r\n      this.moveDownAction.classList.add('btn-col-2');\r\n      this.moveUpAction.classList.add('btn-col-2');\r\n    }\r\n  }\r\n\r\n  _setDefaultStateAction() {\r\n    this.moveUpAction.disabled = true;\r\n    this.moveDownAction.disabled = true;\r\n  }\r\n\r\n  _initListTable() {\r\n    const list = this.wrapper.querySelector('.list');\r\n    const children = list.querySelectorAll('ul');\r\n    if (children.length > 0) {\r\n      children.forEach((element) => element.remove());\r\n    }\r\n    const header = this._createRowElement(this.arrayList.header, true);\r\n    list.appendChild(header);\r\n    this._createListElement(list, this.arrayList.data);\r\n    this._toggleBlankRow();\r\n  }\r\n\r\n  _toggleBlankRow() {\r\n    const list = this.wrapper.querySelector('.list');\r\n    let emptyRow = list.querySelector('ul[data-empty]');\r\n    if (emptyRow !== null) {\r\n      emptyRow.remove();\r\n      emptyRow = null;\r\n    }\r\n\r\n    if (this.arrayList.data.length === 0 && emptyRow === null && list.children.length === 1) {\r\n      const row = document.createElement('ul');\r\n      row.classList.add('row');\r\n      row.setAttribute('data-empty', true);\r\n      this.arrayList.header.forEach(() => {\r\n        const cell = this._createCellElement('', false);\r\n        row.appendChild(cell);\r\n      });\r\n      list.appendChild(row);\r\n    }\r\n  }\r\n\r\n  _createDeleteActionElement() {\r\n    const del = document.createElement('a');\r\n    del.setAttribute('href', '#');\r\n    const icon = document.createElement('i');\r\n    icon.setAttribute('class', 'fas fa-times');\r\n    del.appendChild(icon);\r\n    del.addEventListener('click', () => this.deleteItem());\r\n    return del;\r\n  }\r\n\r\n  _createCheckAllActionElement(value) {\r\n    const checkAll = document.createElement('a');\r\n    const icon = document.createElement('i');\r\n    icon.setAttribute('class', 'fas fa-tasks');\r\n    checkAll.appendChild(icon);\r\n    checkAll.setAttribute('class', 'checkbox');\r\n    checkAll.style.marginLeft = '0.4em';\r\n    checkAll.addEventListener('click', () => {\r\n      this.checkAllItems(value);\r\n    });\r\n    return checkAll;\r\n  }\r\n\r\n  _createDeleteAllActionElement() {\r\n    const deleteAll = document.createElement('a');\r\n    deleteAll.classList.add('delete-all');\r\n    const icon = document.createElement('i');\r\n    icon.setAttribute('class', 'fas fa-times');\r\n    deleteAll.appendChild(icon);\r\n    deleteAll.addEventListener('click', () => {\r\n      this._deleteAllItems();\r\n    });\r\n    return deleteAll;\r\n  }\r\n\r\n  _createEditActionElement() {\r\n    const edit = document.createElement('a');\r\n    edit.classList.add('edit');\r\n    const icon = document.createElement('i');\r\n    icon.setAttribute('class', 'fas fa-pen');\r\n    edit.appendChild(icon);\r\n    edit.addEventListener('click', () => this.fireEdition(this.target()));\r\n    return edit;\r\n  }\r\n\r\n  _createCheckActionElement(value, action) {\r\n    const checkbox = document.createElement('a');\r\n    checkbox.setAttribute('href', '#');\r\n    checkbox.setAttribute('name', action.key);\r\n    checkbox.setAttribute('class', 'checkbox');\r\n    const icon = document.createElement('i');\r\n    if (value) {\r\n      icon.setAttribute('class', 'far fa-check-square fa-lg');\r\n    } else {\r\n      icon.setAttribute('class', 'far fa-square fa-lg');\r\n    }\r\n    checkbox.appendChild(icon);\r\n    checkbox.addEventListener('click', () => {\r\n      this.checkItem();\r\n    });\r\n    return checkbox;\r\n  }\r\n\r\n  _createAccordingTheActionType(action, value = '') {\r\n    let actionEl;\r\n    const type = action.type || action;\r\n    switch (type) {\r\n      case 'checkbox': {\r\n        actionEl = this._createCheckActionElement(value, action);\r\n        break;\r\n      }\r\n      case 'delete': {\r\n        actionEl = this._createDeleteActionElement();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        actionEl = this._createEditActionElement();\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    actionEl.title = type.toUpperCase();\r\n    return actionEl;\r\n  }\r\n\r\n  _createCellElement(data, th) {\r\n    const cell = document.createElement('li');\r\n    if (th) {\r\n      if (data !== 'delete-all' && data !== 'edit') cell.innerText = data;\r\n      if (typeof data === 'string') {\r\n        const value = data.toLowerCase();\r\n        if (\r\n          value === i18next.t('listComponent.txtListComponentHeaderCond')\r\n          || value === i18next.t('listComponent.txtListComponentHeaderInOut')\r\n          || value === i18next.t('listComponent.txtListComponentHeaderType')\r\n          || value === i18next.t('listComponent.txtListComponentHeaderEntity')\r\n          || value === i18next.t('listComponent.txtListComponentHeaderProcess')\r\n        ) {\r\n          cell.classList.add('condition-cell');\r\n        }\r\n        if (value === 'event') {\r\n          cell.classList.add('medium-cell');\r\n        }\r\n        if (value === 'binding') {\r\n          cell.classList.add('binding-cell');\r\n        }\r\n      }\r\n      if (data.type !== undefined) {\r\n        cell.innerText = data.title;\r\n        cell.classList.add('cell-center');\r\n        cell.classList.add('action-cell');\r\n      }\r\n      if (data === 'delete-all' || data === 'edit') {\r\n        cell.classList.add('action-cell');\r\n      }\r\n    } else {\r\n      const find = this.arrayList.actions.find((value) => data[0] === value.key);\r\n      if (find) {\r\n        cell.setAttribute('class', 'cell-center');\r\n        const actionEl = this._createAccordingTheActionType(find || 'delete', data[1]);\r\n        cell.appendChild(actionEl);\r\n        cell.classList.add('action-cell');\r\n      } else {\r\n        cell.setAttribute('title', data[1] || '');\r\n        cell.innerText = data[1] || '';\r\n      }\r\n    }\r\n    return cell;\r\n  }\r\n\r\n  _createRowElement(data, thead) {\r\n    const row = document.createElement('ul');\r\n    data.forEach((cell) => {\r\n      const cellNode = this._createCellElement(cell, thead);\r\n      if ((cell === 'delete-all' || cell === 'edit') && thead) {\r\n        cellNode.classList.add('cell-center');\r\n        if (this.arrayList.deleteActionAll && cell === 'delete-all') {\r\n          const deleteAll = this._createDeleteAllActionElement();\r\n          this._createdDeleteAll = true;\r\n          cellNode.appendChild(deleteAll);\r\n        }\r\n      }\r\n      const notShow = this.arrayList.notShow.find((value) => cell[0] === value);\r\n      if (!notShow) {\r\n        row.appendChild(cellNode);\r\n      }\r\n    });\r\n\r\n    if (!thead) {\r\n      row.setAttribute('class', 'row');\r\n      const dataKey = data.find((value) => {\r\n        return value[0] === this._idItem;\r\n      });\r\n      if (dataKey) row.setAttribute('data-key', dataKey[1]);\r\n      if (this.arrayList.editAction) {\r\n        const editCell = this._createCellElement('', false);\r\n        editCell.classList.add('cell-center');\r\n        const actionEl = this._createAccordingTheActionType('edit');\r\n        editCell.appendChild(actionEl);\r\n        editCell.classList.add('action-cell');\r\n        row.appendChild(editCell);\r\n      }\r\n      if (this.arrayList.deleteAction) {\r\n        const deleteCell = this._createCellElement('', false);\r\n        deleteCell.classList.add('cell-center');\r\n        const actionEl = this._createAccordingTheActionType('delete');\r\n        deleteCell.appendChild(actionEl);\r\n        deleteCell.classList.add('action-cell');\r\n        row.appendChild(deleteCell);\r\n      }\r\n      row.addEventListener('click', () => {\r\n        this.selectElement();\r\n      });\r\n    }\r\n    return row;\r\n  }\r\n\r\n  _createListElement(nodeList, data) {\r\n    if (data) {\r\n      data.forEach((row) => {\r\n        const entries = Object.entries(row);\r\n        const rowNode = this._createRowElement(entries, false);\r\n        nodeList.appendChild(rowNode);\r\n      });\r\n    }\r\n  }\r\n\r\n  target() {\r\n    let select;\r\n    if (event.target !== undefined) {\r\n      select = event.target;\r\n      while (select.nodeName.toLowerCase() !== 'ul') {\r\n        select = select.parentNode;\r\n      }\r\n    }\r\n    return select;\r\n  }\r\n\r\n  selected() {\r\n    const selected = this.wrapper.querySelector('ul.row.select');\r\n    return selected;\r\n  }\r\n\r\n  selectElement() {\r\n    const selected = this.selected();\r\n    if (selected !== null) {\r\n      const isDifferent = selected.getAttribute('data-key') !== this.target().getAttribute('data-key');\r\n      if (isDifferent) {\r\n        selected.classList.remove('select');\r\n      }\r\n    }\r\n    if (!this.editStatus && !this.disabled) {\r\n      if (!this.target().classList.contains('select')) {\r\n        this.target().classList.add('select');\r\n      }\r\n      const actual = this.selected();\r\n      const rowSelected = this.arrayList.data.find((value) => {\r\n        return parseInt(value[this._idItem], 10) === parseInt(actual.getAttribute('data-key'), 10);\r\n      });\r\n      this.emit('selected_item', rowSelected);\r\n      this._enableOrDisableActionBtn();\r\n    }\r\n  }\r\n\r\n  _enableOrDisableActionBtn() {\r\n    if (this.selected() !== null && this.selected() !== undefined) {\r\n      const header = this.wrapper.querySelector('.list').firstElementChild;\r\n      this.moveUpAction.disabled = header === this.selected().previousElementSibling;\r\n      this.moveDownAction.disabled = this.selected().nextElementSibling === null;\r\n    } else {\r\n      this._setDefaultStateAction();\r\n    }\r\n  }\r\n\r\n  _check(el, value) {\r\n    const className = value ? 'far fa-square fa-lg' : 'far fa-check-square fa-lg';\r\n    el.setAttribute('class', className);\r\n    return el;\r\n  }\r\n\r\n  checkItem() {\r\n    event.stopPropagation();\r\n    const checkbox = event.target;\r\n    const idEdit = this.rowEditableSelected && this.rowEditableSelected.id;\r\n    let id;\r\n    if (checkbox.parentNode.getAttribute('class') === 'checkbox') {\r\n      id = this.target().getAttribute('data-key');\r\n      const position = this.arrayList.data.findIndex((value) => {\r\n        return parseInt(value[this._idItem], 10) === parseInt(id, 10);\r\n      });\r\n      const keyName = event.target.parentNode.getAttribute('name');\r\n      const row = this.arrayList.data[position];\r\n      this._check(checkbox, row[keyName]);\r\n      row[keyName] = !row[keyName];\r\n      this.emit('checked_item', { value: row[keyName], position, keyName });\r\n      if (this.rowEditableSelected && +id === idEdit) {\r\n        this.rowEditableSelected = row;\r\n      } else {\r\n        this.rowSelected = row;\r\n      }\r\n      // IF EDIT-STATUS 'true' ENABLE OR DISABLE BUTTON\r\n      if (!this._editStatus) {\r\n        this._enableOrDisableActionBtn();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkAllItems(value) {\r\n    this.arrayList.data.forEach((el) => {\r\n      el[value.key] = value.all;\r\n    });\r\n    const checkboxs = this.wrapper.querySelectorAll('.checkbox i');\r\n    checkboxs.forEach((checkbox) => {\r\n      if (checkbox.parentNode.name === value.key) {\r\n        this._check(checkbox, value.all);\r\n      }\r\n    });\r\n    value.all = !value.all;\r\n  }\r\n\r\n  addItem(item) {\r\n    if (item) {\r\n      const exist = this.arrayList.data.find((value) => {\r\n        return parseInt(value[this._idItem], 10) === parseInt(item.id, 10);\r\n      });\r\n      if (!exist) {\r\n        this.arrayList.data.push(item);\r\n        const insertEl = Object.entries(item);\r\n        const row = this._createRowElement(insertEl, false);\r\n        this._elementsList.appendChild(row);\r\n        this.updateActionsButtons();\r\n      }\r\n    }\r\n    this._toggleBlankRow();\r\n  }\r\n\r\n  _deleteInArray(key) {\r\n    const position = this.arrayList.data.findIndex((value) => {\r\n      return parseInt(value[this._idItem], 10) === parseInt(key, 10);\r\n    });\r\n    if (position !== -1) {\r\n      this.arrayList.data.splice(position, 1);\r\n    }\r\n  }\r\n\r\n  fireEdition(target) {\r\n    event.stopPropagation();\r\n    this.selectElement();\r\n    const existEdit = this.wrapper.querySelector('.row.edit-status');\r\n    let sameRowEdited = false;\r\n    if (existEdit) {\r\n      const idEdit = parseInt(existEdit.getAttribute('data-key'), 10);\r\n      const idTarget = parseInt(target.getAttribute('data-key'), 10);\r\n      sameRowEdited = idEdit === idTarget;\r\n      if (this.rowEditableSelected) {\r\n        this.moveUpAction.disabled = true;\r\n        this.moveDownAction.disabled = true;\r\n      } else {\r\n        // Enable buttons\r\n        this.moveUpAction.disabled = false;\r\n        this.moveDownAction.disabled = false;\r\n      }\r\n    } else {\r\n      // State return\r\n      this._setDefaultStateAction();\r\n    }\r\n\r\n    if (\r\n      ((!existEdit && !this.editStatus) || (this.editStatus && sameRowEdited))\r\n      && !this.disabled\r\n    ) {\r\n      this.editStatus = !this.editStatus;\r\n      target.classList.toggle('edit-status');\r\n      if (target && this.editStatus) {\r\n        const targetIndex = target.getAttribute('data-key');\r\n        this.rowsItem.forEach((row) => row.classList.remove('select'));\r\n        this.rowEditableSelected = this.arrayList.data.find((value) => {\r\n          return parseInt(value[this._idItem], 10) === parseInt(targetIndex, 10);\r\n        });\r\n      } else {\r\n        this.selectElement();\r\n        this.rowEditableSelected = null;\r\n      }\r\n      this.emit('edit_item', this.editStatus);\r\n    }\r\n  }\r\n\r\n  deleteItem() {\r\n    event.stopPropagation();\r\n    if (this.editStatus) return;\r\n    if (!this.disabled) {\r\n      const deleteItem = this.target();\r\n      const key = parseInt(deleteItem.getAttribute('data-key'), 10);\r\n      const item = this.arrayList.data.find((value) => {\r\n        return parseInt(value[this._idItem], 10) === parseInt(key, 10);\r\n      });\r\n      deleteItem.remove();\r\n      this._toggleBlankRow();\r\n      this.emit('delete_item', item);\r\n      this._enableOrDisableActionBtn();\r\n      this.showDeleteItem(item);\r\n    }\r\n  }\r\n\r\n  showDeleteItem(item) {\r\n    const toast = new ToastMessage();\r\n    const label = this._label.match(/(^\\w+)/g) || 'Delete Item';\r\n    const option = {\r\n      duration: 15000,\r\n      position: 'bottom-left',\r\n    };\r\n    const message = `${\r\n      item.busClaName\r\n        ? `<b>${i18next.t('listComponent.txtListComponentHeaderToastMessageBusinessClass')}:</b> ${\r\n          item.busClaName\r\n        }<br>`\r\n        : ''\r\n    }\r\n     ${\r\n  item.name\r\n    ? `<b>${i18next.t('listComponent.txtListComponentHeaderToastMessageName')}</b> ${\r\n      item.name\r\n    }<br>`\r\n    : ''\r\n}\r\n     ${\r\n  item.haveCond\r\n    ? `<b>${i18next.t('listComponent.txtListComponentHeaderToastMessageCondition')}</b> ${\r\n      item.haveCond\r\n    }`\r\n    : ''\r\n}`;\r\n    toast.showMessage({\r\n      type: 'info',\r\n      title: `${i18next.t('listComponent.txtListComponentHeaderToastMessageTitle')} ${label}`,\r\n      message,\r\n      ...option,\r\n    });\r\n  }\r\n\r\n  _deleteAllItems() {\r\n    if (this.editStatus) return;\r\n    if (this.arrayList.data.length !== 0 && !this.disabled) {\r\n      // eslint-disable-next-line no-alert\r\n      const accept = confirm(i18next.t('listComponent.txtListComponentHeaderConfirmMessage'));\r\n      if (accept) {\r\n        this.arrayList.data = [];\r\n        this.rowsItem.forEach((element) => element.remove());\r\n        this._toggleBlankRow();\r\n        this.emit('delete_all_items');\r\n      }\r\n    }\r\n  }\r\n\r\n  _scrollToRow(row, executeFn, select = true) {\r\n    // if (this.isOverflowing) {\r\n    let element = row;\r\n    if (!(row instanceof Node)) {\r\n      element = this.rowById(row[this.idItem]);\r\n      if (select) {\r\n        this.rowSelected = row;\r\n      }\r\n    }\r\n    element.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n    });\r\n    //  }\r\n    if (select) {\r\n      if (executeFn) executeFn();\r\n      this.updateActionsButtons();\r\n    }\r\n  }\r\n\r\n  _move(direction) {\r\n    let actualPosition = 0;\r\n    let oldPosition = 0;\r\n    let actual;\r\n    let old;\r\n    // eslint-disable-next-line consistent-return\r\n    this.rowsItem.forEach((row, index) => {\r\n      if (this.selected().getAttribute('data-key') === row.getAttribute('data-key')) {\r\n        actualPosition = direction === 'up' ? index - 1 : index + 1;\r\n        // Set in the original array list\r\n        const temp = this.arrayList.data[actualPosition];\r\n        this.arrayList.data[actualPosition] = this.arrayList.data[index];\r\n        this.arrayList.data[index] = temp;\r\n        oldPosition = index;\r\n\r\n        // Set in the actual nodelist\r\n        const before = this.rowsItem[actualPosition];\r\n        const actionParam = direction === 'up' ? 'beforebegin' : 'afterend';\r\n        before.insertAdjacentElement(actionParam, row);\r\n\r\n        actual = this.arrayList.data[actualPosition];\r\n        old = this.arrayList.data[index];\r\n      }\r\n    });\r\n    this._scrollToRow(this.selected());\r\n    this.emit('move', actualPosition, oldPosition, actual, old, this.arrayList.data);\r\n  }\r\n\r\n  _moveUpItem() {\r\n    if (this.editStatus) return;\r\n    if (this.selected().previousElementSibling !== null) {\r\n      this._move('up');\r\n      this._enableOrDisableActionBtn();\r\n    }\r\n  }\r\n\r\n  _moveDownItem() {\r\n    if (this.editStatus) return;\r\n    if (this.selected().nextElementSibling !== null) {\r\n      this._move('down');\r\n      this._enableOrDisableActionBtn();\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport Component from './Component';\r\nimport ToastMessage from './ToastMessage';\r\nimport Converter from '../../utils/convertToJson';\r\n\r\nexport default class ConditionComponent extends Component {\r\n  constructor(nameId, panel, label, placeholder = '') {\r\n    super('condition', nameId, panel, label);\r\n    this._conditionArea = this.wrapper.querySelector('.condition_area');\r\n    this._conditionArea.value = '';\r\n    this.help = this.wrapper.querySelector('a.condition_question');\r\n    this.validate = this.wrapper.querySelector('a.condition_validate');\r\n    this.syntaxRules = this.wrapper.querySelector('.condition_syntax_rules');\r\n    this._isValid = false;\r\n    let timeout;\r\n    this.placeholder = placeholder;\r\n    this._hideValidate(true);\r\n\r\n    this.help.addEventListener('click', () => {\r\n      this.syntaxRules.hidden = !this.syntaxRules.hidden;\r\n    });\r\n\r\n    this.validate.addEventListener('click', async () => {\r\n      await this._onConditionAreaValidated();\r\n    });\r\n\r\n    this._conditionArea.addEventListener('blur', async () => {\r\n      await this._onConditionAreaValidated();\r\n    });\r\n\r\n    this._conditionArea.addEventListener('input', () => {\r\n      if (Config.ENV !== 'Production') {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n          this._onConditionAreaChanged();\r\n          clearTimeout(timeout);\r\n        }, 800);\r\n      }\r\n      // if (this.conditionArea !== '' && Config.ENV === 'Production') {\r\n      if (Config.ENV === 'Production') {\r\n        this.isValid = false;\r\n        this._hideValidate(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  get isValid() {\r\n    return this._isValid;\r\n  }\r\n\r\n  set isValid(value) {\r\n    this._isValid = value;\r\n  }\r\n\r\n  get conditionAreaEl() {\r\n    return this._conditionArea;\r\n  }\r\n\r\n  get conditionArea() {\r\n    return this._conditionArea.value.trim();\r\n  }\r\n\r\n  set conditionArea(value) {\r\n    this._conditionArea.value = value;\r\n  }\r\n\r\n  set placeholder(value) {\r\n    this._conditionArea.placeholder = value;\r\n  }\r\n\r\n  set disabled(value) {\r\n    this.conditionAreaEl.disabled = value;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.conditionAreaEl.disabled;\r\n  }\r\n\r\n  _hideValidate(value) {\r\n    if (value) {\r\n      this.validate.classList.add('invisible');\r\n    } else {\r\n      this.validate.classList.remove('invisible');\r\n    }\r\n  }\r\n\r\n  resetValidate() {\r\n    this.isValid = false;\r\n    this.validate.removeAttribute('data-valid');\r\n  }\r\n\r\n  _onConditionAreaChanged() {\r\n    this.emit('change_condition', this.conditionArea);\r\n  }\r\n\r\n  async _validate() {\r\n    const condition = this.conditionArea;\r\n    const url = `${Config.VALIDATE_COND_URL}${encodeURI(condition)}`;\r\n    if (\r\n      Config.ENV === 'Production'\r\n      // && this.conditionArea !== ''\r\n      && !this.disabled\r\n    ) {\r\n      try {\r\n        const response = await axios.post(url);\r\n        if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n          this.showInvalidSession();\r\n        }\r\n        const converter = new Converter();\r\n        const [data] = converter.convertToJson(response.data);\r\n        this.isValid = data.message === 'OK';\r\n        this._hideValidate(true);\r\n        return data;\r\n      } catch (error) {\r\n        throw Error(\r\n          `${i18next.t('conditionalComponent.txtConditionalComponentErrorMessage')}\\n ${error}`,\r\n        );\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async _onConditionAreaValidated() {\r\n    if (Config.ENV === 'Production') {\r\n      const toast = new ToastMessage();\r\n      const data = await this._validate();\r\n      const option = {\r\n        duration: 3000,\r\n        position: 'bottom-left',\r\n      };\r\n      if (!this.isValid) {\r\n        if (data.message) {\r\n          const message = data.message.split('.  Algunos')[0];\r\n          toast.showMessage({\r\n            type: 'danger',\r\n            title: i18next.t('conditionalComponent.txtConditionalComponentToastTitle'),\r\n            message,\r\n            ...option,\r\n          });\r\n        }\r\n      } else {\r\n        this._onConditionAreaChanged();\r\n\r\n        if (this.conditionArea !== '') {\r\n          toast.showMessage({\r\n            type: 'success',\r\n            title: i18next.t('conditionalComponent.txtConditionalComponentToastTitleSuccess'),\r\n            message: i18next.t(\r\n              'conditionalComponent.txtConditionalComponentToastTitleSuccessMessage',\r\n            ),\r\n            ...option,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport Component from './Component';\r\nimport Converter from '../../utils/convertToJson';\r\n\r\nexport default class SearchComponent extends Component {\r\n  constructor(nameId, panel, label, add = true, responseTime = 800, url, hasLabel = false) {\r\n    super('search', nameId, panel, label);\r\n    this._init(add, responseTime, nameId, url, hasLabel);\r\n  }\r\n\r\n  set placeholder(value) {\r\n    this._selectEl.placeholder = value;\r\n  }\r\n\r\n  get data() {\r\n    return this._dataList;\r\n  }\r\n\r\n  get valueEl() {\r\n    return this._selectEl.value;\r\n  }\r\n\r\n  set valueEl(value) {\r\n    this._selectEl.value = value;\r\n  }\r\n\r\n  get selectEl() {\r\n    return this._selectEl;\r\n  }\r\n\r\n  set selectEl(value) {\r\n    this._selectEl.value = value;\r\n  }\r\n\r\n  set disabled(value) {\r\n    this._selectEl.disabled = value;\r\n  }\r\n\r\n  get selectedItem() {\r\n    const valueToFind = this.valueEl.toLowerCase().trim();\r\n    const findEl = this._dataList.find((value) => value.name.toLowerCase().trim() === valueToFind);\r\n    return findEl;\r\n  }\r\n\r\n  set url(value) {\r\n    this._url = value;\r\n  }\r\n\r\n  get load() {\r\n    return this._load;\r\n  }\r\n\r\n  set load(value) {\r\n    this._load = value;\r\n    this.showData();\r\n  }\r\n\r\n  get alwaysEnableBtn() {\r\n    return this._alwaysEnableBtn;\r\n  }\r\n\r\n  set alwaysEnableBtn(value) {\r\n    this._alwaysEnableBtn = value;\r\n    this.addBtn.disabled = !value;\r\n  }\r\n\r\n  get dataList() {\r\n    return this._dataList;\r\n  }\r\n\r\n  set add(value) {\r\n    this.addBtn.setAttribute('data-visible', value);\r\n  }\r\n\r\n  _init(add, responseTime, nameId, url, hasLabel) {\r\n    this.addBtn = this.wrapper.querySelector('.btn');\r\n    this.addBtn.title += ` ${this.label}`;\r\n    this._selectEl = this.wrapper.querySelector('.input_control');\r\n    this.listItems = this.wrapper.querySelector('.items_list');\r\n    this.listItems.setAttribute('id', `${this.listItems.id}_${nameId}`);\r\n    this._selectEl.setAttribute('list', this.listItems.id);\r\n    this._dataList = [];\r\n    this._url = url;\r\n    this.hasLabel = hasLabel;\r\n    this.valueToFind = this.valueEl.toLowerCase();\r\n    this._responseTime = responseTime;\r\n    this._load = false;\r\n    this._alwaysEnableBtn = false;\r\n    this._searchAction = this.wrapper.querySelector('a.search_action');\r\n\r\n    this.addBtn.addEventListener('click', () => {\r\n      this.addAction();\r\n    });\r\n    if (!add) {\r\n      this.addBtn.setAttribute('data-visible', add);\r\n    } else {\r\n      this.addBtn.disabled = !this._alwaysEnableBtn;\r\n    }\r\n\r\n    this.selectEl.addEventListener('click', () => {\r\n      if (this.valueEl !== '') {\r\n        this.valueEl = '';\r\n        this.alwaysEnableBtn = false;\r\n      }\r\n    });\r\n\r\n    this.panel.parentNode.addEventListener('wheel', () => {\r\n      this._selectEl.blur();\r\n    });\r\n\r\n    this.panel.parentNode.addEventListener('scroll', () => {\r\n      this._selectEl.blur();\r\n    });\r\n\r\n    this._searchAction.addEventListener('click', async () => {\r\n      if (this._responseTime !== 0) {\r\n        this.valueEl = '';\r\n        await this._getResultData();\r\n        this._selectEl.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  addAction() {\r\n    const selected = this.selected();\r\n    this.emit('add_item', selected);\r\n  }\r\n\r\n  selected() {\r\n    const options = Array.from(this.listItems.options);\r\n    const el = options.find((opt) => opt.value.toLowerCase().trim() === this.valueEl.toLowerCase());\r\n    let selected = {};\r\n    if (el !== undefined) {\r\n      selected = { id: el.getAttribute('data-key'), name: el.value };\r\n      if (el.label) {\r\n        selected.label = el.label;\r\n      }\r\n      if (!this._alwaysEnableBtn) this._enableBtn(false);\r\n      this.emit('select_item', selected);\r\n    } else {\r\n      if (!this._alwaysEnableBtn) this._enableBtn(true);\r\n      this.emit('select_item', undefined);\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  _enableBtn(enable) {\r\n    if (this.addBtn !== null) {\r\n      this.addBtn.disabled = enable;\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    try {\r\n      const convert = new Converter();\r\n      const response = await axios.get(this._url);\r\n      if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n        this.showInvalidSession();\r\n      }\r\n\r\n      this._dataList = convert.convertToJson(response.data);\r\n      const options = this.listItems.querySelectorAll('option');\r\n      if (options.length === 0) {\r\n        this._loadDataList(this._dataList, this.hasLabel);\r\n      }\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  }\r\n\r\n  async _getResultData() {\r\n    this._cleanData();\r\n    await this.loadData();\r\n  }\r\n\r\n  async showData() {\r\n    if (this._responseTime === 0 && this.load && this._dataList.length === 0) {\r\n      await this._getResultData();\r\n    }\r\n    let timeout;\r\n    this._selectEl.addEventListener('input', () => {\r\n      clearTimeout(timeout);\r\n      if (this._responseTime !== 0) {\r\n        timeout = setTimeout(async () => {\r\n          const currentValue = this._selectEl.value;\r\n          const exist = this._dataList.findIndex((value) => value.name === currentValue) !== -1;\r\n          if (this.valueToFind !== currentValue && currentValue !== '' && !exist) {\r\n            await this._getResultData();\r\n            this.valueToFind = currentValue;\r\n          }\r\n          clearTimeout(timeout);\r\n        }, this._responseTime);\r\n      }\r\n      this.selected();\r\n    });\r\n  }\r\n\r\n  _cleanData() {\r\n    const options = this.listItems.querySelectorAll('option');\r\n    if (options.length > 0) {\r\n      for (let i = 0; i < options.length; i++) {\r\n        options[i].remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  _loadDataList(dataList, label) {\r\n    dataList.forEach((option) => {\r\n      const dataValue = option.name;\r\n      const dataKey = option.id;\r\n      const optionEl = document.createElement('option');\r\n      optionEl.setAttribute('value', dataValue);\r\n      optionEl.setAttribute('data-key', dataKey);\r\n      optionEl.addEventListener('mouseover', () => {});\r\n      if (label) optionEl.setAttribute('label', option.label);\r\n      this.listItems.appendChild(optionEl);\r\n    });\r\n  }\r\n}\r\n","import Component from './Component';\r\n\r\nexport default class DateComponent extends Component {\r\n  constructor(nameId, panel, label, fullDate = undefined) {\r\n    super('date', nameId, panel, label);\r\n    this._init(fullDate);\r\n  }\r\n\r\n  _init(fullDate) {\r\n    const dateElements = this.wrapper.querySelectorAll('.date input');\r\n    const timeElements = this.wrapper.querySelectorAll('.time input');\r\n    [this._year, this._month, this._day] = dateElements;\r\n    [this._hour, this._minute] = timeElements;\r\n    this._actual = new Date();\r\n\r\n    if (fullDate) {\r\n      const { date, time } = fullDate;\r\n      this.year = date.year;\r\n      this.month = date.month;\r\n      this.day = date.day;\r\n\r\n      this.hour = time.hour;\r\n      this.minutes = time.minutes;\r\n    }\r\n\r\n    dateElements.forEach((element) => {\r\n      element.addEventListener('change', () => {\r\n        this._onValidateDateTime(element);\r\n        if (this._isNotEmpty()) this.emit('change_date', this.date);\r\n      });\r\n      // element.addEventListener('input', () => {\r\n      // });\r\n    });\r\n\r\n    timeElements.forEach((element) => {\r\n      element.addEventListener('change', () => {\r\n        this._onValidateDateTime(element);\r\n        if (this._isNotEmpty()) this.emit('change_date', this.date);\r\n      });\r\n      // element.addEventListener('input', () => {\r\n      //   if (this._isNotEmpty()) this.emit('change_date', this.date);\r\n      // });\r\n    });\r\n  }\r\n\r\n  set date(value) {\r\n    const { date, time } = value;\r\n    this.year = date.year;\r\n    this.month = date.month;\r\n    this.day = date.day;\r\n\r\n    this.hour = time.hour;\r\n    this.minutes = time.minutes;\r\n  }\r\n\r\n  get actualYear() {\r\n    return this._actual.getFullYear();\r\n  }\r\n\r\n  get actualMonth() {\r\n    return this._actual.getMonth() + 1;\r\n  }\r\n\r\n  get actualDay() {\r\n    return this._actual.getDate();\r\n  }\r\n\r\n  get actualHour() {\r\n    return this._actual.getHours();\r\n  }\r\n\r\n  get actualMinutes() {\r\n    return this._actual.getMinutes();\r\n  }\r\n\r\n  get year() {\r\n    const year = this._year.value;\r\n    return year === '' ? -1 : parseInt(year, 10);\r\n  }\r\n\r\n  get month() {\r\n    const month = this._month.value;\r\n    return month === '' ? -1 : parseInt(month, 10);\r\n  }\r\n\r\n  get day() {\r\n    const day = this._day.value;\r\n    return day === '' ? -1 : parseInt(day, 10);\r\n  }\r\n\r\n  get hour() {\r\n    const hour = this._hour.value;\r\n    return hour === '' ? -1 : parseInt(hour, 10);\r\n  }\r\n\r\n  get minutes() {\r\n    const minutes = this._minute.value;\r\n    return minutes === '' ? -1 : parseInt(minutes, 10);\r\n  }\r\n\r\n  get date() {\r\n    if (!this._isNotEmpty()) {\r\n      this._onValidateDateTime(undefined);\r\n    }\r\n    return new Date(\r\n      this.year,\r\n      this.month - 1,\r\n      this.day,\r\n      this.hour,\r\n      this.minutes,\r\n    );\r\n  }\r\n\r\n  set year(value) {\r\n    this._year.value = value;\r\n  }\r\n\r\n  set month(value) {\r\n    this._month.value = this.format(value);\r\n  }\r\n\r\n  set day(value) {\r\n    this._day.value = this.format(value);\r\n  }\r\n\r\n  set hour(value) {\r\n    this._hour.value = this.format(value);\r\n  }\r\n\r\n  set minutes(value) {\r\n    this._minute.value = this.format(value);\r\n  }\r\n\r\n  format(value) {\r\n    if (value !== '') {\r\n      value = parseInt(value, 10);\r\n      if (value < 10) return `0${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  clean() {\r\n    this.year = '';\r\n    this.month = '';\r\n    this.day = '';\r\n    this.hour = '';\r\n    this.minutes = '';\r\n  }\r\n\r\n  _getNumberOfDay(month, year) {\r\n    switch (month) {\r\n      case 1:\r\n      case 3:\r\n      case 5:\r\n      case 7:\r\n      case 8:\r\n      case 10:\r\n      case 12:\r\n        return 31;\r\n      case 2: {\r\n        if (this._isLeapYear(year)) return 29;\r\n        return 28;\r\n      }\r\n      default:\r\n        return 30;\r\n    }\r\n  }\r\n\r\n  _isLeapYear(year) {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  }\r\n\r\n  _isNotEmpty() {\r\n    return (\r\n      this.year !== -1\r\n      && this.month !== -1\r\n      && this.day !== -1\r\n      && this.hour !== -1\r\n      && this.minutes !== -1\r\n    );\r\n  }\r\n\r\n  _validateYear() {\r\n    if (this.year < this.actualYear) {\r\n      this.year = this.actualYear;\r\n    }\r\n  }\r\n\r\n  _validateMonth() {\r\n    if (\r\n      this.year === this.actualYear\r\n      && (this.month < this.actualMonth || this.month > 12)\r\n    ) {\r\n      this.month = this.actualMonth;\r\n    }\r\n    if (this.month > 12 || this.month < 1) this.month = 1;\r\n    this.month = this.format(this.month);\r\n  }\r\n\r\n  _validateDay() {\r\n    const topDay = this._getNumberOfDay(this.month, this.year);\r\n    const minDay = 1;\r\n    if (\r\n      this.year === this.actualYear\r\n      && this.month === this.actualMonth\r\n      && (this.day < this.actualDay || this.day > topDay)\r\n    ) {\r\n      this.day = this.actualDay;\r\n    }\r\n    if (this.day > topDay) this.day = topDay;\r\n    if (this.day < minDay) this.day = minDay;\r\n    this.day = this.format(this.day);\r\n  }\r\n\r\n  _validateHour() {\r\n    if (\r\n      this.year === this.actualYear\r\n      && this.month === this.actualMonth\r\n      && this.day === this.actualDay\r\n      && (this.hour < this.actualHour || this.hour > 23)\r\n    ) {\r\n      this.hour = this.actualHour;\r\n    }\r\n    this.hour = this.format(this.hour);\r\n  }\r\n\r\n  _validateMinutes() {\r\n    if (\r\n      this.year === this.actualYear\r\n      && this.month === this.actualMonth\r\n      && this.day === this.actualDay\r\n      && this.hour === this.actualHour\r\n      && (this.minutes < this.actualMinutes || this.minutes > 59)\r\n    ) {\r\n      this.minutes = this.actualMinutes;\r\n    }\r\n    this.minutes = this.format(this.minutes);\r\n  }\r\n\r\n  _onValidateDateTime(element) {\r\n    const value = element ? element.value : '';\r\n    if (value !== '') {\r\n      this._validateYear();\r\n      this._validateMonth();\r\n      this._validateDay();\r\n      this._validateHour();\r\n      this._validateMinutes();\r\n    }\r\n  }\r\n}\r\n","import Component from './Component';\r\n\r\nexport default class TabComponent extends Component {\r\n  constructor(nameId, panel, tabs = []) {\r\n    super('tabpanel', nameId, panel);\r\n    this._tabsArray = tabs;\r\n    this._init();\r\n  }\r\n\r\n  get activeTab() {\r\n    return this._wrapperTabs.querySelector('li a.active');\r\n  }\r\n\r\n  get visibleTabBody() {\r\n    return this.panel.querySelector('div.tabpanel_body[data-visible=\"true\"]');\r\n  }\r\n\r\n  set disabledAllTabs(value) {\r\n    this._tabsElements.forEach((tab) => {\r\n      if (value) {\r\n        tab.classList.add('disabled');\r\n      } else {\r\n        tab.classList.remove('disabled');\r\n      }\r\n    });\r\n  }\r\n\r\n  getTab(id) {\r\n    return this.panel.querySelector(`.tabpanel_body[data-tab=${id}]`);\r\n  }\r\n\r\n  _init() {\r\n    this._wrapperTabs = this.wrapper.querySelector('header.tabpanel_header ul');\r\n    this._buildTabs();\r\n    this._tabsElements = this._wrapperTabs.querySelectorAll('li a');\r\n    this._initEvents();\r\n  }\r\n\r\n  _buildTabs() {\r\n    if (this._wrapperTabs && this._tabsArray.length > 0) {\r\n      for (let index = 0; index < this._tabsArray.length; index++) {\r\n        const value = this._tabsArray[index];\r\n        const tab = document.createElement('a');\r\n        tab.setAttribute('href', '#');\r\n        tab.setAttribute('data-target', value.targetId);\r\n        tab.innerText = value.title;\r\n        if (index === 0) tab.classList.add('active');\r\n        const tabBody = this.tabBodyById(tab);\r\n        this._toggleVisible(tabBody, index === 0);\r\n        const li = document.createElement('li');\r\n        this._wrapperTabs.append(li);\r\n        li.append(tab);\r\n      }\r\n    }\r\n  }\r\n\r\n  _initEvents() {\r\n    this._tabsElements.forEach((tab) => {\r\n      tab.addEventListener('click', () => {\r\n        this._onActiveTab(tab);\r\n      });\r\n    });\r\n  }\r\n\r\n  _isDisabled(tab) {\r\n    return tab.classList.contains('disabled');\r\n  }\r\n\r\n  tabBodyById(tab) {\r\n    const id = tab.getAttribute('data-target');\r\n    const tabBody = this.panel.querySelector(`#body_${id}`);\r\n    return tabBody;\r\n  }\r\n\r\n  _onActiveTab(tab) {\r\n    if (!this._isDisabled(tab)) {\r\n      this.activeTab.classList.toggle('active');\r\n      tab.classList.toggle('active');\r\n      const tabBody = this.tabBodyById(tab);\r\n      this._toggleVisible(this.visibleTabBody, false);\r\n      this._toggleVisible(tabBody, true);\r\n    }\r\n  }\r\n\r\n  _toggleVisible(tabBody, value) {\r\n    tabBody.setAttribute('data-visible', value);\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport Component from './Component';\r\nimport Converter from '../../utils/convertToJson';\r\n\r\nexport default class DropdownListComponent extends Component {\r\n  constructor(\r\n    nameId,\r\n    panel,\r\n    label,\r\n    add = false,\r\n    url = '',\r\n    baseUrl = '',\r\n    hasLabel = false,\r\n    canReload = false,\r\n    placeholder = '',\r\n  ) {\r\n    super('dropdown', nameId, panel, label);\r\n    this._init(add, url, baseUrl, hasLabel, canReload, placeholder);\r\n  }\r\n\r\n  get valueEl() {\r\n    return this._inputSearch.value;\r\n  }\r\n\r\n  get selectedItem() {\r\n    return this._selectedItem;\r\n  }\r\n\r\n  get disabled() {\r\n    return this._inputSearch.disabled;\r\n  }\r\n\r\n  set valueEl(value) {\r\n    this._inputSearch.value = value;\r\n  }\r\n\r\n  set local(value) {\r\n    this._isLocal = value;\r\n  }\r\n\r\n  set selectedItem(value) {\r\n    this._selectedItem = value;\r\n    this.valueEl = value ? value.name : '';\r\n    this._inputSearch.setAttribute('title', value ? value.name : '');\r\n    const condition = value === undefined;\r\n    this._toggleClearInput(condition);\r\n  }\r\n\r\n  set placeholder(value) {\r\n    this._inputSearch.placeholder = value;\r\n  }\r\n\r\n  set disabled(value) {\r\n    this._inputSearch.disabled = value;\r\n  }\r\n\r\n  get url() {\r\n    return this._url;\r\n  }\r\n\r\n  set url(value) {\r\n    this._url = value;\r\n    this.reloadData(this._url);\r\n  }\r\n\r\n  get baseUrl() {\r\n    return this._baseUrl;\r\n  }\r\n\r\n  set data(value) {\r\n    this._appData = value;\r\n    this._cleanList();\r\n    this._fillList(this._appData);\r\n  }\r\n\r\n  get data() {\r\n    return this._appData;\r\n  }\r\n\r\n  _init(add, url, baseUrl, hasLabel, canReload, placeholder) {\r\n    this._inputSearch = this.wrapper.querySelector('.dropdown-list__input-control');\r\n    this._caretDown = this.wrapper.querySelector('.dropdown-list__input-action');\r\n    this._clearInput = this.wrapper.querySelector('.dropdown-list__input-empty-action');\r\n    this._itemList = this.wrapper.querySelector('.datalist');\r\n    this._addButton = this.wrapper.querySelector('button.btn');\r\n    this._taskTitleInput = this.wrapper.parentNode.querySelector('#task_title_input');\r\n    this._url = url;\r\n    this._baseUrl = baseUrl;\r\n    this._hasLabel = hasLabel;\r\n    this._canReload = canReload;\r\n    this._add = add;\r\n    this._selectedItem = undefined;\r\n    this._hasPreviousFocus = false;\r\n    this._isLoad = false;\r\n    this._isLocal = !url;\r\n    this._appData = [];\r\n    this._actionReload = false;\r\n    this.placeholder = placeholder;\r\n    this._eventsHandlers();\r\n    this._toggleVisibleButton(add);\r\n  }\r\n\r\n  _eventsHandlers() {\r\n    this._caretDown.addEventListener('click', () => this._onDropDown());\r\n    this._caretDown.addEventListener('blur', () => this._onBlurCaretDown());\r\n    this._inputSearch.addEventListener('click', () => this._onFousInputSearch());\r\n    this._inputSearch.addEventListener('blur', () => this._onBlurInputSearch());\r\n    this._inputSearch.addEventListener('input', () => this._onFilterInputSearch());\r\n    this._clearInput.addEventListener('click', () => this.onClearInput());\r\n    this._addButton.addEventListener('click', () => this.emit('add_item'));\r\n  }\r\n\r\n  _toggleVisibleButton(value) {\r\n    this._addButton.setAttribute('data-visible', value);\r\n  }\r\n\r\n  toggleDisabledButton(value) {\r\n    this._addButton.disabled = value;\r\n  }\r\n\r\n  selectFirst() {\r\n    if (this.data.length > 0) {\r\n      const [first] = this.data;\r\n      this.selectedItem = first;\r\n    }\r\n  }\r\n\r\n  // fecth data from the URL\r\n  async _getData(url) {\r\n    if (!this._isLocal) {\r\n      this._appData = [];\r\n      try {\r\n        const response = await axios.get(url);\r\n        if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n          this.showInvalidSession();\r\n        }\r\n        const converter = new Converter();\r\n        const data = converter.convertToJson(response.data);\r\n        data.forEach((element) => {\r\n          const {\r\n            id, name, label, type,\r\n          } = element;\r\n          const value = label\r\n            ? {\r\n              id,\r\n              name,\r\n              label,\r\n              type,\r\n            }\r\n            : { id, name };\r\n          this._appData.push(value);\r\n        });\r\n      } catch (error) {\r\n        throw new Error(\r\n          `${i18next.t('dropDownListComponent.txtDropDownListComponentErrorMessage')} \\n`,\r\n          error,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // clean all, reload data and fill the list items\r\n  async reloadData(url = this._url) {\r\n    await this._getData(url);\r\n    this._cleanList();\r\n    this._fillList(this._appData);\r\n  }\r\n\r\n  // clean the list remove all items\r\n  _cleanList() {\r\n    while (this._itemList.firstChild) {\r\n      this._itemList.removeChild(this._itemList.firstChild);\r\n    }\r\n  }\r\n\r\n  // fill the list inserting all items\r\n  _fillList(data) {\r\n    // hotfix just to render 100 itmes\r\n    const visibleData = data.length > 10 ? data.slice(0, 100) : data;\r\n    visibleData.forEach((value) => {\r\n      const item = document.createElement('li');\r\n      const title = document.createElement('span');\r\n      title.innerText = value.name;\r\n      title.classList.add('datalist__title');\r\n      item.append(title);\r\n      item.setAttribute('data-key', value.id);\r\n      item.setAttribute('title', value.name);\r\n      item.classList.add('datalist__item');\r\n      if (value.label) {\r\n        const span = document.createElement('span');\r\n        span.classList.add('datalist__description');\r\n        span.innerText = value.label;\r\n        span.setAttribute('title', value.label);\r\n        item.appendChild(span);\r\n      }\r\n      if (value.id === -1 && this._canReload) {\r\n        const reloadBtn = document.createElement('a');\r\n        reloadBtn.setAttribute('href', '#');\r\n        reloadBtn.classList.add('datalist__reload-button');\r\n        reloadBtn.title = 'Reload Data';\r\n        reloadBtn.addEventListener('mousedown', () => this._onReloadButton());\r\n        item.append(reloadBtn);\r\n      }\r\n      item.addEventListener('mousedown', () => this._onSelect(item));\r\n      this._itemList.appendChild(item);\r\n    });\r\n  }\r\n\r\n  // setting the data-empty attribute of the elements\r\n  _toggleClearInput(value) {\r\n    this._clearInput.setAttribute('data-empty', value);\r\n    this._inputSearch.setAttribute('data-empty', value);\r\n  }\r\n\r\n  // setting the visualization of the list\r\n  _toggleList(value) {\r\n    this._itemList.setAttribute('data-visible', value);\r\n    this._caretDown.setAttribute('data-down', value);\r\n  }\r\n\r\n  // Get the item by ID\r\n  getItemById(id) {\r\n    return this._appData.find((value) => {\r\n      return parseInt(value.id, 10) === parseInt(id, 10);\r\n    });\r\n  }\r\n\r\n  // Get th item by NAME\r\n  getItemByName(name) {\r\n    return this._appData.find((value) => {\r\n      return name.toUpperCase().trim() === value.name;\r\n    });\r\n  }\r\n\r\n  _onReloadButton() {\r\n    this.reloadData(this._url);\r\n    this._actionReload = true;\r\n  }\r\n\r\n  // Event handler when an item is selected\r\n  _onSelect(item) {\r\n    const id = parseInt(item.getAttribute('data-key'), 10);\r\n    const data = this.getItemById(id);\r\n    if (data) {\r\n      this._inputSearch.value = data.name;\r\n      this._inputSearch.setAttribute('title', data.name);\r\n      this._selectedItem = data;\r\n      this._toggleClearInput(false);\r\n    }\r\n    if (id === -1) {\r\n      this.onClearInput();\r\n    }\r\n    this.emit('select_item', this._selectedItem);\r\n  }\r\n\r\n  // Event handler when the list is displayed\r\n  _onDropDown() {\r\n    if (!this.disabled) {\r\n      this.reloadData(this._url);\r\n      this._isLoad = true;\r\n      if (this._isLocal && !this._isLoad) {\r\n        this._cleanList();\r\n        const data = this._appData.length === 0\r\n          ? [\r\n            {\r\n              id: -1,\r\n              name: i18next.t('dropDownListComponent.txtDropDownListComponentNotFoundName'),\r\n              label: i18next.t('dropDownListComponent.txtDropDownListComponentNotFoundLabel'),\r\n            },\r\n          ]\r\n          : this._appData;\r\n        this._fillList(data);\r\n      }\r\n      const value = JSON.parse(this._itemList.getAttribute('data-visible'));\r\n      this._toggleList(!value);\r\n    }\r\n  }\r\n\r\n  _calculateDatalistTopRender() {\r\n    const hInput = this._inputSearch.clientHeight;\r\n    const posYInput = parseInt(this._inputSearch.getBoundingClientRect().y, 10)\r\n      + parseInt(this._inputSearch.scrollTop, 10);\r\n    const hWindow = window.innerHeight + parseInt(this._inputSearch.scrollTop, 10);\r\n    const totalHeight = hInput + posYInput + 320;\r\n\r\n    if (hWindow < totalHeight) {\r\n      this._itemList.classList.add('datalist--top');\r\n      const hList = this._itemList.clientHeight !== 0 ? this._itemList.clientHeight : 320;\r\n      const renderY = (hList + 58) * -1;\r\n      document.documentElement.style.setProperty('--coordY', `${renderY}px`);\r\n    } else {\r\n      document.documentElement.classList.remove('datalist--top');\r\n    }\r\n  }\r\n\r\n  // Event handler when the CARET_DOWN button loose focus\r\n  _onBlurCaretDown() {\r\n    const value = JSON.parse(this._itemList.getAttribute('data-visible'));\r\n    if (value) this._toggleList(false);\r\n  }\r\n\r\n  // Event handler when th INPUT_SEARCH get focus\r\n  _onFousInputSearch() {\r\n    this._inputSearch.value = '';\r\n    if (this._hasPreviousFocus) {\r\n      this._selectedItem = undefined;\r\n      this._hasPreviousFocus = false;\r\n      this._toggleClearInput(true);\r\n    }\r\n    if (this._selectedItem && !this._hasPreviousFocus) {\r\n      this._cleanList();\r\n      this._fillList(this._appData);\r\n      this._hasPreviousFocus = true;\r\n    }\r\n    if (!this._selectedItem) this.toggleDisabledButton(true);\r\n    this._onDropDown();\r\n  }\r\n\r\n  // Event handler when the INPUT_SEARCH loose focus\r\n  _onBlurInputSearch() {\r\n    if (this._selectedItem) {\r\n      this._inputSearch.value = this._selectedItem.name;\r\n    } else if (!this._selectedItem && !this._add && !this._actionReload) {\r\n      this._inputSearch.value = '';\r\n    }\r\n    this._toggleList(false);\r\n    this._hasPreviousFocus = false;\r\n    if (!this._selectedItem && !this._actionReload) {\r\n      this._cleanList();\r\n      this._fillList(this._appData);\r\n      if (this.valueEl === '' && this._add) {\r\n        this._toggleClearInput(true);\r\n        this.toggleDisabledButton(true);\r\n      }\r\n    }\r\n    if (this._actionReload) {\r\n      this._inputSearch.focus();\r\n      this._actionReload = false;\r\n      this._onDropDown();\r\n    }\r\n  }\r\n\r\n  _applyFilter(value, data) {\r\n    return data.filter((item) => {\r\n      const { name, label } = item;\r\n      const find = value.toUpperCase().trim();\r\n      if (label) {\r\n        return name.toUpperCase().includes(find) || label.toUpperCase().includes(find);\r\n      }\r\n      return name.toUpperCase().includes(find);\r\n    });\r\n  }\r\n\r\n  // Event handler when typed into INPUT_SEARCH\r\n  _onFilterInputSearch() {\r\n    const { value } = this._inputSearch;\r\n    this._selectedItem = undefined;\r\n    this._cleanList();\r\n    const data = this._applyFilter(value, this._appData);\r\n    if (data.length === 0) {\r\n      data.push({\r\n        id: -1,\r\n        name: i18next.t('dropDownListComponent.txtDropDownListComponentNotFoundName'),\r\n        label: i18next.t('dropDownListComponent.txtDropDownListComponentNotFoundLabel'),\r\n      });\r\n    }\r\n    this._fillList(data);\r\n\r\n    const visible = JSON.parse(this._itemList.getAttribute('data-visible'));\r\n    if (!visible) this._toggleList(true);\r\n    this._selectedItem = this.getItemByName(value);\r\n    this.emit('select_item', this._selectedItem);\r\n  }\r\n\r\n  // Event handler when clean value into INPUT_SEARCH\r\n  onClearInput() {\r\n    this._toggleClearInput(true);\r\n    this._selectedItem = undefined;\r\n    this._inputSearch.value = '';\r\n    this._hasPreviousFocus = false;\r\n    this._cleanList();\r\n    this._fillList(this._appData);\r\n    this.toggleDisabledButton(true);\r\n    this.emit('clear_item');\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport Config from 'config';\r\nimport ExpanderComponent from '../components/ExpanderComponent';\r\nimport ListComponent from '../components/ListComponent';\r\nimport ConditionComponent from '../components/ConditionComponent';\r\nimport SearchComponent from '../components/SearchComponent';\r\nimport DateComponent from '../components/DateComponent';\r\nimport ToastMessage from '../components/ToastMessage';\r\nimport TabComponent from '../components/TabComponent';\r\nimport DropdownListComponent from '../components/DropdownListComponent';\r\n\r\nexport default class TemplatePanel extends EventEmitter {\r\n  constructor(editor, id) {\r\n    super();\r\n    this._editor = editor;\r\n    this._panel = document.querySelector(`#${id}_panel`);\r\n    if (!this.toastMessage) this.toastMessage = new ToastMessage();\r\n    if (this._panel === null) {\r\n      this._panel = document.createDocumentFragment();\r\n    } else {\r\n      this._panel.setAttribute('data-visible', false);\r\n      this._documentationInput = this._panel.querySelector(\r\n        `#${id}_documentation_input`,\r\n      );\r\n      this._resizeDocumentationHeight();\r\n      this._setTimeoutOnPropertyChanged(\r\n        undefined,\r\n        () => this._onDocumentationInputChanged(),\r\n        this._documentationInput,\r\n        'input',\r\n        100,\r\n      );\r\n    }\r\n  }\r\n\r\n  _resizeDocumentationHeight() {\r\n    if (Config.ENV === 'Offline') {\r\n      this._documentationInput.style.maxHeight = '20em';\r\n      this._documentationInput.style.height = '15em';\r\n    }\r\n  }\r\n\r\n  get documentationInput() {\r\n    if (this._documentationInput) {\r\n      return this._documentationInput.value;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get element() {\r\n    return this._editor.elementSelected || this._editor.workflow;\r\n  }\r\n\r\n  get panel() {\r\n    return this._panel;\r\n  }\r\n\r\n  get editor() {\r\n    return this._editor;\r\n  }\r\n\r\n  set panel(panel) {\r\n    this._panel = panel;\r\n  }\r\n\r\n  set documentationInput(newValue) {\r\n    if (this._documentationInput !== undefined) {\r\n      this._documentationInput.value = newValue;\r\n    }\r\n  }\r\n\r\n  get isVisible() {\r\n    const dataVisible = JSON.parse(this.panel.getAttribute('data-visible'));\r\n    return dataVisible === true;\r\n  }\r\n\r\n  _elementVisibility(element) {\r\n    const visibility = element.getAttribute('data-visible');\r\n    return JSON.parse(visibility);\r\n  }\r\n\r\n  _changeVisibility(el, value) {\r\n    el.setAttribute('data-visible', value);\r\n  }\r\n\r\n  hide() {\r\n    this._changeVisibility(this._panel, false);\r\n  }\r\n\r\n  clean(wrapperId) {\r\n    const wrapper = this.panel.querySelector(`#wrapper_${wrapperId}`);\r\n    if (wrapper) {\r\n      wrapper.remove();\r\n    }\r\n  }\r\n\r\n  _includeTemplate(templateId) {\r\n    const template = document.getElementById(`${templateId}_template`);\r\n    const container = document.importNode(template.content, true);\r\n    // this.clean(templateId);\r\n    this._panel.appendChild(container);\r\n    return container;\r\n  }\r\n\r\n  _onDocumentationInputChanged() {\r\n    if (this.element) {\r\n      if (this.element.documentation) {\r\n        const actual = this.element.documentation;\r\n        if (actual !== this.documentationInput) {\r\n          this.element.documentation = { text: this.documentationInput };\r\n        }\r\n      } else {\r\n        // console.log('CREATE new documentation');\r\n        const id = this.editor.idIndex++;\r\n        this.element.documentation = { id, text: this.documentationInput };\r\n      }\r\n    }\r\n  }\r\n\r\n  _setTimeoutOnPropertyChanged(\r\n    timeout = undefined,\r\n    executeFn,\r\n    el,\r\n    evt,\r\n    waitTime = 100,\r\n  ) {\r\n    el.addEventListener(evt, () => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        executeFn();\r\n        clearTimeout(timeout);\r\n      }, waitTime);\r\n    });\r\n  }\r\n\r\n  _includeComponent(type, wrap, container, position, options) {\r\n    this._includeTemplate(type);\r\n    wrap = this.panel.querySelector(`#wrapper_${type}`);\r\n    let component;\r\n    switch (position) {\r\n      case 'afterend':\r\n      case 'beforebegin': {\r\n        container.insertAdjacentElement(position, wrap);\r\n        break;\r\n      }\r\n      default: {\r\n        container.appendChild(wrap);\r\n        break;\r\n      }\r\n    }\r\n    const { nameId, label } = options;\r\n    switch (type) {\r\n      case 'expander': {\r\n        const { expandId } = options;\r\n        component = new ExpanderComponent(nameId, this.panel, expandId, label);\r\n        const expandZone = this.panel.querySelector(`#${expandId}`);\r\n        wrap.insertAdjacentElement('afterend', expandZone);\r\n        break;\r\n      }\r\n      case 'search': {\r\n        const {\r\n          add, responseTime, url, hasLabel,\r\n        } = options;\r\n        component = new SearchComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          add,\r\n          responseTime,\r\n          url,\r\n          hasLabel,\r\n        );\r\n        break;\r\n      }\r\n      case 'list': {\r\n        const { arrayList, add } = options;\r\n        component = new ListComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          arrayList,\r\n          add,\r\n        );\r\n        break;\r\n      }\r\n      case 'date': {\r\n        component = new DateComponent(nameId, this.panel, label);\r\n        break;\r\n      }\r\n      case 'tabpanel': {\r\n        const { tabs } = options;\r\n        component = new TabComponent(nameId, this.panel, tabs);\r\n        break;\r\n      }\r\n      case 'dropdown': {\r\n        const {\r\n          add, url, hasLabel, canReload, baseUrl,\r\n        } = options;\r\n        component = new DropdownListComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          add,\r\n          url,\r\n          baseUrl,\r\n          hasLabel,\r\n          canReload,\r\n        );\r\n        break;\r\n      }\r\n      default: {\r\n        component = new ConditionComponent(nameId, this.panel, label);\r\n        break;\r\n      }\r\n    }\r\n    return component;\r\n  }\r\n}\r\n","import i18next from 'i18next';\r\nimport Config from 'config';\r\n\r\nexport const OPTIONS_TOAST = {\r\n  type: 'info',\r\n  title: 'Information',\r\n  duration: 3000,\r\n  position: 'bottom-left',\r\n};\r\n\r\nexport const PARAMETER_TYPE = {\r\n  S: i18next.t('configCmp.txtConfigCmpParameterTypeString'),\r\n  N: i18next.t('configCmp.txtConfigCmpParameterTypeNumber'),\r\n  D: i18next.t('configCmp.txtConfigCmpParameterTypeDate'),\r\n};\r\n\r\nexport const TASK_PANEL = {\r\n  ROLE_SEARCH: {\r\n    nameId: 'task_role',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelRoleSearch'),\r\n    add: true,\r\n    url: Config.ROLES_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  TASK_NAME: {\r\n    nameId: 'task_name',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskName'),\r\n    add: true,\r\n    url: Config.TASK_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  TASK_CONDITION: {\r\n    nameId: 'task_skip_cond',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskCondition'),\r\n  },\r\n  GROUP: {\r\n    nameId: 'task_group',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupLabel'),\r\n    expandId: 'expand_group_zone',\r\n  },\r\n  GROUP_SEARCH: {\r\n    nameId: 'task_participants',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupSearchLabel'),\r\n    add: true,\r\n    url: Config.PARTICIPANTS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  GROUP_LIST: {\r\n    nameId: 'task_participants',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupCondditionLabel'),\r\n    add: true,\r\n  },\r\n  GROUP_CONDITION: {\r\n    nameId: 'task_participants_cond',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupScheduleLabel'),\r\n  },\r\n  SCHEDULE: {\r\n    nameId: 'task_schedule',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupScheduleSearchLabel'),\r\n    expandId: 'expand_schedule_zone',\r\n  },\r\n  SCHEDULE_SEARCH: {\r\n    nameId: 'task_schedule',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupScheduleSearchLabel'),\r\n    add: false,\r\n    url: Config.TASK_SCHEDULE,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  SCHEDULE_SUBPROCESS: {\r\n    nameId: 'task_schedule_subprocess',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupScheduleSubprocessLabel'),\r\n    add: false,\r\n    url: Config.SUBPROCESS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  SCHEDULE_TASK: {\r\n    nameId: 'task_schedule_tasks',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskGroupScheduleTaskLabel'),\r\n    add: false,\r\n    url: Config.SUBPROCESS_TASKS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  STATES: {\r\n    nameId: 'task_states',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskStatesLabel'),\r\n    expandId: 'expand_states_zone',\r\n  },\r\n  STATES_EVENT: {\r\n    nameId: 'task_events_states',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskStatesEventLabel'),\r\n    add: false,\r\n    url: Config.STATES_EVENTS_URL,\r\n    hasLabel: false,\r\n  },\r\n  STATES_STATUS: {\r\n    nameId: 'task_status_states',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskStatesStatusLabel'),\r\n    add: false,\r\n    url: Config.STATES_STATUS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  STATES_LIST: {\r\n    nameId: 'task_events_list_states',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskStatesListLabel'),\r\n    add: true,\r\n  },\r\n  STATES_CONDITION: {\r\n    nameId: 'task_condition_states',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskStatesConditionLabel'),\r\n  },\r\n  EVENTS: {\r\n    nameId: 'task_events',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsLabel'),\r\n    expandId: 'expand_events_zone',\r\n  },\r\n  EVENTS_SEARCH: {\r\n    nameId: 'task_event_select_events',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsSearchLabel'),\r\n    add: false,\r\n    url: Config.STATES_EVENTS_URL,\r\n    hasLabel: false,\r\n  },\r\n  EVENTS_BUSCLAS: {\r\n    nameId: 'task_bus_class_events',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsBusClasLabel'),\r\n    add: false,\r\n    url: Config.TASK_BUSCLAS_EVENTS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  EVENTS_LIST: {\r\n    nameId: 'task_events_list',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsListLabel'),\r\n    add: true,\r\n  },\r\n  EVENTS_CONDITION: {\r\n    nameId: 'task_events_cond',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsConditionLabel'),\r\n  },\r\n  EVENTS_BINDINGS: {\r\n    nameId: 'task_events_bindings',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsBindingLabel'),\r\n    add: false,\r\n  },\r\n  EVENTS_ATTR: {\r\n    nameId: 'task_attribute_events',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelTaskEventsAttributeLabel'),\r\n    add: true,\r\n    url: Config.TASK_BINDINGS_ATTR_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  FORMS: {\r\n    nameId: 'task_forms',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelFormsLabel'),\r\n    expandId: 'expand_forms_zone',\r\n  },\r\n  FORMS_STEPS: {\r\n    nameId: 'task_step_forms_list',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelFormsStepsLabel'),\r\n    add: true,\r\n  },\r\n  FORMS_SEARCH: {\r\n    nameId: 'task_find_forms',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelFormsSearchLabel'),\r\n    add: true,\r\n    url: Config.TASK_ENT_FORMS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  FORMS_LIST: {\r\n    nameId: 'task_forms_list',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelFormsListLabel'),\r\n    add: true,\r\n  },\r\n  FORMS_CONDITION: {\r\n    nameId: 'task_forms_cond',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelFormsConditionLabel'),\r\n  },\r\n  MULTIINSTANCE_LOOPTYPE: {\r\n    nameId: 'task_multiinstance_looptype',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMultiInstanceLoopLabel'),\r\n    add: true,\r\n    url: Config.TASK_MULTIINSTANCE_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  INPUT_MSG_REF: {\r\n    nameId: 'task_input_msg_ref',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefLabel'),\r\n    expandId: 'expand_input_message_ref_zone',\r\n  },\r\n  INPUT_MSG_REF_ATTR_SEARCH: {\r\n    nameId: 'task_input_msg_ref_attr_input',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefAttributeLabel'),\r\n    add: true,\r\n    url: Config.TASK_INPUT_MSG_REF,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  INPUT_MSG_REF_ATTRS_LIST: {\r\n    nameId: 'task_input_msg_ref_attrs_list',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefAttributeListLabel'),\r\n    add: true,\r\n  },\r\n  OUTPUT_MSG_REF_WS_SEARCH: {\r\n    nameId: 'task_output_msg_ref_ws_input',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefWSSearchLabel'),\r\n    add: false,\r\n    url: Config.TASK_OUTPUT_WS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  OUTPUT_MSG_REF_WS_LIST: {\r\n    nameId: 'task_output_msg_ref_ws_list',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefWSSearchAddLabel'),\r\n    add: true,\r\n  },\r\n  OUTPUT_MSG_REF_BINDING_LIST: {\r\n    nameId: 'task_output_msg_ref_binding_list',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefWSBindingListLabel'),\r\n    add: false,\r\n  },\r\n  OUTPUT_MSG_REF: {\r\n    nameId: 'task_output_msg_ref',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefOutputMessageLabel'),\r\n    expandId: 'expand_output_message_ref_zone',\r\n  },\r\n  OUTPUT_MSG_REF_ATTR_SEARCH: {\r\n    nameId: 'task_output_msg_ref_attr_param',\r\n    label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefAttributeSearchLabel'),\r\n    add: false,\r\n    url: Config.WORKFLOW_ATTRS_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n};\r\n\r\nexport const WORKFLOW_PANEL = {\r\n  EVENTS: {\r\n    nameId: 'workflow_events',\r\n    label: i18next.t('configCmp.txtConfigCmpWorkflowPanelEventsLabel'),\r\n    add: false,\r\n    url: Config.WORKFLOW_EVENTS_URL,\r\n    hasLabel: false,\r\n  },\r\n  BUSCLAS: {\r\n    nameId: 'workflow_actions',\r\n    label: i18next.t('configCmp.txtConfigCmpWorkflowPanelBusClassLabel'),\r\n    add: false,\r\n    url: Config.WORKFLOW_ACTIONS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  BINDING_ATTR: {\r\n    nameId: 'workflow_binding_attr',\r\n    label: i18next.t('configCmp.txtConfigCmpWorkflowPanelBindingAttributeLabel'),\r\n    add: true,\r\n    url: Config.WORKFLOW_ATTRS_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  EVENTS_LIST: {\r\n    nameId: 'workflow_events',\r\n    label: i18next.t('configCmp.txtConfigCmpWorkflowPanelEventsListLabel'),\r\n    add: true,\r\n  },\r\n  BINDINGS_LIST: {\r\n    nameId: 'workflow_bindings',\r\n    label: i18next.t('configCmp.txtConfigCmpWorkflowPanelBindingListParamsLabel'),\r\n    add: false,\r\n  },\r\n  CONDITION: {\r\n    nameId: 'workflow_condition',\r\n    label: i18next.t('configCmp.txtConfigCmpWorkflowPanelConditionLabel'),\r\n  },\r\n};\r\n\r\nexport const CONNECTOR_PANEL = {\r\n  EXPRESSION: {\r\n    nameId: 'connector_exp_condition',\r\n    label: i18next.t('configCmp.txtConfigCmpConnectorPanelExpressionLabel'),\r\n  },\r\n};\r\n\r\nexport const SUBPROCESS_PANEL = {\r\n  SUBPROCESS_NAME_SEARCH: {\r\n    nameId: 'subprocess_name_input',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelNameSearchLabel'),\r\n    add: true,\r\n    url: Config.SUBP_NAME_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  STANDARD_LOOP_CONDITION: {\r\n    nameId: 'subp_standard_loop_cond',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelLoopConditionLabel'),\r\n  },\r\n  REUSABLE: {\r\n    nameId: 'subp_reusable_type',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelReusableLabel'),\r\n    expandId: 'expand_reusable_zone',\r\n  },\r\n  REUSABLE_ENTITY_SEARCH: {\r\n    nameId: 'subp_reusable_entity',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelReusableEntitySearchLabel'),\r\n    add: false,\r\n    url: Config.SUBP_REUSABLE_ENT_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  REUSABLE_FORMS_SEARCH: {\r\n    nameId: 'subp_reusable_form',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelReusableFormsSearchLabel'),\r\n    add: false,\r\n    url: Config.SUBP_REUSABLE_ENT_FORMS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  REUSABLE_FORMS_LIST: {\r\n    nameId: 'subp_reusable_forms_list',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelReusableFormsListLabel'),\r\n    add: true,\r\n  },\r\n  MULTIINSTANCE_LOOPTYPE_SEARCH: {\r\n    nameId: 'subp_multiinstance_looptype',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessPanelMultiInstanceLoopTypeLabel'),\r\n    add: true,\r\n    responseTime: 1000,\r\n    url: Config.SUBP_MULTIINSTANCE_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n};\r\n\r\nexport const TSK_SHOW_CONFIG = {\r\n  NONE: {\r\n    groups: true,\r\n    loopType: true,\r\n    role: true,\r\n    forms: true,\r\n    schedule: true,\r\n    inputMessageRef: false,\r\n    outputMessageRef: false,\r\n    all: true,\r\n  },\r\n  USER: {\r\n    groups: true,\r\n    loopType: true,\r\n    role: true,\r\n    forms: true,\r\n    schedule: true,\r\n    inputMessageRef: true,\r\n    outputMessageRef: true,\r\n    all: true,\r\n  },\r\n  MANUAL: {\r\n    groups: true,\r\n    loopType: true,\r\n    role: true,\r\n    forms: true,\r\n    schedule: true,\r\n    inputMessageRef: false,\r\n    outputMessageRef: false,\r\n    all: true,\r\n  },\r\n  SERVICE: {\r\n    groups: false,\r\n    loopType: false,\r\n    role: false,\r\n    forms: false,\r\n    schedule: true,\r\n    inputMessageRef: true,\r\n    outputMessageRef: true,\r\n    all: false,\r\n  },\r\n  RECEIVE: {\r\n    groups: false,\r\n    loopType: false,\r\n    role: false,\r\n    forms: false,\r\n    schedule: true,\r\n    inputMessageRef: true,\r\n    outputMessageRef: false,\r\n    all: false,\r\n  },\r\n  SEND: {\r\n    groups: false,\r\n    loopType: true,\r\n    role: false,\r\n    forms: false,\r\n    schedule: true,\r\n    inputMessageRef: true,\r\n    outputMessageRef: false,\r\n    all: false,\r\n  },\r\n  SCRIPT: {\r\n    groups: false,\r\n    loopType: true,\r\n    role: false,\r\n    forms: false,\r\n    schedule: true,\r\n    inputMessageRef: false,\r\n    outputMessageRef: false,\r\n    all: false,\r\n  },\r\n};\r\n\r\nexport const EVENT_PANEL = {\r\n  MESSAGE: {\r\n    nameId: 'event_message',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelMessageLabel'),\r\n    expandId: 'expand_message_zone',\r\n  },\r\n  MSG_ATTR_SEARCH: {\r\n    nameId: 'event_message_attrs',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelAttributeSearchLabel'),\r\n    add: true,\r\n    url: Config.EVT_MSG_ATTRS_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  MSG_ATTRS_LIST: {\r\n    nameId: 'event_message_attrs_list',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelAttributeListLabel'),\r\n    add: true,\r\n  },\r\n  MSG_WS_SEARCH: {\r\n    nameId: 'event_message_webservice',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelWSSearchLabel'),\r\n    add: false,\r\n    url: Config.EVT_MSG_WS_URL,\r\n    hasLabel: false,\r\n    canReload: true,\r\n  },\r\n  MSG_WS_LIST: {\r\n    nameId: 'event_message_webservices_list',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelWSListLabel'),\r\n    add: true,\r\n  },\r\n  MSG_BINDINGS_LIST: {\r\n    nameId: 'event_message_bindings_list',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelBindingListLabel'),\r\n    add: false,\r\n  },\r\n  MSG_WS_ATTR_SEARCH: {\r\n    nameId: 'event_message_ws_attribute',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelWSAttributeSearchLabel'),\r\n    add: false,\r\n    url: Config.EVT_MSG_WS_ATTR_URL,\r\n    baseUrl: Config.EVT_MSG_WS_ATTR_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  TIMER: {\r\n    nameId: 'event_timer',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelTimerLabel'),\r\n    expandId: 'expand_timer_zone',\r\n  },\r\n  TIMER_ATTRIBUTE_SEARCH: {\r\n    nameId: 'event_timer_attribute',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelTimerAttributeSearchLabel'),\r\n    add: false,\r\n    url: Config.EVT_TIMER_ATTR_URL,\r\n    hasLabel: true,\r\n    canReload: true,\r\n  },\r\n  TIMER_START_DATE: {\r\n    nameId: 'event_timer_start_date',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelTimerStartDateLabel'),\r\n  },\r\n  TIMER_END_DATE: {\r\n    nameId: 'event_timer_end_date',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventPanelTimerEndDateLabel'),\r\n  },\r\n};\r\n\r\nexport const EVENT_MANAGER = {\r\n  EVENTS_SEARCH: {\r\n    nameId: 'manager_search_events',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerEventSearchLabel'),\r\n    add: false,\r\n    hasLabel: false,\r\n    placeholder: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerEventSearchPlaceholder'),\r\n  },\r\n  BUSCLASS_SEARCH: {\r\n    nameId: 'manager_search_busclass',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerbusClasLabel'),\r\n    add: false,\r\n    hasLabel: false,\r\n    placeholder: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerbusClasPlaceholder'),\r\n  },\r\n  EVENTS_LIST: {\r\n    nameId: 'manager_list_events',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerEventListLabel'),\r\n    add: true,\r\n  },\r\n  BINDINGS_LIST: {\r\n    nameId: 'manager_list_bindings_params',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerBindingListLabel'),\r\n    add: false,\r\n  },\r\n  CONDITION: {\r\n    nameId: 'manager_condition_event',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerConditionLabel'),\r\n    placeholder: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerConditionPlaceholder'),\r\n  },\r\n  BINDING_ATTR_SEARCH: {\r\n    nameId: 'manager_binding_attr_event',\r\n    label: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerBindingAttributeLabel'),\r\n    add: true,\r\n    hasLabel: true,\r\n    canReload: true,\r\n    placeholder: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerBindingAttributePlaceholder'),\r\n  },\r\n  LIST_INTERFACE: {\r\n    header: ['edit', 'delete-all'],\r\n    deleteAction: true,\r\n    deleteActionAll: true,\r\n    editAction: true,\r\n    data: [],\r\n    notShow: [],\r\n    actions: [],\r\n  },\r\n  PARAMS_TYPE: {\r\n    S: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerParameterTypeString'),\r\n    N: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerParameterTypeNumber'),\r\n    D: i18next.t('configCmp.txtConfigCmpSubprocessEventManagerParameterTypeDate'),\r\n  },\r\n};\r\n\r\nexport default {\r\n  OPTIONS_TOAST,\r\n  TASK_PANEL,\r\n  WORKFLOW_PANEL,\r\n  CONNECTOR_PANEL,\r\n  TSK_SHOW_CONFIG,\r\n  PARAMETER_TYPE,\r\n  SUBPROCESS_PANEL,\r\n  EVENT_PANEL,\r\n  EVENT_MANAGER,\r\n};\r\n","import EventEmitter from 'eventemitter3';\r\nimport ExpanderComponent from '../../../components/ExpanderComponent';\r\nimport ListComponent from '../../../components/ListComponent';\r\nimport ConditionComponent from '../../../components/ConditionComponent';\r\nimport SearchComponent from '../../../components/SearchComponent';\r\nimport DateComponent from '../../../components/DateComponent';\r\nimport TabComponent from '../../../components/TabComponent';\r\nimport DropdownListComponent from '../../../components/DropdownListComponent';\r\nimport ToastMessage from '../../../components/ToastMessage';\r\n\r\nexport default class Manager extends EventEmitter {\r\n  constructor(id, type, panel) {\r\n    super();\r\n    this._panel = panel;\r\n    this._id = id;\r\n    this._inputs = [];\r\n    this._include(type, 'manager');\r\n    if (!this.message) {\r\n      this.message = new ToastMessage();\r\n    }\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get panel() {\r\n    return this._panel;\r\n  }\r\n\r\n  get inputs() {\r\n    return this._inputs;\r\n  }\r\n\r\n  set inputs(value) {\r\n    this._inputs = value;\r\n  }\r\n\r\n  _cleanElements() {\r\n    this.inputs.forEach((input) => {\r\n      input.value = '';\r\n    });\r\n  }\r\n\r\n  _getIndex(data, item, nameId = 'id') {\r\n    const index = data.findIndex((value) => {\r\n      return parseInt(item[nameId], 10) === parseInt(value[nameId], 10);\r\n    });\r\n    return index;\r\n  }\r\n\r\n  _include(type, kind) {\r\n    const selector = `${type}_${kind}`;\r\n    const template = document.getElementById(selector);\r\n    const container = document.importNode(template.content, true);\r\n    this.panel.appendChild(container);\r\n  }\r\n\r\n  _changeElementIDs(elements) {\r\n    elements.forEach((element) => {\r\n      element.setAttribute('id', `${this.id}_${element.id}`);\r\n    });\r\n  }\r\n\r\n  _includeComponent(type, container, position, options) {\r\n    this._include(type, 'template');\r\n    const wrap = this.panel.querySelector(`#wrapper_${type}`);\r\n    let component;\r\n    switch (position) {\r\n      case 'afterend':\r\n      case 'beforebegin': {\r\n        container.insertAdjacentElement(position, wrap);\r\n        break;\r\n      }\r\n      default: {\r\n        container.appendChild(wrap);\r\n        break;\r\n      }\r\n    }\r\n    const { nameId, label, placeholder } = options;\r\n    switch (type) {\r\n      case 'expander': {\r\n        const { expandId } = options;\r\n        component = new ExpanderComponent(nameId, this.panel, expandId, label);\r\n        const expandZone = this.panel.querySelector(`#${expandId}`);\r\n        wrap.insertAdjacentElement('afterend', expandZone);\r\n        break;\r\n      }\r\n      case 'search': {\r\n        const {\r\n          add, responseTime, url, hasLabel,\r\n        } = options;\r\n        component = new SearchComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          add,\r\n          responseTime,\r\n          url,\r\n          hasLabel,\r\n        );\r\n        break;\r\n      }\r\n      case 'list': {\r\n        const { arrayList, add } = options;\r\n        component = new ListComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          arrayList,\r\n          add,\r\n        );\r\n        break;\r\n      }\r\n      case 'date': {\r\n        component = new DateComponent(nameId, this.panel, label);\r\n        break;\r\n      }\r\n      case 'tabpanel': {\r\n        const { tabs } = options;\r\n        component = new TabComponent(nameId, this.panel, tabs);\r\n        break;\r\n      }\r\n      case 'dropdown': {\r\n        const {\r\n          add, url, hasLabel, canReload,\r\n        } = options;\r\n        component = new DropdownListComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          add,\r\n          url,\r\n          hasLabel,\r\n          canReload,\r\n          placeholder,\r\n        );\r\n        break;\r\n      }\r\n      default: {\r\n        component = new ConditionComponent(\r\n          nameId,\r\n          this.panel,\r\n          label,\r\n          placeholder,\r\n        );\r\n        break;\r\n      }\r\n    }\r\n    return component;\r\n  }\r\n\r\n  _setTimeoutOnPropertyChanged(\r\n    executeFn,\r\n    el,\r\n    evt,\r\n    waitTime = 1000,\r\n    timeout = undefined,\r\n  ) {\r\n    el.addEventListener(evt, () => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        executeFn();\r\n        clearTimeout(timeout);\r\n      }, waitTime);\r\n    });\r\n  }\r\n\r\n  _getMaxId(data, nameId = 'id') {\r\n    let max = 0;\r\n    data.forEach((value) => {\r\n      max = parseInt(value[nameId], 10) > max ? parseInt(value[nameId], 10) : max;\r\n    });\r\n    return max;\r\n  }\r\n\r\n  emitChange(data) {\r\n    this.emit('change', data);\r\n  }\r\n\r\n  disabledAll(value) {\r\n    this.inputs.forEach((input) => {\r\n      input.disabled = value;\r\n    });\r\n  }\r\n}\r\n","import ToastMessage from '../../components/ToastMessage';\r\n\r\nexport const validateName = (name) => {\r\n  const regex = /^[a-zA-ZñÑáéíóúÁÉÍÓÚäëïöüÄËÏÖÜ0-9_-\\s]+$/gi;\r\n  return regex.test(name);\r\n};\r\n\r\nexport const validateInputValue = (input, property, field = 'Name') => {\r\n  const value = input.value.trim();\r\n  if (!validateName(value === '' ? ' ' : value)) {\r\n    const message = new ToastMessage();\r\n    message.showWrongMessage({\r\n      title: 'Error',\r\n      message: `The <b>\"${property} ${field}\"</b> cannot contain invalid characters`,\r\n    });\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const checkEmptyName = (element, oldValue) => {\r\n  if (element.value === '') {\r\n    element.value = oldValue;\r\n  }\r\n};\r\n\r\nexport const normalizeText = (text, expression = undefined, replace = '') => {\r\n  const regex = expression || /[&/\\\\\"<>]/g;\r\n  return text.replace(regex, replace);\r\n};\r\n\r\nexport const validateApiaName = (name) => {\r\n  const regex = /^[a-zA-Z][a-zA-Z0-9_]+[a-zA-Z0-9]$/gi;\r\n  return regex.test(name);\r\n};\r\n\r\nexport const validatePositiveInteger = (value, minValue = 1) => {\r\n  const number = parseInt(value, 10);\r\n  return !isNaN(number) && number >= minValue;\r\n};\r\n\r\nexport const validateDate = (value) => {\r\n  return !isNaN(Date.parse(value));\r\n};\r\n\r\nexport const validateField = (field) => {\r\n  const { type, value } = field;\r\n  let isValid = true;\r\n  if (value.trim() !== '') {\r\n    switch (type.toUpperCase()) {\r\n      case 'NUMBER': {\r\n        isValid = validatePositiveInteger(value);\r\n        if (!isValid) {\r\n          isValid = true;\r\n          field.value = 0;\r\n        }\r\n        field.value = parseInt(value, 10);\r\n        break;\r\n      }\r\n      case 'DATE': {\r\n        isValid = validateDate(value);\r\n        if (!isValid) {\r\n          isValid = true;\r\n          field.value = Date.now();\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n\r\nexport default {\r\n  validateName,\r\n  validateInputValue,\r\n  checkEmptyName,\r\n  normalizeText,\r\n  validateApiaName,\r\n  validatePositiveInteger,\r\n  validateDate,\r\n};\r\n","import cloneDeep from 'lodash/cloneDeep';\r\nimport Config from 'config';\r\nimport axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport Manager from '../facilis/managers/manager';\r\nimport { OPTIONS_TOAST } from '../ConfigCmp';\r\nimport Converter from '../../../utils/convertToJson';\r\nimport { indexByProperty, mapInOutParameters, visibilityComponent } from '../../../utils/util';\r\nimport { validateApiaName, validateField } from '../facilis/validator';\r\n\r\nexport default class EventManager extends Manager {\r\n  constructor(id, panel, options = {}) {\r\n    super(id, 'event', panel);\r\n    this._initElements(options);\r\n    this._changeElementIDs(this.elementsCtrl);\r\n    this._initEventsElements();\r\n    this.loadEventList = 0;\r\n  }\r\n\r\n  get elementsCtrl() {\r\n    const elements = [\r\n      ...this.inputs,\r\n      this._eventSelect.wrapper,\r\n      this._busClassSelect.wrapper,\r\n      this._eventsList.wrapper,\r\n      this._bindingsList.wrapper,\r\n      this._eventCondition.wrapper,\r\n      this.wrapBindingAttributeType,\r\n    ];\r\n    return elements;\r\n  }\r\n\r\n  get eventSelect() {\r\n    return this._eventSelect.selectedItem;\r\n  }\r\n\r\n  get busClassSelect() {\r\n    return this._busClassSelect.selectedItem;\r\n  }\r\n\r\n  get eventCondition() {\r\n    return this._eventCondition.conditionArea;\r\n  }\r\n\r\n  get bindingType() {\r\n    return this._bindingType.value;\r\n  }\r\n\r\n  get bindingValue() {\r\n    return this._bindingValue.value.trim();\r\n  }\r\n\r\n  get bindingAttributeType() {\r\n    const radios = this.wrapBindingAttributeType;\r\n    return radios.querySelector('input[type=radio]:checked').value;\r\n  }\r\n\r\n  get bindingAttributesTypeAll() {\r\n    return this.wrapBindingAttributeType.querySelectorAll('input[type=radio]');\r\n  }\r\n\r\n  get bindingAttribute() {\r\n    return this._bindingAttribute.selectedItem;\r\n  }\r\n\r\n  set eventSelect(value) {\r\n    this._eventSelect.selectedItem = value;\r\n  }\r\n\r\n  set busClassSelect(value) {\r\n    this._busClassSelect.selectedItem = value;\r\n  }\r\n\r\n  set eventCondition(value) {\r\n    this._eventCondition.conditionArea = value;\r\n  }\r\n\r\n  set bindingType(value) {\r\n    this._bindingType.value = value;\r\n  }\r\n\r\n  set bindingValue(value) {\r\n    this._bindingValue.value = value;\r\n  }\r\n\r\n  set bindingAttributeType(value) {\r\n    const radio = this.wrapBindingAttributeType.querySelector(`#binding_attr_type_${value}`);\r\n    radio.checked = true;\r\n  }\r\n\r\n  set bindingAttribute(value) {\r\n    this._bindingAttribute.selectedItem = value;\r\n  }\r\n\r\n  set eventsList(value) {\r\n    this.loadEventList++;\r\n    const condition = this.panel.id === 'manager_workflow_events';\r\n    // stop unnecessary event list refresh\r\n    if (condition && this.loadEventList === 1) {\r\n      this._eventsList.arrayList.data = cloneDeep(value || []);\r\n      this._eventsList.refreshList();\r\n    } else {\r\n      this._eventsList.arrayList.data = cloneDeep(value || []);\r\n      this._eventsList.refreshList();\r\n    }\r\n  }\r\n\r\n  set bindingsList(value) {\r\n    this._bindingsList.arrayList.data = value;\r\n    this._bindingsList.refreshList();\r\n  }\r\n\r\n  reset() {\r\n    this.eventSelect = undefined;\r\n    this.busClassSelect = undefined;\r\n    this._disableClearAssociatedWithEvent();\r\n    this._eventsList.unSelectAll();\r\n    if (this._eventsList.editStatus) this._eventsList.editStatus = false;\r\n  }\r\n\r\n  _initElements(options) {\r\n    this.EVENT_MANAGER = {\r\n      EVENTS_SEARCH: {\r\n        nameId: 'manager_search_events',\r\n        label: i18next.t('eventManager.txtProDesEventManagerEventSearchLabel'),\r\n        add: false,\r\n        hasLabel: false,\r\n        placeholder: i18next.t('eventManager.txtProDesEventManagerEventSearchPlaceholder'),\r\n      },\r\n      BUSCLASS_SEARCH: {\r\n        nameId: 'manager_search_busclass',\r\n        label: i18next.t('eventManager.txtProDesEventManagerBusClasLabel'),\r\n        add: false,\r\n        hasLabel: false,\r\n        placeholder: i18next.t('eventManager.txtProDesEventManagerBusClasPlaceholder'),\r\n      },\r\n      EVENTS_LIST: {\r\n        nameId: 'manager_list_events',\r\n        label: i18next.t('eventManager.txtProDesEventManagerEventListLabel'),\r\n        add: true,\r\n      },\r\n      BINDINGS_LIST: {\r\n        nameId: 'manager_list_bindings_params',\r\n        label: i18next.t('eventManager.txtProDesEventManagerBindingListLabel'),\r\n        add: false,\r\n      },\r\n      CONDITION: {\r\n        nameId: 'manager_condition_event',\r\n        label: i18next.t('eventManager.txtProDesEventManagerConditionLabel'),\r\n        placeholder: i18next.t('eventManager.txtProDesEventManagerConditionLabel'),\r\n      },\r\n      BINDING_ATTR_SEARCH: {\r\n        nameId: 'manager_binding_attr_event',\r\n        label: i18next.t('eventManager.txtProDesEventManagerBindingAttributeLabel'),\r\n        add: true,\r\n        hasLabel: true,\r\n        canReload: true,\r\n        placeholder: i18next.t('eventManager.txtProDesEventManagerBindingAttributePlaceholder'),\r\n      },\r\n      LIST_INTERFACE: {\r\n        header: [\r\n          i18next.t('eventManager.txtProDesEventManagerListInterfaceHeaderEdit'),\r\n          i18next.t('eventManager.txtProDesEventManagerListInterfaceHeaderDeleteAll'),\r\n        ],\r\n        deleteAction: true,\r\n        deleteActionAll: true,\r\n        editAction: true,\r\n        data: [],\r\n        notShow: [],\r\n        actions: [],\r\n      },\r\n      PARAMS_TYPE: {\r\n        S: i18next.t('eventManager.txtProDesEventManagerParameterTypeString'),\r\n        N: i18next.t('eventManager.txtProDesEventManagerParameterTypeNumber'),\r\n        D: i18next.t('eventManager.txtProDesEventManagerParameterTypeDate'),\r\n      },\r\n    };\r\n    this.OPTIONS_TOAST = {\r\n      type: 'info',\r\n      title: i18next.t('eventManager.txtProDesEventManagerToastTitle'),\r\n      duration: 3000,\r\n      position: 'bottom-left',\r\n    };\r\n\r\n    const { eventsUrl, busClassUrl, attributesUrl } = options;\r\n    this._options = options;\r\n    const {\r\n      EVENTS_LIST,\r\n      BINDINGS_LIST,\r\n      EVENTS_SEARCH,\r\n      BUSCLASS_SEARCH,\r\n      CONDITION,\r\n      BINDING_ATTR_SEARCH,\r\n    } = this.EVENT_MANAGER;\r\n    EVENTS_SEARCH.url = eventsUrl;\r\n    BUSCLASS_SEARCH.url = busClassUrl;\r\n    BINDING_ATTR_SEARCH.url = attributesUrl;\r\n    EVENTS_LIST.arrayList = this._createEventsArrayList();\r\n    BINDINGS_LIST.arrayList = this._createBindingsParamsArrayList();\r\n    this._defaultAttrUrl = Config.DEFAULT_ATTRS_URL;\r\n\r\n    this._bindingType = this._panel.querySelector('#event_binding_type');\r\n    this._bindingValue = this._panel.querySelector('#event_binding_value');\r\n    this.wrapBindingType = this._panel.querySelector('#wrapper_event_binding_type');\r\n    this.wrapBindingAttributeType = this._panel.querySelector('#wrapper_event_binding_attr_type');\r\n    this.wrapBindingValue = this._panel.querySelector('#wrapper_event_binding_value');\r\n\r\n    this._eventSelect = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapBindingType,\r\n      'beforebegin',\r\n      EVENTS_SEARCH,\r\n    );\r\n    this._busClassSelect = this._includeComponent(\r\n      'dropdown',\r\n      this._eventSelect.wrapper,\r\n      'afterend',\r\n      BUSCLASS_SEARCH,\r\n    );\r\n    this._eventsList = this._includeComponent(\r\n      'list',\r\n      this._busClassSelect.wrapper,\r\n      'afterend',\r\n      EVENTS_LIST,\r\n    );\r\n    this._eventCondition = this._includeComponent(\r\n      'condition',\r\n      this._eventsList.wrapper,\r\n      'afterend',\r\n      CONDITION,\r\n    );\r\n    this._bindingsList = this._includeComponent(\r\n      'list',\r\n      this._eventCondition.wrapper,\r\n      'afterend',\r\n      BINDINGS_LIST,\r\n    );\r\n    this._bindingAttribute = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapBindingAttributeType,\r\n      'afterend',\r\n      BINDING_ATTR_SEARCH,\r\n    );\r\n    this._bindingAttribute.toggleDisabledButton(true);\r\n    this.eventSelected = null;\r\n    this.bindingSelected = null;\r\n    this.inputs = [this._bindingType, this._bindingValue];\r\n    this.reset();\r\n  }\r\n\r\n  _createEventsArrayList() {\r\n    const { LIST_INTERFACE } = this.EVENT_MANAGER;\r\n    const arrayList = {\r\n      ...LIST_INTERFACE,\r\n      header: ['Business Class', 'Event', 'cond', 'edit', 'delete-all'],\r\n      notShow: ['id', 'eventId', 'condition', 'busClaId', 'order', 'bindings', 'WS'],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createBindingsParamsArrayList() {\r\n    const { LIST_INTERFACE } = this.EVENT_MANAGER;\r\n    const arrayList = {\r\n      ...LIST_INTERFACE,\r\n      header: ['Parameter', 'Type', 'In/Out', 'Binding'],\r\n      deleteAction: false,\r\n      deleteActionAll: false,\r\n      editAction: false,\r\n      notShow: ['id'],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _initEventsElements() {\r\n    this._eventsList.on('selected_item', (item) => {\r\n      this._onSelectEvent(item);\r\n    });\r\n    this._eventsList.on('add_item', () => {\r\n      this._onAddEvent();\r\n    });\r\n    this._eventsList.on('edit_item', (status) => {\r\n      this._onEditEvent(status);\r\n    });\r\n    this._eventsList.on('delete_item', (item) => {\r\n      this._onDeleteEvent(item);\r\n    });\r\n    this._eventsList.on('delete_all_items', () => {\r\n      this._onDeleteAllEvents();\r\n    });\r\n    this._eventsList.on('move', (actualPos, oldPos, actual, old, data = []) => {\r\n      this._onMoveEvent(actualPos, oldPos, actual, old, data);\r\n    });\r\n    this._eventCondition.on('change_condition', (condition) => {\r\n      this._onEventConditionChanged(condition);\r\n    });\r\n    this._bindingsList.on('selected_item', (item) => {\r\n      this._onSelectBinding(item);\r\n    });\r\n    this._bindingType.addEventListener('input', () => {\r\n      this._onSelectBindingTypeChanged();\r\n    });\r\n    this._setTimeoutOnPropertyChanged(\r\n      () => this._onBindingValueChanged(),\r\n      this._bindingValue,\r\n      'input',\r\n      100,\r\n    );\r\n    this._bindingAttribute.on('select_item', (item) => {\r\n      this._onSelectBindingAttribute(item);\r\n    });\r\n    this._bindingAttribute.on('add_item', () => {\r\n      this._onAddNewBindingAttribute();\r\n    });\r\n    this.bindingAttributesTypeAll.forEach((radio) => {\r\n      radio.addEventListener('input', () => {\r\n        this._onSelectBindingAttributeType();\r\n      });\r\n    });\r\n    this._eventSelect.on('select_item', (item) => {\r\n      this._onUpdateEvent(['eventId', 'name'], item);\r\n    });\r\n    this._busClassSelect.on('select_item', (item) => {\r\n      this._onUpdateEvent(['busClaId', 'busClaName'], item);\r\n    });\r\n  }\r\n\r\n  _refreshAndEmitEvent(data) {\r\n    this._eventsList.refreshList();\r\n    this.emitChange(data);\r\n  }\r\n\r\n\r\n  _onSelectEvent(eventSelected) {\r\n    if (eventSelected && this.eventSelected !== eventSelected) {\r\n      this._eventCondition.disabled = false;\r\n      this.eventSelected = eventSelected;\r\n      const { condition, busClaId } = eventSelected;\r\n      this.eventCondition = condition;\r\n      this._eventCondition.disabled = false;\r\n      this.bindingType = '';\r\n      this._bindingType.disabled = true;\r\n      this.bindingSelected = null;\r\n      this.bindingValue = '';\r\n      this.bindingAttribute = undefined;\r\n      this._visibilityBindingsElements(false);\r\n      // visibilityComponent(this.wrapBindingValue, true);\r\n      // // visibilityComponent(this.wrapBindingValue, false);\r\n      // // this.wrapBindingValue.setAttribute('data-visible', false);\r\n      // visibilityComponent(this._bindingAttribute.wrapper, false);\r\n      // visibilityComponent(this.wrapBindingAttributeType, false);\r\n      this._bindingsList.unSelectAll();\r\n      this._fillBindingsParameters(busClaId);\r\n    }\r\n    this._showEventMessageInfo(eventSelected);\r\n  }\r\n\r\n  _fillBindingsParameters(busClaId) {\r\n    this._getBindings(busClaId, this._options.bindingsUrl).then((bindings) => {\r\n      this.bindingsList = bindings;\r\n    });\r\n  }\r\n\r\n  _onAddEvent() {\r\n    const event = this.eventSelect;\r\n    const busClass = this.busClassSelect;\r\n    const events = this._eventsList.arrayList.data;\r\n    if (event && busClass) {\r\n      const newEvent = {\r\n        id: this._getMaxId(events) + 1,\r\n        busClaId: parseInt(busClass.id, 10),\r\n        busClaName: busClass.name,\r\n        eventId: parseInt(event.id, 10),\r\n        name: event.name,\r\n        condition: '',\r\n        haveCond: 'No',\r\n        bindings: [],\r\n        order: events.length,\r\n      };\r\n      events.push(newEvent);\r\n      this._refreshAndEmitEvent(events);\r\n      this._eventsList._scrollToRow(newEvent, () => this._onSelectEvent(newEvent));\r\n    }\r\n  }\r\n\r\n  _onEditEvent(status) {\r\n    const selected = status ? this._eventsList.rowEditableSelected : this.eventSelected;\r\n    const {\r\n      busClaId, busClaName, eventId, name,\r\n    } = selected;\r\n    this.eventSelect = status ? { id: eventId, name } : undefined;\r\n    this.busClassSelect = status ? { id: busClaId, name: busClaName } : undefined;\r\n    this.bindingType = '';\r\n    if (status) {\r\n      this.eventCondition = selected.condition ? selected.condition : '';\r\n      this._eventCondition.disabled = true;\r\n      this._bindingsList.unSelectAll();\r\n      this._bindingsList.disabled = true;\r\n      // this._axiosSource.cancel();\r\n    } else {\r\n      this._eventCondition.disabled = false;\r\n      this._bindingsList.disabled = false;\r\n      this._fillBindingsParameters(busClaId);\r\n    }\r\n    this._bindingType.disabled = true;\r\n    if (this.bindingSelected) {\r\n      this.bindingSelected = null;\r\n      this.bindingValue = '';\r\n      this.bindingAttribute = undefined;\r\n    }\r\n    this._visibilityBindingsElements(false);\r\n  }\r\n\r\n\r\n  _onUpdateEvent(props, item = { id: '', name: '' }) {\r\n    // DEFAULT VALUE TO NOT BREAK '_onUpdateEvent'\r\n    const [propId, propName] = props;\r\n    const { editStatus } = this._eventsList;\r\n    const { id, name } = item;\r\n    if (item.id !== ' ' && editStatus) {\r\n      this.eventSelected[propId] = parseInt(id, 10);\r\n      this.eventSelected[propName] = name;\r\n      const { data } = this._eventsList.arrayList;\r\n      if (propId === 'busClaId') {\r\n        this.eventSelected.bindings.length = 0;\r\n        this.eventSelected.condition = '';\r\n        this.eventCondition = this.eventSelected.condition;\r\n        this.eventSelected.haveCond = this.eventSelected.condition !== '' ? 'Yes' : 'No';\r\n        this._refreshAndEmitEvent(data);\r\n        this._fillBindingsParameters(this.eventSelected[propId]);\r\n      }\r\n      this._visibilityBindingsElements(false);\r\n      this._refreshAndEmitEvent(data);\r\n    }\r\n  }\r\n\r\n\r\n  _onDeleteEvent(deleteEvent) {\r\n    const events = this._eventsList.arrayList.data;\r\n    if (deleteEvent) {\r\n      const newEvents = events.filter((event) => {\r\n        return event.id !== deleteEvent.id;\r\n      });\r\n      this._eventsList.arrayList.data = newEvents;\r\n      if (this.eventSelected === deleteEvent) {\r\n        this._disableClearAssociatedWithEvent();\r\n      }\r\n      this._refreshAndEmitEvent(newEvents);\r\n    }\r\n  }\r\n\r\n  _onDeleteAllEvents() {\r\n    this._eventsList.arrayList.data = [];\r\n    this._refreshAndEmitEvent([]);\r\n    this._disableClearAssociatedWithEvent();\r\n  }\r\n\r\n  _onMoveEvent(actualPosition, oldPosition, actual, old) {\r\n    actual.order = parseInt(actualPosition, 10);\r\n    old.order = parseInt(oldPosition, 10);\r\n    const { data } = this._eventsList.arrayList;\r\n    this._refreshAndEmitEvent(data);\r\n  }\r\n\r\n  _onEventConditionChanged(condition) {\r\n    if (this.eventSelected) {\r\n      this.eventSelected.condition = condition;\r\n      this.eventSelected.haveCond = this.eventSelected.condition !== '' ? 'Yes' : 'No';\r\n      const { data } = this._eventsList.arrayList;\r\n      this._refreshAndEmitEvent(data);\r\n    }\r\n  }\r\n\r\n  _onSelectBinding(bindingSelected) {\r\n    if (bindingSelected && this.bindingSelected !== bindingSelected) {\r\n      this.bindingSelected = bindingSelected;\r\n      this._bindingType.disabled = false;\r\n      const binding = this._getBindingFromParameter(\r\n        this.bindingSelected,\r\n        this.eventSelected.bindings,\r\n      );\r\n      if (binding) {\r\n        const type = binding.busClaParBndType === 'V' ? 'VALUE' : 'ATTRIBUTE';\r\n        this.bindingType = type.toLowerCase();\r\n        this._showAccordingBindingType(type, binding);\r\n      } else {\r\n        this.bindingType = '';\r\n        this._visibilityBindingsElements(false);\r\n      }\r\n    }\r\n    this._showBindingMessageInfo(bindingSelected);\r\n  }\r\n\r\n  _onSelectBindingTypeChanged() {\r\n    const type = this.bindingType.toUpperCase();\r\n    const binding = this._getBindingFromParameter(\r\n      this.bindingSelected,\r\n      this.eventSelected.bindings,\r\n    );\r\n    if (binding) {\r\n      this._cleanValuesAccordingNewType(type, binding);\r\n      if (type !== '') {\r\n        this._transformBindingFromValues(binding, type);\r\n      } else {\r\n        this.eventSelected.bindings = this._deleteBindingParameter(\r\n          binding,\r\n          this.eventSelected.bindings,\r\n        );\r\n        this._fillBindingsParameters(this.eventSelected.busClaId);\r\n      }\r\n    } else {\r\n      const { param, id } = this.bindingSelected;\r\n      this.eventSelected.bindings = this._createNewBindingParameter(\r\n        {\r\n          busClaParId: parseInt(id, 10),\r\n          busClaParName: param,\r\n          busClaParType: this.bindingSelected.type,\r\n        },\r\n        this.eventSelected.bindings,\r\n        type,\r\n      );\r\n    }\r\n    this._showAccordingBindingType(type, binding || {});\r\n    const { data } = this._eventsList.arrayList;\r\n    this._refreshAndEmitEvent(data);\r\n  }\r\n\r\n  _onBindingValueChanged() {\r\n    const binding = this._getBindingFromParameter(\r\n      this.bindingSelected,\r\n      this.eventSelected.bindings,\r\n    );\r\n    const isValid = validateField(this._bindingValue);\r\n    this._fillValidBindingValue(binding.busClaParBndValue);\r\n    if (binding && isValid) {\r\n      binding.busClaParBndValue = this.bindingValue;\r\n      const { data } = this._eventsList.arrayList;\r\n      this._fillBindingsParameters(this.eventSelected.busClaId);\r\n      this._refreshAndEmitEvent(data);\r\n    }\r\n  }\r\n\r\n  _fillValidBindingValue(oldValue = '') {\r\n    const { type } = this._bindingValue;\r\n    if (type === 'number' && this.bindingValue === '') {\r\n      this.bindingValue = oldValue;\r\n    }\r\n  }\r\n\r\n  _onSelectBindingAttribute(attribute) {\r\n    if (attribute) {\r\n      const binding = this._getBindingFromParameter(\r\n        this.bindingSelected,\r\n        this.eventSelected.bindings,\r\n      );\r\n      if (binding) {\r\n        const { id, name, label } = attribute;\r\n        binding.attId = parseInt(id, 10);\r\n        binding.attName = label || name;\r\n        binding.attTooltip = name;\r\n        const { data } = this._eventsList.arrayList;\r\n        this._fillBindingsParameters(this.eventSelected.busClaId);\r\n        this._refreshAndEmitEvent(data);\r\n      }\r\n    }\r\n    const condition = !attribute && this._bindingAttribute.valueEl !== '';\r\n    this._bindingAttribute.toggleDisabledButton(!condition);\r\n  }\r\n\r\n  _onSelectBindingAttributeType() {\r\n    console.log(this.bindingAttributeType);\r\n    const attributeType = this.bindingAttributeType;\r\n    const binding = this._getBindingFromParameter(\r\n      this.bindingSelected,\r\n      this.eventSelected.bindings,\r\n    );\r\n    if (binding) {\r\n      binding.busClaParBndType = attributeType;\r\n      const { data } = this._eventsList.arrayList;\r\n      this._refreshAndEmitEvent(data);\r\n    }\r\n  }\r\n\r\n  _deleteBindingParameter(binding, bindings) {\r\n    return bindings.filter((bind) => bind.busClaParId !== binding.busClaParId);\r\n  }\r\n\r\n  _createNewBindingParameter(parameter, bindings, type) {\r\n    const newBinding = { ...parameter };\r\n    this._transformBindingFromValues(newBinding, type);\r\n    return [...bindings, newBinding];\r\n  }\r\n\r\n  _cleanValuesAccordingNewType(type, binding) {\r\n    switch (type) {\r\n      case 'ATTRIBUTE': {\r\n        delete binding.busClaParBndValue;\r\n        break;\r\n      }\r\n      case 'VALUE': {\r\n        delete binding.attId;\r\n        delete binding.attName;\r\n        delete binding.attTooltip;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  _transformBindingFromValues(binding, newType) {\r\n    switch (newType) {\r\n      case 'ATTRIBUTE':\r\n        this._createBindingAttribute(binding);\r\n        break;\r\n      case 'VALUE':\r\n        this._createBindingValue(binding);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  _showAccordingBindingType(type, binding = {}) {\r\n    this._showBindingAttribute(binding, type === 'ATTRIBUTE');\r\n    this._showBindingValue(binding, type === 'VALUE');\r\n  }\r\n\r\n  _createBindingAttribute(binding) {\r\n    binding.busClaParBndType = 'E';\r\n    binding.attId = -1;\r\n    binding.attName = '';\r\n    binding.attTooltip = '';\r\n  }\r\n\r\n  _createBindingValue(binding) {\r\n    binding.busClaParBndType = 'V';\r\n    binding.busClaParBndValue = '';\r\n  }\r\n\r\n  _showEventMessageInfo(eventSelected) {\r\n    const message = `<b>Event:</b> ${eventSelected.name}<br>\r\n      <b>Business Class:</b> ${eventSelected.busClaName}<br>\r\n      <b>Have a Condition:</b> ${eventSelected.haveCond}`;\r\n    this.message.showMessage({ ...OPTIONS_TOAST, message });\r\n  }\r\n\r\n  _showBindingMessageInfo(bindingSelected) {\r\n    const { PARAMS_TYPE } = this.EVENT_MANAGER;\r\n    const message = `\r\n      <b>Parameter:</b> ${bindingSelected.param}<br>\r\n      <b>Type:</b> ${PARAMS_TYPE[bindingSelected.type]}<br>\r\n      <b>In/Out:</b> ${bindingSelected.inout}<br>\r\n      <b>Binding:</b> ${bindingSelected.binding}<br>\r\n    `;\r\n    this.message.showMessage({ ...OPTIONS_TOAST, message });\r\n  }\r\n\r\n  _showErrorMessage(message) {\r\n    const options = { ...OPTIONS_TOAST };\r\n    options.type = 'danger';\r\n    options.title = 'Error';\r\n    options.message = message;\r\n    this.message.showMessage(options);\r\n  }\r\n\r\n  _showSuccessInsertionMessage() {\r\n    const options = { ...OPTIONS_TOAST };\r\n    options.type = 'success';\r\n    options.title = 'Success';\r\n    options.message = 'Attribute successfully added';\r\n    this.message.showMessage(options);\r\n  }\r\n\r\n  _visibilityBindingsElements(flag) {\r\n    visibilityComponent(this.wrapBindingValue, flag);\r\n    visibilityComponent(this._bindingAttribute.wrapper, flag);\r\n    visibilityComponent(this.wrapBindingAttributeType, flag);\r\n  }\r\n\r\n  _showBindingValue(binding = {}, flag = true) {\r\n    this.setFieldValueEachType(flag);\r\n    this._bindingValue.disabled = !flag;\r\n    this.bindingValue = binding.busClaParBndValue || '';\r\n    visibilityComponent(this.wrapBindingValue, flag);\r\n  }\r\n\r\n  _showBindingAttribute(binding = {}, flag = true) {\r\n    const { busClaParBndType, attId, attTooltip } = binding;\r\n    console.log(binding);\r\n    const attrType = busClaParBndType === 'P' ? 'process' : 'entity';\r\n    this.bindingAttributeType = attrType;\r\n    this.bindingAttribute = attId && attTooltip && attId !== -1 && attTooltip !== ''\r\n      ? { id: attId, name: attTooltip }\r\n      : undefined;\r\n    visibilityComponent(this.wrapBindingAttributeType, flag);\r\n    visibilityComponent(this._bindingAttribute.wrapper, flag);\r\n    this.setUrlAttributeEachType(flag);\r\n  }\r\n\r\n  setUrlAttributeEachType(flag) {\r\n    if (this.bindingSelected && Config.ENV === 'Production' && flag) {\r\n      const { type } = this.bindingSelected;\r\n      this._bindingAttribute.url = `${this._defaultAttrUrl}&attType=${type}&name=`;\r\n    }\r\n  }\r\n\r\n  setFieldValueEachType(flag) {\r\n    // if (this.bindingSelected && Config.ENV === 'Production' && flag) {\r\n    if (this.bindingSelected && flag) {\r\n      const { type } = this.bindingSelected;\r\n      switch (type) {\r\n        case 'N': {\r\n          this._bindingValue.setAttribute('type', 'number');\r\n          break;\r\n        }\r\n        case 'D': {\r\n          this._bindingValue.setAttribute('type', 'date');\r\n          break;\r\n        }\r\n        default: {\r\n          this._bindingValue.setAttribute('type', 'text');\r\n          break;\r\n        }\r\n      }\r\n      this._toggleNumberFieldAttributes(type === 'N');\r\n    }\r\n  }\r\n\r\n  _toggleNumberFieldAttributes(add) {\r\n    const hasMinAttribute = this._bindingValue.hasAttribute('min');\r\n    const hasStepAttribute = this._bindingValue.hasAttribute('step');\r\n    if (add && !hasMinAttribute && !hasStepAttribute) {\r\n      this._bindingValue.setAttribute('min', '0');\r\n      this._bindingValue.setAttribute('max', Number.MAX_SAFE_INTEGER);\r\n      this._bindingValue.setAttribute('step', '1');\r\n    } else {\r\n      this._bindingValue.removeAttribute('min');\r\n      this._bindingValue.removeAttribute('step');\r\n    }\r\n  }\r\n\r\n  _disableClearAssociatedWithEvent() {\r\n    this.eventSelected = null;\r\n    this.eventCondition = '';\r\n    this._eventCondition.disabled = true;\r\n    this._bindingsList.arrayListData = [];\r\n    this.bindingType = '';\r\n    this._bindingType.disabled = true;\r\n    if (this.bindingSelected) {\r\n      this.bindingSelected = null;\r\n      this.bindingValue = '';\r\n      this.bindingAttribute = undefined;\r\n    }\r\n    this._visibilityBindingsElements(false);\r\n  }\r\n\r\n  async _getBindings(classId, url) {\r\n    let bindings = [];\r\n    if (Config.ENV !== 'Development') url = `${url}${classId}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n        this.showInvalidSession();\r\n      }\r\n      const convert = new Converter();\r\n      bindings = convert.convertToJson(response.data);\r\n    } catch (error) {\r\n      console.warn('Error: ', error);\r\n    }\r\n    const parameters = mapInOutParameters(bindings);\r\n    return this._customBindingsParameters(parameters);\r\n  }\r\n\r\n  _customBindingsParameters(parameters) {\r\n    if (this.eventSelected) {\r\n      const { bindings } = this.eventSelected;\r\n      const indexBindings = indexByProperty(bindings || [], 'busClaParId');\r\n      return parameters.map((parameter) => {\r\n        const existBinding = indexBindings[parameter.id];\r\n        return {\r\n          ...parameter,\r\n          binding: existBinding ? this._getEspecificationBinding(existBinding) : 'None',\r\n        };\r\n      });\r\n    }\r\n    return parameters;\r\n  }\r\n\r\n  _getEspecificationBinding(binding) {\r\n    const isValue = binding.busClaParBndType === 'V' && binding.busClaParBndValue !== '';\r\n    const isProcess = binding.busClaParBndType === 'P';\r\n    const isEntity = binding.busClaParBndType === 'E';\r\n    const isAttribute = (isProcess || isEntity) && (binding.attId !== -1 && binding.attId);\r\n    if (isValue) return 'Value';\r\n    if (isAttribute) return 'Attribute';\r\n    return 'None';\r\n  }\r\n\r\n  _getBindingFromParameter(parameter, bindings) {\r\n    return bindings.find((bind) => {\r\n      return parseInt(bind.busClaParId, 10) === parseInt(parameter.id, 10);\r\n    });\r\n  }\r\n\r\n  async _insertNewAttribute(value) {\r\n    const url = `${Config.NEW_BINDINGS_ATTR_URL}&name=${value}&attType=S`;\r\n    const response = await axios.post(url);\r\n    if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n      this.showInvalidSession();\r\n    }\r\n    if (response) {\r\n      const convert = new Converter();\r\n      const [attrCreated] = convert.convertToJson(response.data);\r\n      this._bindingAttribute.selectedItem = attrCreated;\r\n      this._bindingAttribute.reloadData();\r\n      this._bindingAttribute.toggleDisabledButton(true);\r\n    }\r\n  }\r\n\r\n  _onAddNewBindingAttribute() {\r\n    const attributeValue = this._bindingAttribute.valueEl;\r\n    const selected = this._bindingAttribute.selectedItem;\r\n    if (!selected && Config.ENV === 'Production') {\r\n      if (validateApiaName(attributeValue)) {\r\n        try {\r\n          this._insertNewAttribute(attributeValue).then(() => this._showSuccessInsertionMessage());\r\n        } catch (error) {\r\n          console.warn('an error occurred when the attribute was trying to insert');\r\n        }\r\n      } else {\r\n        this._showErrorMessage(`The attribute name <b>\"${attributeValue}\"</b> is not valid`);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport Config from 'config';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport Converter from '../../utils/convertToJson';\r\nimport TemplatePanel from './templatePanel';\r\nimport {\r\n  TSK_SHOW_CONFIG,\r\n} from './ConfigCmp';\r\nimport {\r\n  getElementsOfType,\r\n  getSelected,\r\n  getProcessElementByID,\r\n  mapInOutParameters,\r\n  getTransitionsByElement,\r\n  indexByProperty,\r\n} from '../../utils/util';\r\nimport EventManager from './managers/eventManager';\r\nimport { validateApiaName, validateField } from './facilis/validator';\r\n\r\nexport default class TaskPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'task');\r\n    this._init();\r\n    this._initComponents();\r\n    this._initEventListenersComponents();\r\n  }\r\n\r\n  _init() {\r\n    // Variables Initializations\r\n    this._taskNameInput = null;\r\n    this._taskGroupInput = null;\r\n    this._taskSearchParticipant = null;\r\n    this._taskListParticipants = null;\r\n    this._taskCondParticipant = null;\r\n    this._taskSkipConditionInput = null;\r\n    this._taskScheduleInput = null;\r\n    this._taskScheduleSearch = null;\r\n    this._taskRoleSearch = null;\r\n    this._taskDocParticipant = this.panel.querySelector(\r\n      '#task_participant_documentation_input',\r\n    );\r\n    this._taskTitleInput = this._panel.querySelector('#task_title_input');\r\n    this._taskColorInput = this._panel.querySelector('#task_color_input');\r\n    this._taskColorInputName = this._panel.querySelector(\r\n      '#task_color_name_input',\r\n    );\r\n    this._taskTypeSelect = this._panel.querySelector('#task_type_select');\r\n    this._loopTypeSelect = this._panel.querySelector('#loop_type_select');\r\n    this._taskCommentsInput = this._panel.querySelector('#task_comments_input');\r\n    this._taskScheduleTypeSelect = this._panel.querySelector(\r\n      '#schedule_type_select',\r\n    );\r\n    this._taskStatesInput = null;\r\n    this._taskSearchEventStates = null;\r\n    this._taskSearchStates = null;\r\n    this._taskListEventStates = null;\r\n    this._taskConditionStates = null;\r\n    this._taskDocStates = this._panel.querySelector(\r\n      '#task_states_documentation_input',\r\n    );\r\n    // Events\r\n    this._taskEventsInput = null;\r\n    // Forms\r\n    this._taskFormsInput = null;\r\n    this._taskListStepForms = null;\r\n    this._stepForms = [];\r\n    this._taskTypeForms = this._panel.querySelector('#task_forms_type');\r\n    this._taskSearchForms = null;\r\n    this._taskListForms = null;\r\n    this._taskConditionForms = null;\r\n    this._taskDocumentationForms = this._panel.querySelector(\r\n      '#task_forms_documentation_input',\r\n    );\r\n    this._stepSelected = undefined;\r\n    // Loop-Type = multi-instance\r\n    this._taskMultiInstanceLoopType = null;\r\n    // input message ref\r\n    this._taskInputOutputGroup = this._panel.querySelector(\r\n      '#task_group_input_output',\r\n    );\r\n    this._taskWsMethodName = this._panel.querySelector(\r\n      '#task_ws_method_name_input',\r\n    );\r\n    this._taskWsAttributeType = this._panel.querySelector('#task_attr_type_ws');\r\n    // output message ref\r\n    this._taskOutputWSBindingType = this._panel.querySelector(\r\n      '#task_binding_type_ws',\r\n    );\r\n    this._taskOutputWSBindingValue = this._panel.querySelector(\r\n      '#task_binding_value_ws',\r\n    );\r\n    // wraps areas\r\n    this._wrapTaskGroup = null;\r\n    this._groupExpandZone = null;\r\n    this._scheduleExpandZone = this._panel.querySelector(\r\n      '#expand_schedule_zone',\r\n    );\r\n    this._statesExpandZone = this._panel.querySelector('#expand_states_zone');\r\n    this._eventsExpandZone = this.panel.querySelector('#expand_events_zone');\r\n    this._formsExpandZone = this._panel.querySelector('#expand_forms_zone');\r\n    this._wrapTaskAttributesTypeEvents = this._panel.querySelector(\r\n      '#wrapper_task_events_binding_attr_type',\r\n    );\r\n    this._wrapTaskBindingsTypeEvents = this._panel.querySelector(\r\n      '#wrapper_task_events_binding_type',\r\n    );\r\n    this._wrapTaskSearchAttributesEvents = null;\r\n    this._wrapTaskBindingsValueEvents = this._panel.querySelector(\r\n      '#wrapper_task_events_binding_value',\r\n    );\r\n    this._wrapMultiInstanceLoopType = null;\r\n    this._wrapOutputBindingAttrType = this._panel.querySelector(\r\n      '#wrapper_task_output_msg_ref_binding_attr_type',\r\n    );\r\n    // Events Initializations\r\n    this._taskTypeSelect.addEventListener('input', () => {\r\n      this._onTaskTypeSelectChanged();\r\n    });\r\n    this._taskColorInput.addEventListener('change', () => {\r\n      this._onTaskColorChanged();\r\n    });\r\n    this._loopTypeSelect.addEventListener('input', () => {\r\n      this._onLoopTypeSelectChanged();\r\n    });\r\n    this._taskCommentsInput.addEventListener('input', () => {\r\n      this._onTaskCommentsChanged();\r\n    });\r\n    this._taskScheduleTypeSelect.addEventListener('input', () => {\r\n      this._onSelectScheduleTypeChanged();\r\n    });\r\n    this.TASK_PANEL = {\r\n      ROLE_SEARCH: {\r\n        nameId: 'task_role',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelRoleSearch'),\r\n        add: true,\r\n        url: Config.ROLES_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      TASK_NAME: {\r\n        nameId: 'task_name',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskName'),\r\n        add: true,\r\n        url: Config.TASK_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      TASK_CONDITION: {\r\n        nameId: 'task_skip_cond',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskCondition'),\r\n      },\r\n      GROUP: {\r\n        nameId: 'task_group',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupLabel'),\r\n        expandId: 'expand_group_zone',\r\n      },\r\n      GROUP_SEARCH: {\r\n        nameId: 'task_participants',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupSearchLabel'),\r\n        add: true,\r\n        url: Config.PARTICIPANTS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      GROUP_LIST: {\r\n        nameId: 'task_participants',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupConditionLabel'),\r\n        add: true,\r\n      },\r\n      GROUP_CONDITION: {\r\n        nameId: 'task_participants_cond',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupScheduleLabel'),\r\n      },\r\n      SCHEDULE: {\r\n        nameId: 'task_schedule',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupScheduleLabel'),\r\n        expandId: 'expand_schedule_zone',\r\n      },\r\n      SCHEDULE_SEARCH: {\r\n        nameId: 'task_schedule',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupScheduleSearchLabel'),\r\n        add: false,\r\n        url: Config.TASK_SCHEDULE,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      SCHEDULE_SUBPROCESS: {\r\n        nameId: 'task_schedule_subprocess',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupScheduleSubprocessLabel'),\r\n        add: false,\r\n        url: Config.SUBPROCESS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      SCHEDULE_TASK: {\r\n        nameId: 'task_schedule_tasks',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskGroupScheduleTaskLabel'),\r\n        add: false,\r\n        url: Config.SUBPROCESS_TASKS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      STATES: {\r\n        nameId: 'task_states',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskStatesLabel'),\r\n        expandId: 'expand_states_zone',\r\n      },\r\n      STATES_EVENT: {\r\n        nameId: 'task_events_states',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskStatesEventLabel'),\r\n        add: false,\r\n        url: Config.STATES_EVENTS_URL,\r\n        hasLabel: false,\r\n      },\r\n      STATES_STATUS: {\r\n        nameId: 'task_status_states',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskStatesStatusLabel'),\r\n        add: false,\r\n        url: Config.STATES_STATUS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      STATES_LIST: {\r\n        nameId: 'task_events_list_states',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskStatesListLabel'),\r\n        add: true,\r\n      },\r\n      STATES_CONDITION: {\r\n        nameId: 'task_condition_states',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskStatesConditionLabel'),\r\n      },\r\n      EVENTS: {\r\n        nameId: 'task_events',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsLabel'),\r\n        expandId: 'expand_events_zone',\r\n      },\r\n      EVENTS_SEARCH: {\r\n        nameId: 'task_event_select_events',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsSearchLabel'),\r\n        add: false,\r\n        url: Config.STATES_EVENTS_URL,\r\n        hasLabel: false,\r\n      },\r\n      EVENTS_BUSCLAS: {\r\n        nameId: 'task_bus_class_events',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsBusClasLabel'),\r\n        add: false,\r\n        url: Config.TASK_BUSCLAS_EVENTS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      EVENTS_LIST: {\r\n        nameId: 'task_events_list',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsListLabel'),\r\n        add: true,\r\n      },\r\n      EVENTS_CONDITION: {\r\n        nameId: 'task_events_cond',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsConditionLabel'),\r\n      },\r\n      EVENTS_BINDINGS: {\r\n        nameId: 'task_events_bindings',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsBindingLabel'),\r\n        add: false,\r\n      },\r\n      EVENTS_ATTR: {\r\n        nameId: 'task_attribute_events',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelTaskEventsAttributeLabel'),\r\n        add: true,\r\n        url: Config.TASK_BINDINGS_ATTR_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      FORMS: {\r\n        nameId: 'task_forms',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelFormsLabel'),\r\n        expandId: 'expand_forms_zone',\r\n      },\r\n      FORMS_STEPS: {\r\n        nameId: 'task_step_forms_list',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelFormsStepsLabel'),\r\n        add: true,\r\n      },\r\n      FORMS_SEARCH: {\r\n        nameId: 'task_find_forms',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelFormsSearchLabel'),\r\n        add: true,\r\n        url: Config.TASK_ENT_FORMS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      FORMS_LIST: {\r\n        nameId: 'task_forms_list',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelFormsListLabel'),\r\n        add: true,\r\n      },\r\n      FORMS_CONDITION: {\r\n        nameId: 'task_forms_cond',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelFormsConditionLabel'),\r\n      },\r\n      MULTIINSTANCE_LOOPTYPE: {\r\n        nameId: 'task_multiinstance_looptype',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMultiInstanceLoopLabel'),\r\n        add: true,\r\n        url: Config.TASK_MULTIINSTANCE_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      INPUT_MSG_REF: {\r\n        nameId: 'task_input_msg_ref',\r\n        label: i18next.t('configCmp.txtConfigCmpTaskPanelMSGRefLabel'),\r\n        expandId: 'expand_input_message_ref_zone',\r\n      },\r\n      INPUT_MSG_REF_ATTR_SEARCH: {\r\n        nameId: 'task_input_msg_ref_attr_input',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefAttributeLabel'),\r\n        add: true,\r\n        url: Config.TASK_INPUT_MSG_REF,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      INPUT_MSG_REF_ATTRS_LIST: {\r\n        nameId: 'task_input_msg_ref_attrs_list',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefAttributeListLabel'),\r\n        add: true,\r\n      },\r\n      OUTPUT_MSG_REF_WS_SEARCH: {\r\n        nameId: 'task_output_msg_ref_ws_input',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefWSSearchLabel'),\r\n        add: false,\r\n        url: Config.TASK_OUTPUT_WS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      OUTPUT_MSG_REF_WS_LIST: {\r\n        nameId: 'task_output_msg_ref_ws_list',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefWSSearchAddLabel'),\r\n        add: true,\r\n      },\r\n      OUTPUT_MSG_REF_BINDING_LIST: {\r\n        nameId: 'task_output_msg_ref_binding_list',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefWSBindingListLabel'),\r\n        add: false,\r\n      },\r\n      OUTPUT_MSG_REF: {\r\n        nameId: 'task_output_msg_ref',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefOutputMessageLabel'),\r\n        expandId: 'expand_output_message_ref_zone',\r\n      },\r\n      OUTPUT_MSG_REF_ATTR_SEARCH: {\r\n        nameId: 'task_output_msg_ref_attr_param',\r\n        label: i18next.t('taskPropsPanel.txtProDesTaskPanelMSGRefAttributeSearchLabel'),\r\n        add: false,\r\n        url: Config.WORKFLOW_ATTRS_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n    };\r\n    this.OPTIONS_TOAST = {\r\n      type: 'info',\r\n      title: i18next.t('taskPropsPanel.txtProDesTaskPanelToastTitle'),\r\n      duration: 3000,\r\n      position: 'bottom-left',\r\n    };\r\n    this.PARAMETER_TYPE = {\r\n      S: i18next.t('configCmp.txtConfigCmpParameterTypeString'),\r\n      N: i18next.t('configCmp.txtConfigCmpParameterTypeNumber'),\r\n      D: i18next.t('configCmp.txtConfigCmpParameterTypeDate'),\r\n    };\r\n  }\r\n\r\n  get taskNameInput() {\r\n    return this._taskNameInput.valueEl;\r\n  }\r\n\r\n  get taskTitleInput() {\r\n    return this._taskTitleInput.value;\r\n  }\r\n\r\n  get taskColorInput() {\r\n    return this._taskColorInput.value;\r\n  }\r\n\r\n  get taskTypeSelect() {\r\n    return this._taskTypeSelect.value;\r\n  }\r\n\r\n  get loopTypeSelect() {\r\n    return this._loopTypeSelect.value;\r\n  }\r\n\r\n  get taskComments() {\r\n    return this._taskCommentsInput.checked;\r\n  }\r\n\r\n  get taskSkipCondition() {\r\n    return this._taskSkipConditionInput.conditionArea;\r\n  }\r\n\r\n  get taskScheduleSearch() {\r\n    return this._taskScheduleSearch.valueEl;\r\n  }\r\n\r\n  set taskScheduleSearch(value) {\r\n    this._taskScheduleSearch.valueEl = value;\r\n  }\r\n\r\n  get taskScheduleTypeSelect() {\r\n    return this._taskScheduleTypeSelect.value;\r\n  }\r\n\r\n  set taskScheduleTypeSelect(value) {\r\n    this._taskScheduleTypeSelect.value = value;\r\n  }\r\n\r\n  get taskScheduleSubprocSearch() {\r\n    return this._taskScheduleSubprocSearch.valueEl;\r\n  }\r\n\r\n  set taskScheduleSubprocSearch(value) {\r\n    this._taskScheduleSubprocSearch.valueEl = value;\r\n  }\r\n\r\n  get taskScheduleTaskSearch() {\r\n    return this._taskScheduleTaskSearch.valueEl;\r\n  }\r\n\r\n  set taskScheduleTaskSearch(value) {\r\n    this._taskScheduleTaskSearch.valueEl = value;\r\n  }\r\n\r\n  get taskMultiInstanceType() {\r\n    return this._taskMultiInstanceType.checked ? 'value' : 'attribute';\r\n  }\r\n\r\n  set taskMultiInstanceType(value) {\r\n    this._taskMultiInstanceType.checked = value;\r\n  }\r\n\r\n  get taskMultiplicationNumber() {\r\n    const { value } = this._taskMultiplicationNumber;\r\n    return value !== '' ? parseInt(value, 10) : value;\r\n  }\r\n\r\n  set taskMultiplicationNumber(value) {\r\n    this._taskMultiplicationNumber.value = value;\r\n  }\r\n\r\n  // Get the tasks by the subprocess id contained in the schedule\r\n  _getTasksBySubrocessId() {\r\n    const { subprocess } = this.element.schedule;\r\n    const url = `${Config.TASK_URL}&proc_id=${subprocess}`;\r\n    this._taskScheduleTaskSearch.showData(url);\r\n  }\r\n\r\n  get taskSearchParticipant() {\r\n    return this._taskSearchParticipant.valueEl;\r\n  }\r\n\r\n  set taskSearchParticipant(value) {\r\n    this._taskSearchParticipant.valueEl = value;\r\n  }\r\n\r\n  set taskNameInput(value) {\r\n    this._taskNameInput.valueEl = value;\r\n  }\r\n\r\n  set taskColorInput(value) {\r\n    this._taskColorInput.value = value;\r\n  }\r\n\r\n  set taskColorInputName(value) {\r\n    this._taskColorInputName.value = value;\r\n  }\r\n\r\n  set taskTitleInput(value) {\r\n    this._taskTitleInput.value = value;\r\n  }\r\n\r\n  set taskTypeSelect(value) {\r\n    this._taskTypeSelect.value = value;\r\n  }\r\n\r\n  set loopTypeSelect(value) {\r\n    this._loopTypeSelect.value = value;\r\n  }\r\n\r\n  set taskComments(value) {\r\n    this._taskCommentsInput.checked = value;\r\n  }\r\n\r\n  set taskSkipCondition(value) {\r\n    this._taskSkipConditionInput.conditionArea = value;\r\n  }\r\n\r\n  get taskCondParticipant() {\r\n    return this._taskCondParticipant.conditionArea;\r\n  }\r\n\r\n  set taskCondParticipant(value) {\r\n    this._taskCondParticipant.conditionArea = value;\r\n  }\r\n\r\n  get taskParticipantDocumentation() {\r\n    return this._taskDocParticipant.value;\r\n  }\r\n\r\n  set taskParticipantDocumentation(value) {\r\n    this._taskDocParticipant.value = value;\r\n  }\r\n\r\n  set taskRoleSearch(value) {\r\n    this._taskRoleSearch.valueEl = value;\r\n  }\r\n\r\n  get taskRoleSearch() {\r\n    return this._taskRoleSearch.valueEl;\r\n  }\r\n\r\n  get taskSearchEventStates() {\r\n    return this._taskSearchEventStates.valueEl;\r\n  }\r\n\r\n  set taskSearchEventStates(value) {\r\n    this._taskSearchEventStates.selectedItem = value;\r\n  }\r\n\r\n  get taskSearchStates() {\r\n    return this._taskSearchStates.valueEl;\r\n  }\r\n\r\n  set taskSearchStates(value) {\r\n    this._taskSearchStates.selectedItem = value;\r\n  }\r\n\r\n  get taskConditionStates() {\r\n    return this._taskConditionStates.conditionArea;\r\n  }\r\n\r\n  set taskConditionStates(value) {\r\n    this._taskConditionStates.conditionArea = value;\r\n  }\r\n\r\n  get taskDocStates() {\r\n    return this._taskDocStates.value;\r\n  }\r\n\r\n  set taskDocStates(value) {\r\n    this._taskDocStates.value = value;\r\n  }\r\n\r\n  get taskSearchEvents() {\r\n    return this._taskSearchEvents.valueEl;\r\n  }\r\n\r\n  set taskSearchEvents(value) {\r\n    this._taskSearchEvents.valueEl = value;\r\n  }\r\n\r\n  get taskBusClasEvents() {\r\n    return this._taskBusClasEvents.valueEl;\r\n  }\r\n\r\n  set taskBusClasEvents(value) {\r\n    this._taskBusClasEvents.valueEl = value;\r\n  }\r\n\r\n  get taskConditionEvents() {\r\n    return this._taskConditionEvents.conditionArea;\r\n  }\r\n\r\n  set taskConditionEvents(value) {\r\n    this._taskConditionEvents.conditionArea = value;\r\n  }\r\n\r\n  get taskBindingsValueEvents() {\r\n    return this._taskBindingsValueEvents.value;\r\n  }\r\n\r\n  set taskBindingsValueEvents(value) {\r\n    this._taskBindingsValueEvents.value = value;\r\n  }\r\n\r\n  get taskSearchAttributesEvents() {\r\n    return this._taskSearchAttributesEvents.valueEl;\r\n  }\r\n\r\n  set taskSearchAttributesEvents(value) {\r\n    this._taskSearchAttributesEvents.valueEl = value;\r\n  }\r\n\r\n  get taskBindingsTypeEvents() {\r\n    return this._taskBindingsTypeEvents.value;\r\n  }\r\n\r\n  set taskBindingsTypeEvents(value) {\r\n    this._taskBindingsTypeEvents.value = value;\r\n  }\r\n\r\n  get taskAttributesTypeEvents() {\r\n    const checked = this._wrapTaskAttributesTypeEvents.querySelector(\r\n      'input[type=radio]:checked',\r\n    );\r\n    return checked.value;\r\n  }\r\n\r\n  get radiosTypeEvents() {\r\n    return this._wrapTaskAttributesTypeEvents.querySelectorAll(\r\n      'input[type=radio]',\r\n    );\r\n  }\r\n\r\n  get taskTypeForms() {\r\n    return this._taskTypeForms.value;\r\n  }\r\n\r\n  set taskTypeForms(value) {\r\n    this._taskTypeForms.value = value;\r\n  }\r\n\r\n  get taskDocumentationForms() {\r\n    return this._taskDocumentationForms.value;\r\n  }\r\n\r\n  set taskDocumentationForms(value) {\r\n    this._taskDocumentationForms.value = value;\r\n  }\r\n\r\n  get taskConditionForms() {\r\n    return this._taskConditionForms.conditionArea;\r\n  }\r\n\r\n  set taskConditionForms(value) {\r\n    this._taskConditionForms.conditionArea = value;\r\n  }\r\n\r\n  get taskSearchForms() {\r\n    return this._taskSearchForms.valueEl;\r\n  }\r\n\r\n  set taskSearchForms(value) {\r\n    this._taskSearchForms.valueEl = value;\r\n  }\r\n\r\n  set taskFormsInput(value) {\r\n    this._taskFormsInput.inputEl = value;\r\n  }\r\n\r\n  get taskMultiInstanceLoopType() {\r\n    return this._taskMultiInstanceLoopType.valueEl;\r\n  }\r\n\r\n  set taskMultiInstanceLoopType(value) {\r\n    this._taskMultiInstanceLoopType.valueEl = value;\r\n  }\r\n\r\n  get taskWsMethodName() {\r\n    return this._taskWsMethodName.value;\r\n  }\r\n\r\n  get taskWsAttributeType() {\r\n    return this._taskWsAttributeType.value.toUpperCase();\r\n  }\r\n\r\n  get taskInputMsgRefSearch() {\r\n    return this._taskInputMsgRefSearch.valueEl;\r\n  }\r\n\r\n  set taskWsMethodName(value) {\r\n    this._taskWsMethodName.value = value;\r\n  }\r\n\r\n  set taskWsAttributeType(value) {\r\n    this._taskWsAttributeType.value = value;\r\n  }\r\n\r\n  set taskInputMsgRefSearch(value) {\r\n    this._taskInputMsgRefSearch.valueEl = value;\r\n  }\r\n\r\n  get taskInputOutputGroup() {\r\n    return this._taskInputOutputGroup.checked;\r\n  }\r\n\r\n  set taskInputOutputGroup(value) {\r\n    this._taskInputOutputGroup.checked = value;\r\n    this._changeVisibility(this._taskInputMsgRefExp.wrapper, value);\r\n    this._changeVisibility(this._taskOutputMsgRefExp.wrapper, value);\r\n  }\r\n\r\n  get taskOutputWSBindingType() {\r\n    return this._taskOutputWSBindingType.value;\r\n  }\r\n\r\n  set taskOutputWSBindingType(value) {\r\n    this._taskOutputWSBindingType.value = value;\r\n  }\r\n\r\n  get taskOutputWSBindingValue() {\r\n    return this._taskOutputWSBindingValue.value;\r\n  }\r\n\r\n  set taskOutputWSBindingValue(value) {\r\n    this._taskOutputWSBindingValue.value = value;\r\n  }\r\n\r\n  set taskOutputWebServiceSearch(value) {\r\n    this._taskOutputWebServiceSearch.valueEl = value;\r\n  }\r\n\r\n  get wsSelected() {\r\n    return this._wsSelected;\r\n  }\r\n\r\n  set wsSelected(value) {\r\n    this._wsSelected = value;\r\n  }\r\n\r\n  set taskOutputBindingAttrSearch(value) {\r\n    this._taskOutputBindingAttrSearch.valueEl = value;\r\n  }\r\n\r\n  get ouputWsAttributeTypeChecked() {\r\n    const radio = this._wrapOutputBindingAttrType.querySelector(\r\n      'input[type=radio]:checked',\r\n    );\r\n    return radio;\r\n  }\r\n\r\n  _initGroupsComponents() {\r\n    // Get the configuration variables of the components\r\n    const {\r\n      GROUP, GROUP_SEARCH, GROUP_LIST, GROUP_CONDITION,\r\n    } = this.TASK_PANEL;\r\n    GROUP_LIST.arrayList = this._createParticipantsArrayList();\r\n    if (Config.ENV !== 'Production') GROUP_SEARCH.add = false;\r\n    // Component of the groups (groups, groups_search, groups_list, groups_cond & groups_docs)\r\n    this._taskGroupInput = this._includeComponent(\r\n      'expander',\r\n      this.wrapTaskName,\r\n      this.wrapTaskTitle,\r\n      'afterend',\r\n      GROUP,\r\n    );\r\n    this._taskSearchParticipant = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapTaskSearchParticipants,\r\n      this._taskGroupInput.expandZone,\r\n      'inner',\r\n      GROUP_SEARCH,\r\n    );\r\n    this._taskListParticipants = this._includeComponent(\r\n      'list',\r\n      this.wrapListParticipants,\r\n      this._taskGroupInput.expandZone,\r\n      'inner',\r\n      GROUP_LIST,\r\n    );\r\n    this._taskCondParticipant = this._includeComponent(\r\n      'condition',\r\n      this.wrapConditionParticipant,\r\n      this._taskGroupInput.expandZone,\r\n      'inner',\r\n      GROUP_CONDITION,\r\n    );\r\n    // Change and insert the placesholder\r\n    this._taskSearchParticipant.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelSearchParticipationPlaceholder');\r\n    this._taskCondParticipant.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelConditionParticipationPlaceholder');\r\n    this._taskDocParticipant.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelDocumentationParticipationPlaceholder');\r\n    // Adjust the docs to the end\r\n    this._taskCondParticipant.wrapper.insertAdjacentElement(\r\n      'afterend',\r\n      this.wrapDocParticipants,\r\n    );\r\n    this._taskGroupInput.expandZone.insertAdjacentElement(\r\n      'afterend',\r\n      this.wrapTaskType,\r\n    );\r\n  }\r\n\r\n  _initGenericTaskComponents() {\r\n    // Get the configuration variables of the components\r\n    const { ROLE_SEARCH, TASK_NAME, TASK_CONDITION } = this.TASK_PANEL;\r\n    if (Config.ENV === 'Development') TASK_NAME.add = false;\r\n    // Generic task components (name, role, condition)\r\n    this._taskRoleSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapRoleTask,\r\n      this.wrapTaskLoopType,\r\n      'afterend',\r\n      ROLE_SEARCH,\r\n    );\r\n    this._taskNameInput = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapTaskName,\r\n      this.wrapTaskTitle,\r\n      'beforebegin',\r\n      TASK_NAME,\r\n    );\r\n    this._taskSkipConditionInput = this._includeComponent(\r\n      'condition',\r\n      this.wrapSkipCondition,\r\n      this.wrapTaskComments,\r\n      'afterend',\r\n      TASK_CONDITION,\r\n    );\r\n    // Change and insert the placesholder\r\n    this._taskNameInput.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelTaskNamePlaceholder');\r\n    this._taskRoleSearch.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelRolePlaceholder');\r\n    this._taskSkipConditionInput.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelConditionToTaskPlaceholder');\r\n    // Enable add button for after add action\r\n    this._taskNameInput.toggleDisabledButton(true);\r\n    this._taskRoleSearch.toggleDisabledButton(true);\r\n    this.wrapTaskDoc.insertAdjacentElement('beforebegin', this.wrapTaskColor);\r\n  }\r\n\r\n  _initInputOutputMessageRefComponents() {\r\n    // Get the configuration variables of the components\r\n    const {\r\n      INPUT_MSG_REF,\r\n      INPUT_MSG_REF_ATTR_SEARCH,\r\n      INPUT_MSG_REF_ATTRS_LIST,\r\n    } = this.TASK_PANEL;\r\n    const {\r\n      OUTPUT_MSG_REF,\r\n      OUTPUT_MSG_REF_WS_SEARCH,\r\n      OUTPUT_MSG_REF_WS_LIST,\r\n      OUTPUT_MSG_REF_BINDING_LIST,\r\n      OUTPUT_MSG_REF_ATTR_SEARCH,\r\n    } = this.TASK_PANEL;\r\n\r\n    INPUT_MSG_REF_ATTRS_LIST.arrayList = this._createInputMsgRefAttrsArrayList();\r\n    OUTPUT_MSG_REF_WS_LIST.arrayList = this._createOutputMsgRefWsArrayList();\r\n    OUTPUT_MSG_REF_BINDING_LIST.arrayList = this._createWebServiceBindingsArrayList();\r\n    // Component of the input_msg_ref\r\n    this._taskInputMsgRefExp = this._includeComponent(\r\n      'expander',\r\n      this.wrapInputMsgRefExp,\r\n      this.wrapInputOutputGroup,\r\n      'afterend',\r\n      INPUT_MSG_REF,\r\n    );\r\n    this._taskInputMsgRefSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapInputMsgRefSearch,\r\n      this._taskInputMsgRefExp.expandZone,\r\n      'inner',\r\n      INPUT_MSG_REF_ATTR_SEARCH,\r\n    );\r\n    this._taskInputMsgRefList = this._includeComponent(\r\n      'list',\r\n      this.wrapInputMsgRefList,\r\n      this._taskInputMsgRefExp.expandZone,\r\n      'inner',\r\n      INPUT_MSG_REF_ATTRS_LIST,\r\n    );\r\n    // Components oft the output_msg_ref\r\n    this._taskOutputMsgRefExp = this._includeComponent(\r\n      'expander',\r\n      this.wrapOutputMsgRefExp,\r\n      this._taskInputMsgRefExp.expandZone,\r\n      'afterend',\r\n      OUTPUT_MSG_REF,\r\n    );\r\n    this._taskOutputWebServiceSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapWebServiceSearch,\r\n      this.wrapOutputWSBindingType,\r\n      'beforebegin',\r\n      OUTPUT_MSG_REF_WS_SEARCH,\r\n    );\r\n    this._taskOutputMsgRefWSList = this._includeComponent(\r\n      'list',\r\n      this.wrapOutputMsgRefWSList,\r\n      this._taskOutputWebServiceSearch.wrapper,\r\n      'afterend',\r\n      OUTPUT_MSG_REF_WS_LIST,\r\n    );\r\n    this._taskOutputMsgRefBindingList = this._includeComponent(\r\n      'list',\r\n      this.wrapOutputMsgRefBinList,\r\n      this._taskOutputMsgRefWSList.wrapper,\r\n      'afterend',\r\n      OUTPUT_MSG_REF_BINDING_LIST,\r\n    );\r\n    this._taskOutputBindingAttrSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapOutputBindAttr,\r\n      this._wrapOutputBindingAttrType,\r\n      'afterend',\r\n      OUTPUT_MSG_REF_ATTR_SEARCH,\r\n    );\r\n    this._wsSelected = null;\r\n    this._taskInputMsgRefSearch.toggleDisabledButton(true);\r\n    // Change and insert the placeholder\r\n    this._taskWsMethodName.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelWSNamePlaceholder');\r\n    this._taskInputMsgRefSearch.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelWSSelectPlaceholder');\r\n\r\n    this._changeVisibility(this._taskInputMsgRefExp.wrapper, false);\r\n    this._changeVisibility(this._taskOutputMsgRefExp.wrapper, false);\r\n  }\r\n\r\n  _initScheduleComponents() {\r\n    // Get the configuration variables of the components\r\n    const {\r\n      SCHEDULE,\r\n      SCHEDULE_SEARCH,\r\n      SCHEDULE_SUBPROCESS,\r\n      SCHEDULE_TASK,\r\n    } = this.TASK_PANEL;\r\n    // Component of the schedule (schedule, agenda, schedule_type, subprocess & subprocess_tasks)\r\n    this._taskScheduleInput = this._includeComponent(\r\n      'expander',\r\n      this.wrapExpanderSchedule,\r\n      this.wrapHighLight,\r\n      'afterend',\r\n      SCHEDULE,\r\n    );\r\n    this._taskScheduleSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapScheduleSearch,\r\n      this.wrapScheduleType,\r\n      'beforebegin',\r\n      SCHEDULE_SEARCH,\r\n    );\r\n    this._taskScheduleSubprocSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapScheduleSubprocess,\r\n      this.wrapScheduleType,\r\n      'afterend',\r\n      SCHEDULE_SUBPROCESS,\r\n    );\r\n    this._taskScheduleTaskSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapScheduleTask,\r\n      this._taskScheduleSubprocSearch.wrapper,\r\n      'afterend',\r\n      SCHEDULE_TASK,\r\n    );\r\n    // Change and insert the placesholder\r\n    this._taskScheduleSearch.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelSearchAgendaPlaceholder');\r\n    this._taskScheduleSubprocSearch.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelSearchSubProcessPlaceholder');\r\n    this._taskScheduleTaskSearch.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelSearchTaskPlaceholder');\r\n    this._taskScheduleTaskSearch.local = true;\r\n  }\r\n\r\n  _initStatesComponents() {\r\n    // Get the configuration variables of the components\r\n    const {\r\n      STATES,\r\n      STATES_EVENT,\r\n      STATES_STATUS,\r\n      STATES_LIST,\r\n      STATES_CONDITION,\r\n    } = this.TASK_PANEL;\r\n    STATES_LIST.arrayList = this._createEventsStatesArrayList();\r\n    // Component of the states (states, events, status, events_list, condition & docs)\r\n    this._taskStatesInput = this._includeComponent(\r\n      'expander',\r\n      this.wrapExpanderStates,\r\n      this._taskEventsInput.expandZone,\r\n      'afterend',\r\n      STATES,\r\n    );\r\n    this._taskSearchEventStates = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapEventStates,\r\n      this._taskStatesInput.expandZone,\r\n      'inner',\r\n      STATES_EVENT,\r\n    );\r\n    this._taskSearchStates = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapStatesSearch,\r\n      this._taskStatesInput.expandZone,\r\n      'inner',\r\n      STATES_STATUS,\r\n    );\r\n    this._taskListEventStates = this._includeComponent(\r\n      'list',\r\n      this.wrapListEventsStates,\r\n      this._taskStatesInput.expandZone,\r\n      'inner',\r\n      STATES_LIST,\r\n    );\r\n    this._taskConditionStates = this._includeComponent(\r\n      'condition',\r\n      this.wrapConditionStates,\r\n      this._taskStatesInput.expandZone,\r\n      'inner',\r\n      STATES_CONDITION,\r\n    );\r\n    // Change and insert the placesholder\r\n    this._taskSearchEventStates.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelSearchEventPlaceholder');\r\n    this._taskSearchStates.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelSearchStatusPlaceholder');\r\n    this._taskConditionStates.placeholder = i18next.t('taskPropsPanel.txtProDesTaskPanelConditionToEventPlaceholder');\r\n    // Move the docs to the end after de condition\r\n    this._taskConditionStates.wrapper.insertAdjacentElement(\r\n      'afterend',\r\n      this.wrapDocStates,\r\n    );\r\n  }\r\n\r\n  _initEventsComponents() {\r\n    // Get the configuration variables of the components\r\n    const { EVENTS } = this.TASK_PANEL;\r\n    this._taskEventsInput = this._includeComponent(\r\n      'expander',\r\n      this.wrapExpanderEvents,\r\n      this._taskFormsInput.expandZone,\r\n      'afterend',\r\n      EVENTS,\r\n    );\r\n    this._taskEvents = new EventManager(\r\n      'task',\r\n      this._taskEventsInput.expandZone,\r\n      {\r\n        eventsUrl: Config.TASK_EVENTS_URL,\r\n        busClassUrl: Config.TASK_BUSCLAS_EVENTS_URL,\r\n        attributesUrl: Config.TASK_BINDINGS_ATTR_URL,\r\n        bindingsUrl: Config.TASK_BINDINGS_URL,\r\n      },\r\n    );\r\n  }\r\n\r\n  _initFormsComponents() {\r\n    // Get the configuration variables of the components\r\n    const {\r\n      FORMS,\r\n      FORMS_STEPS,\r\n      FORMS_SEARCH,\r\n      FORMS_LIST,\r\n      FORMS_CONDITION,\r\n    } = this.TASK_PANEL;\r\n    FORMS_STEPS.arrayList = this._createStepFormsArrayList();\r\n    FORMS_LIST.arrayList = this._createFormsArrayList();\r\n    // Component of the forms (forms, steps, forms_search, forms_list, condition & docs)\r\n    this._taskFormsInput = this._includeComponent(\r\n      'expander',\r\n      this.wrapExpanderForms,\r\n      this._taskRoleSearch.wrapper,\r\n      'afterend',\r\n      FORMS,\r\n    );\r\n    this._taskListStepForms = this._includeComponent(\r\n      'list',\r\n      this.wrapListStepForms,\r\n      this.wrapTypeForms,\r\n      'beforebegin',\r\n      FORMS_STEPS,\r\n    );\r\n    this._taskSearchForms = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapTaskSearchForms,\r\n      this.wrapTypeForms,\r\n      'afterend',\r\n      FORMS_SEARCH,\r\n    );\r\n    this._taskListForms = this._includeComponent(\r\n      'list',\r\n      this.wrapListForms,\r\n      this._taskSearchForms.wrapper,\r\n      'afterend',\r\n      FORMS_LIST,\r\n    );\r\n    this._taskConditionForms = this._includeComponent(\r\n      'condition',\r\n      this.wrapFormsCondition,\r\n      this._taskListForms.wrapper,\r\n      'afterend',\r\n      FORMS_CONDITION,\r\n    );\r\n    this._taskSearchForms.toggleDisabledButton(true);\r\n    // Change and insert the placesholder\r\n    this._taskSearchForms.placeholder = 'Search a Form';\r\n    this._taskConditionForms.placeholder = 'Insert any condition to form';\r\n    this._taskDocumentationForms.placeholder = 'Insert a documentation to form';\r\n  }\r\n\r\n  _initMultiInstanceLoopTypeComponents() {\r\n    // Get the configuration variables of the components\r\n    const { MULTIINSTANCE_LOOPTYPE } = this.TASK_PANEL;\r\n    this.wrapTaskType.insertAdjacentElement('afterend', this.wrapTaskLoopType);\r\n    this._wrapMultiInstanceType = this._panel.querySelector(\r\n      '#wrap_task_multiinstance_type_select',\r\n    );\r\n    this.wrapTaskLoopType.insertAdjacentElement(\r\n      'afterend',\r\n      this._wrapMultiInstanceType,\r\n    );\r\n    // Component of the multiinstance\r\n    this._taskMultiInstanceLoopType = this._includeComponent(\r\n      'dropdown',\r\n      this._wrapMultiInstanceLoopType,\r\n      this._wrapMultiInstanceType,\r\n      'afterend',\r\n      MULTIINSTANCE_LOOPTYPE,\r\n    );\r\n    this._taskMultiInstanceType = this._panel.querySelector(\r\n      '#task_multiinstance_type_select',\r\n    );\r\n    this._taskMultiplicationNumber = this._panel.querySelector(\r\n      '#task_multiinstance_number_type',\r\n    );\r\n    // Change and insert the placesholder & enabled button\r\n    this._taskMultiInstanceLoopType.placeholder = 'Search an Attribute';\r\n    this._taskMultiInstanceLoopType.toggleDisabledButton(true);\r\n    this._wrapMultiInstanceLoopType = this._taskMultiInstanceLoopType.wrapper;\r\n    this._wrapMultiplicationNumber = this._taskMultiplicationNumber.parentNode.parentNode;\r\n    this._wrapMultiInstanceType.insertAdjacentElement(\r\n      'afterend',\r\n      this._wrapMultiplicationNumber,\r\n    );\r\n  }\r\n\r\n  _initComponents() {\r\n    this.wrapTaskTitle = this._taskTitleInput.parentNode.parentNode;\r\n    this.wrapTaskColor = this._taskColorInput.parentNode.parentNode;\r\n    this.wrapTaskDoc = this._documentationInput.parentNode.parentNode;\r\n    this.wrapTaskLoopType = this._loopTypeSelect.parentNode.parentNode;\r\n    this.wrapDocParticipants = this._taskDocParticipant.parentNode.parentNode;\r\n    this.wrapScheduleType = this._taskScheduleTypeSelect.parentNode.parentNode;\r\n    this.wrapDocStates = this._taskDocStates.parentNode.parentNode;\r\n    this.wrapTypeForms = this._taskTypeForms.parentNode.parentNode;\r\n    this.wrapTaskType = this._taskTypeSelect.parentNode.parentNode;\r\n    this.wrapOutputWSBindingType = this._taskOutputWSBindingType.parentNode.parentNode;\r\n    this.wrapOutputWSBindingValue = this._taskOutputWSBindingValue.parentNode;\r\n    this.wrapHighLight = this._taskCommentsInput.parentNode.parentNode;\r\n    this.wrapInputOutputGroup = this._taskInputOutputGroup.parentNode.parentNode.parentNode;\r\n    this.wrapTaskComments = this._taskCommentsInput.parentNode.parentNode.parentNode;\r\n    // Including the components\r\n    this._initGenericTaskComponents();\r\n    this._initGroupsComponents();\r\n    this._initMultiInstanceLoopTypeComponents();\r\n    this._initFormsComponents();\r\n    this._initEventsComponents();\r\n    this._initStatesComponents();\r\n    this._initScheduleComponents();\r\n    this._initInputOutputMessageRefComponents();\r\n  }\r\n\r\n  _initEventListenersComponents() {\r\n    // this._taskGroupInput.on('expand', () => {\r\n    //   this._onExpandGroupInput();\r\n    // });\r\n    // EVENT TASKINPUT\r\n    this._taskNameInput.on('select_item', (item) => {\r\n      this._onSelectNameChange(item);\r\n    });\r\n\r\n    this._taskNameInput.on('add_item', () => {\r\n      this._onAddNewTaskNameInput();\r\n    });\r\n\r\n    this._taskNameInput.on('clear_item', () => {\r\n      this._onClearNameInput();\r\n    });\r\n\r\n    this._taskSearchParticipant.on('add_item', () => {\r\n      this._onAddNewParticipant();\r\n    });\r\n\r\n    this._taskSearchParticipant.on('select_item', (item) => {\r\n      this._onSelectSearchParticipant(item);\r\n    });\r\n\r\n    this._taskListParticipants.on('add_item', () => {\r\n      this._onAddParticipantSelect();\r\n    });\r\n\r\n    this._taskListParticipants.on('selected_item', (item) => {\r\n      this._onSelectParticipantItem(item);\r\n    });\r\n\r\n    this._taskListParticipants.on('delete_item', (item) => {\r\n      this._onDeleteParticipantItem(item);\r\n    });\r\n\r\n    this._taskListParticipants.on('delete_all_items', () => {\r\n      this._onDeleteAllParticipantItems();\r\n    });\r\n\r\n    this._taskCondParticipant.on('change_condition', (condition) => {\r\n      this._onParticipantConditionChanged(condition);\r\n    });\r\n\r\n    this._taskConditionStates.on('change_condition', (condition) => {\r\n      this._onStateConditionChanged(condition);\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onParticipantDocumentationChanged();\r\n      },\r\n      this._taskDocParticipant,\r\n      'input',\r\n    );\r\n\r\n    this._taskScheduleSearch.on('select_item', (item) => {\r\n      this._onSelectScheduleAgendaChanged(item);\r\n    });\r\n\r\n    this._taskScheduleSubprocSearch.on('select_item', (item) => {\r\n      this._onSelectScheduleSubprocessChanged(item);\r\n    });\r\n\r\n    this._taskScheduleTaskSearch.on('select_item', (item) => {\r\n      this._onSelectScheduleTaskChanged(item);\r\n    });\r\n\r\n    this._taskScheduleSearch.on('clear_item', () => {\r\n      this._onClearSchedulePropertyChanged(['id', 'scheduleName']);\r\n    });\r\n\r\n    this._taskScheduleSubprocSearch.on('clear_item', () => {\r\n      this._onClearSchedulePropertyChanged(['subprocess', 'subprocessName']);\r\n    });\r\n\r\n    this._taskScheduleTaskSearch.on('clear_item', () => {\r\n      this._onClearSchedulePropertyChanged(['task', 'taskName']);\r\n    });\r\n\r\n    this._taskScheduleInput.on('expand', () => {\r\n      this._onExpandScheduleInput();\r\n    });\r\n\r\n    this._taskRoleSearch.on('select_item', (item) => {\r\n      this._onSelectRoleTaskChanged(item);\r\n    });\r\n    this._taskRoleSearch.on('clear_item', () => {\r\n      this._onClearRoleTasks();\r\n    });\r\n\r\n    this._taskRoleSearch.on('add_item', () => {\r\n      this._onAddNewRoleSearch();\r\n    });\r\n\r\n    this._taskListEventStates.on('add_item', () => {\r\n      this._onAddStateList();\r\n    });\r\n    //!\r\n    // this._taskListEventStates.on('clear_item', () => {\r\n    //   alert('here');\r\n    //   // this._onAddStateList();\r\n    // });\r\n    //!\r\n    this._taskListEventStates.on('selected_item', (item) => {\r\n      this._onSelectedEventState(item);\r\n    });\r\n\r\n    this._taskListEventStates.on('delete_item', (item) => {\r\n      this._onDeleteEvenStatestList(item);\r\n    });\r\n\r\n    this._taskListEventStates.on('delete_all_items', () => {\r\n      this._onDeleteAllEventStatesList();\r\n    });\r\n\r\n    this._taskListEventStates.on('edit_item', (status) => {\r\n      this._onEditEventState(status);\r\n    });\r\n\r\n    this._taskSearchEventStates.on('select_item', (item) => {\r\n      this._onSelectEventOrStates(item, 'event');\r\n    });\r\n\r\n    this._taskSearchStates.on('select_item', (item) => {\r\n      this._onSelectEventOrStates(item, 'state');\r\n    });\r\n\r\n    this._taskConditionStates.on('change_condition', (condition) => {\r\n      this._onConditionAndDocumentationStatesChanged(condition, 'condition');\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onConditionAndDocumentationStatesChanged(\r\n          this.taskDocStates,\r\n          'conditionDoc',\r\n        );\r\n      },\r\n      this._taskDocStates,\r\n      'input',\r\n    );\r\n\r\n    this._taskEvents.on('change', (data) => {\r\n      return this._onTaskEventsChanged(data);\r\n    });\r\n\r\n    this._taskEvents.on('move', (actualPos, oldPos, actual, old, data = []) => {\r\n      this._onOrderTaskEventsChanged(actualPos, oldPos, actual, old, data);\r\n    });\r\n\r\n    // this._taskEvents.on('coco', (actualPos, oldPos, actual, old, data = []) => {\r\n    //   //this._onOrderTaskEventsChanged(actualPos, oldPos, actual, old, data);\r\n    //   console.log(123);\r\n    // });\r\n\r\n    this._taskFormsInput.on('expand', () => {\r\n      this._onExpandForms();\r\n    });\r\n\r\n    this._taskListStepForms.on('add_item', () => {\r\n      this._onAddTaskStepListForms();\r\n    });\r\n\r\n    this._taskListStepForms.on('selected_item', (item) => {\r\n      this._onTaskStepListFormsSelect(item);\r\n    });\r\n\r\n    this._taskListStepForms.on('delete_item', (item) => {\r\n      this._onDeleteTaskStepListForms(item);\r\n    });\r\n\r\n    this._taskSearchForms.on('select_item', (item) => {\r\n      this._onSelectTaskSearchForms(item);\r\n    });\r\n\r\n    this._taskSearchForms.on('add_item', () => {\r\n      this._onAddNewTaskForm();\r\n    });\r\n\r\n    this._taskListStepForms.on('delete_all_items', () => {\r\n      this._onDeleteAllTaskStepListForms();\r\n    });\r\n\r\n    this._taskListForms.on('selected_item', (item) => {\r\n      this._onTaskFormListSelect(item);\r\n    });\r\n\r\n    this._taskListForms.on('delete_item', (item) => {\r\n      this._onDeleteTaskFormList(item, false);\r\n    });\r\n\r\n    this._taskListForms.on('delete_all_items', () => {\r\n      this._onDeleteTaskFormList(true, true);\r\n    });\r\n\r\n    this._taskListForms.on('add_item', () => {\r\n      this._onAddTaskListForms();\r\n    });\r\n\r\n    this._taskListForms.on('checked_item', (param) => {\r\n      this._onCheckTaskListForm(param);\r\n    });\r\n\r\n    this._taskTypeForms.addEventListener('input', () => {\r\n      this._onTaskTypeFormsSelectChanged();\r\n    });\r\n\r\n    this._taskConditionForms.on('change_condition', (condition) => {\r\n      this._onTaskConditionAndDocFormsChanged('condition', condition);\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onTaskConditionAndDocFormsChanged(\r\n          'conditionDoc',\r\n          this.taskDocumentationForms,\r\n        );\r\n      },\r\n      this._taskDocumentationForms,\r\n      'input',\r\n    );\r\n\r\n    // this._taskDocumentationForms.addEventListener('input', () => {\r\n    //   this._onTaskConditionAndDocFormsChanged('conditionDoc', this.taskDocumentationForms);\r\n    // });\r\n\r\n    this._taskListStepForms.on(\r\n      'move',\r\n      (actualPos, oldPos, actual, old, data = []) => {\r\n        this._onOrderStepFormsChanged(actualPos, oldPos, actual, old, data);\r\n      },\r\n    );\r\n\r\n    this._taskListForms.on(\r\n      'move',\r\n      (actualPos, oldPos, actual, old, data = []) => {\r\n        this._onOrderFormsChanged(actualPos, oldPos, actual, old);\r\n        this.element.setPropertyObject(\r\n          this._stepSelected,\r\n          'forms',\r\n          `${actual.formType}Forms`,\r\n          data,\r\n        );\r\n      },\r\n    );\r\n\r\n    this._taskSkipConditionInput.on('change_condition', (condition) => {\r\n      this._onTaskSkipConditionChanged(condition);\r\n    });\r\n\r\n    this._taskMultiInstanceLoopType.on('select_item', (item) => {\r\n      this._onTaskMultiInstanceChanged(item);\r\n    });\r\n\r\n    this._taskMultiInstanceLoopType.on('add_item', () => {\r\n      this._onAddMultiInstanceAttribute();\r\n    });\r\n\r\n    this._taskInputOutputGroup.addEventListener('input', () => {\r\n      this._onInputOutputGroupChanged();\r\n    });\r\n\r\n    this._taskInputMsgRefExp.on('expand', () => {\r\n      this._onExpandInputMessageRefExp();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onTaskWsMethodNameChanged();\r\n      },\r\n      this._taskWsMethodName,\r\n      'input',\r\n    );\r\n\r\n    this._taskWsAttributeType.addEventListener('input', () => {\r\n      this._onSelectTaskWsAttributeType();\r\n    });\r\n\r\n    this._taskInputMsgRefList.on('edit_item', (status) => {\r\n      this._onEditTaskInputMsgRefList(status);\r\n    });\r\n\r\n    this._taskInputMsgRefList.on('add_item', () => {\r\n      this._onAddTaskInputMsgRefList();\r\n    });\r\n\r\n    this._taskInputMsgRefList.on('delete_item', (item) => {\r\n      this._onDeleteTaskInputMsgRefList(item);\r\n    });\r\n\r\n    this._taskInputMsgRefList.on('delete_all_items', () => {\r\n      this._onDeleteAllTaskInputMsgRefList();\r\n    });\r\n\r\n    this._taskInputMsgRefList.on('selected_item', (item) => {\r\n      this._onSelectInputMsgRefList(item);\r\n    });\r\n\r\n    this._taskInputMsgRefList.on('checked_item', (param) => {\r\n      this._onCheckInputMsgRefList(param);\r\n    });\r\n\r\n    this._taskInputMsgRefSearch.on('select_item', (item) => {\r\n      this._onTaskInputMsgRefSearchChanged(item);\r\n    });\r\n\r\n    this._taskInputMsgRefSearch.on('add_item', () => {\r\n      this._onAddNewInputMsgAttribute();\r\n    });\r\n\r\n    this._taskOutputMsgRefExp.on('expand', () => {\r\n      this._onExpandOutputMsgRefExp();\r\n    });\r\n\r\n    this._taskOutputMsgRefWSList.on('add_item', () => {\r\n      this._onAddWebServiceIntoList();\r\n    });\r\n\r\n    this._taskOutputMsgRefWSList.on('edit_item', (status) => {\r\n      this._onEditWebServiceIntoList(status);\r\n    });\r\n\r\n    this._taskOutputMsgRefWSList.on('selected_item', (item) => {\r\n      this._onSelectWebServiceIntoList(item);\r\n    });\r\n\r\n    this._taskOutputWebServiceSearch.on('select_item', (item) => {\r\n      this._onSelectOutputWebServiceSearch(item);\r\n    });\r\n\r\n    this._taskOutputMsgRefBindingList.on('selected_item', (item) => {\r\n      this._onSelectOutputWsBindingsList(item);\r\n    });\r\n\r\n    this._taskOutputMsgRefWSList.on('delete_item', (item) => {\r\n      this._onDeleteWebServiceOutputMsgRefList(item);\r\n    });\r\n\r\n    this._taskOutputMsgRefWSList.on('delete_all_items', () => {\r\n      this._onDeleteAllWebServiceOutputMsgRefList();\r\n    });\r\n\r\n    this._taskOutputWSBindingType.addEventListener('input', () => {\r\n      this._onTaskWsAttributeTypeChanged();\r\n    });\r\n\r\n    const radiosWs = this._wrapOutputBindingAttrType.querySelectorAll(\r\n      'input[type=radio]',\r\n    );\r\n    radiosWs.forEach((radio) => {\r\n      radio.addEventListener('input', () => {\r\n        this._onWebServiceBindingAttrTypeChanged();\r\n      });\r\n    });\r\n\r\n    this._taskOutputBindingAttrSearch.on('select_item', (item) => {\r\n      this._onWebServiceBindingAttributeChanged(item);\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onWebServiceBindingValueChanged();\r\n      },\r\n      this._taskOutputWSBindingValue,\r\n      'input',\r\n      100,\r\n    );\r\n\r\n    this._taskMultiInstanceType.addEventListener('input', () => {\r\n      this._onTaskMultiInstanceTypeChanged();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onValidateMultiplicationNumber();\r\n        this._onTaskMultiplicationNumberChanged();\r\n      },\r\n      this._taskMultiplicationNumber,\r\n      'input',\r\n      100,\r\n    );\r\n  }\r\n\r\n  _canShowComponentAccordingTaskType(component, taskType) {\r\n    if (TSK_SHOW_CONFIG[taskType].all) {\r\n      return TSK_SHOW_CONFIG[taskType].all;\r\n    }\r\n    return TSK_SHOW_CONFIG[taskType][component];\r\n  }\r\n\r\n  _showGenericComponents(el) {\r\n    this._fillTaskTypeAccordingFirstTask(el);\r\n    this._taskNameInput.selectedItem = {\r\n      id: el.taskId,\r\n      name: el.taskName,\r\n      label: el.title,\r\n    };\r\n    // this._taskNameInput.showData();\r\n    this.taskTitleInput = el.title;\r\n    if (!this._taskTitleInput.readOnly) {\r\n      this._taskTitleInput.setAttribute('readonly', true);\r\n    }\r\n    this.taskColorInput = el.color;\r\n    this.taskColorInputName = el.color;\r\n    this.taskTypeSelect = el.taskType;\r\n    this.taskComments = el.comments;\r\n    this.taskSkipCondition = el.condition;\r\n    this._taskSkipConditionInput.resetValidate();\r\n    this.documentationInput = el.documentation;\r\n    const canShowLoop = this._canShowComponentAccordingTaskType(\r\n      'loopType',\r\n      el.taskType.toUpperCase(),\r\n    );\r\n    this.loopTypeSelect = canShowLoop ? el.loopType : 'none';\r\n    this._changeVisibility(this.wrapTaskLoopType, canShowLoop);\r\n  }\r\n\r\n  _fillTaskTypeAccordingFirstTask(el) {\r\n    const optionsEvent = ['None', 'User', 'Manual'];\r\n    const firstTaskOptions = [...optionsEvent, 'Service', 'Receive'];\r\n    const optionsType = [...firstTaskOptions, 'Send', 'Script'];\r\n    let realOptions = [...optionsType];\r\n    if (this._checkIsFirstTask(el)) {\r\n      if (this._checkIsStartEventIsMessage()) {\r\n        realOptions = [...optionsEvent];\r\n      } else {\r\n        realOptions = [...firstTaskOptions];\r\n      }\r\n    }\r\n    this._fillSelect(this._taskTypeSelect, realOptions);\r\n  }\r\n\r\n  _cleanSelect(select) {\r\n    while (select.firstElementChild) {\r\n      select.removeChild(select.firstElementChild);\r\n    }\r\n  }\r\n\r\n  _fillSelect(select, options) {\r\n    this._cleanSelect(select);\r\n    options.forEach((optionValue) => {\r\n      const optionEl = document.createElement('option');\r\n      optionEl.value = optionValue.toLowerCase();\r\n      optionEl.innerText = optionValue;\r\n      select.appendChild(optionEl);\r\n    });\r\n  }\r\n\r\n  _checkIsFirstTask(taskElement) {\r\n    // First Task is the next task(s) after start event\r\n    const [startEvent] = getElementsOfType(\r\n      Config.START_EVENT,\r\n      this.editor.elements,\r\n    );\r\n    if (startEvent) {\r\n      const startConnectors = getTransitionsByElement(\r\n        startEvent,\r\n        this.editor.elements,\r\n      );\r\n      if (startConnectors.length > 0) {\r\n        for (let index = 0; index < startConnectors.length; index++) {\r\n          const connector = startConnectors[index];\r\n          if (taskElement.id === connector.to) return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _checkIsStartEventIsMessage() {\r\n    const [startEvent] = getElementsOfType(\r\n      Config.START_EVENT,\r\n      this.editor.elements,\r\n    );\r\n    return startEvent.eventType === 'message';\r\n  }\r\n\r\n  _showGroupsComponents(el) {\r\n    const canShowGroups = this._canShowComponentAccordingTaskType(\r\n      'groups',\r\n      el.taskType.toUpperCase(),\r\n    );\r\n    if (!canShowGroups) {\r\n      this._changeVisibility(this._taskGroupInput.wrapper, canShowGroups);\r\n      this._changeVisibility(this._taskGroupInput.expandZone, canShowGroups);\r\n    } else {\r\n      this._changeVisibility(this._taskGroupInput.wrapper, true);\r\n      this.taskParticipantDocumentation = '';\r\n      this._taskGroupInput.showValue(this._groupsShowValue());\r\n      const groups = this._createParticipantsArrayList();\r\n      // groups.data = el.groups || [];\r\n      groups.data = this._createCustomConditionList(el.groups || []);\r\n      this._taskListParticipants.arrayList = groups;\r\n      this._taskCondParticipant.disabled = true;\r\n      this._taskCondParticipant.resetValidate();\r\n      this._taskDocParticipant.disabled = true;\r\n      this.taskCondParticipant = '';\r\n      this.taskParticipantDocumentation = '';\r\n    }\r\n  }\r\n\r\n  _showScheduleComponents(el) {\r\n    const canShowSchedule = this._canShowComponentAccordingTaskType(\r\n      'schedule',\r\n      el.taskType.toUpperCase(),\r\n    );\r\n    if (!canShowSchedule) {\r\n      this._changeVisibility(this._taskScheduleInput.wrapper, canShowSchedule);\r\n      this._changeVisibility(\r\n        this._taskScheduleInput.expandZone,\r\n        canShowSchedule,\r\n      );\r\n    } else {\r\n      this._taskScheduleSearch.selectedItem = el.scheduleName\r\n        ? { id: el.scheduleId, name: el.scheduleName }\r\n        : undefined;\r\n      this._taskScheduleSubprocSearch.selectedItem = el.scheduleSubprocessName\r\n        ? { id: el.schedule.subprocess, name: el.scheduleSubprocessName }\r\n        : undefined;\r\n      this._taskScheduleTypeSelect.value = el.scheduleType === 'M' ? 'Manual' : '';\r\n      this._scheduleShowValue(el)\r\n        .then((value) => {\r\n          this._taskScheduleInput.showValue(value);\r\n          this._taskScheduleTaskSearch.selectedItem = el.scheduleTask\r\n            ? { id: el.scheduleTask, name: el.scheduleTaskName }\r\n            : undefined;\r\n          const schedule = el.schedule || {};\r\n          if (schedule.subprocess) {\r\n            this._taskScheduleTaskSearch.local = false;\r\n            this._taskScheduleTaskSearch.url = `${Config.SUBPROCESS_TASKS_URL}${schedule.subprocess}`;\r\n          } else {\r\n            this._taskScheduleTaskSearch.local = true;\r\n            this._taskScheduleTaskSearch.data = this._getLocalScheduleTasks();\r\n          }\r\n        })\r\n        .catch((error) => console.warn(error));\r\n\r\n      if (!this.element.schedule) {\r\n        this.taskScheduleTypeSelect = '';\r\n      }\r\n      // const subprocessSelected = this._taskScheduleSubprocSearch.selectedItem;\r\n      // if (!subprocessSelected) {\r\n      //   this._taskScheduleTaskSearch.data = this._getLocalScheduleTasks();\r\n      // }\r\n    }\r\n  }\r\n\r\n  _showRoleComponents(el) {\r\n    const canShowRole = this._canShowComponentAccordingTaskType(\r\n      'role',\r\n      el.taskType.toUpperCase(),\r\n    );\r\n    if (!canShowRole) {\r\n      this._changeVisibility(this._taskRoleSearch.wrapper, canShowRole);\r\n    } else {\r\n      this._changeVisibility(this._taskRoleSearch.wrapper, true);\r\n      this._taskRoleSearch.selectedItem = el.role;\r\n      // if (!this._taskRoleSearch.load) this._taskRoleSearch.load = true;\r\n    }\r\n  }\r\n\r\n  _showStatesComponents(el) {\r\n    if (\r\n      this._taskListEventStates.editStatus\r\n      || this._taskListEventStates.rowEditableSelected\r\n    ) {\r\n      this._taskListEventStates.editStatus = false;\r\n      this._taskListEventStates.rowEditableSelected = null;\r\n    }\r\n    const statesValue = this._statesShowValue(el);\r\n    this._taskStatesInput.showValue(statesValue);\r\n    this._taskListEventStates.arrayListData = this._createCustomConditionList(\r\n      el.states || [],\r\n    );\r\n    this._taskConditionStates.conditionAreaEl.disabled = true;\r\n    this._taskConditionStates.resetValidate();\r\n    this.taskConditionStates = '';\r\n    this._taskDocStates.disabled = true;\r\n    this.taskDocStates = '';\r\n    this.taskSearchEventStates = undefined;\r\n    this.taskSearchStates = undefined;\r\n  }\r\n\r\n  _showEventsComponents(el) {\r\n    this._taskEvents.reset();\r\n    this._taskEvents.eventsList = el.events || [];\r\n    this._taskEventsInput.showValue(this._eventsShowValue(el));\r\n  }\r\n\r\n  _showFormsComponents(el) {\r\n    const canShowForms = this._canShowComponentAccordingTaskType(\r\n      'forms',\r\n      el.taskType.toUpperCase(),\r\n    );\r\n    if (!canShowForms) {\r\n      this._changeVisibility(this._taskFormsInput.wrapper, canShowForms);\r\n      this._changeVisibility(this._taskFormsInput.expandZone, canShowForms);\r\n    } else {\r\n      this._changeVisibility(this._taskFormsInput.wrapper, true);\r\n      const formsValue = this._formsShowValue(el);\r\n      this.taskFormsInput = formsValue;\r\n      this._stepForms = this._getStepsForms(this.element);\r\n      this._taskListStepForms.arrayListData = this._stepForms;\r\n      this._taskListForms.arrayListData = [];\r\n      this._taskSearchForms.selectedItem = undefined;\r\n      this.taskConditionForms = '';\r\n      this._taskConditionForms.resetValidate();\r\n      this.taskDocumentationForms = '';\r\n      this._disableConditionAndDocForms(true);\r\n      this._disableTypeAndSearchForms(true);\r\n      this._stepSelected = this._getStepFormSelected();\r\n    }\r\n  }\r\n\r\n  _showLoopTypeComponents(el) {\r\n    const canShowLoop = this._canShowComponentAccordingTaskType(\r\n      'loopType',\r\n      el.taskType.toUpperCase(),\r\n    );\r\n    this._changeVisibility(this.wrapTaskLoopType, canShowLoop);\r\n    if (!canShowLoop) {\r\n      this._changeVisibility(\r\n        this._taskMultiInstanceLoopType.wrapper,\r\n        canShowLoop,\r\n      );\r\n      this._changeVisibility(this._wrapMultiInstanceType, canShowLoop);\r\n      this._changeVisibility(this._wrapMultiplicationNumber, canShowLoop);\r\n    } else {\r\n      const notNone = canShowLoop && this.loopTypeSelect !== 'none';\r\n      const isAttributeType = canShowLoop && el.multiInstanceType === 'attribute';\r\n      this._changeVisibility(\r\n        this._taskMultiInstanceLoopType.wrapper,\r\n        notNone && isAttributeType,\r\n      );\r\n      this._changeVisibility(this._wrapMultiInstanceType, notNone);\r\n      this._changeVisibility(\r\n        this._wrapMultiplicationNumber,\r\n        notNone && !isAttributeType,\r\n      );\r\n\r\n      this._taskMultiInstanceLoopType.selectedItem = !isEmpty(\r\n        el.multiInstanceAttribute,\r\n      )\r\n        ? { ...el.multiInstanceAttribute }\r\n        : undefined;\r\n      this.taskMultiInstanceType = el.multiInstanceType === 'value';\r\n      this.taskMultiplicationNumber = el.multiInstanceValue || '';\r\n      const labelEl = this._wrapMultiInstanceType.querySelector('.highlighted');\r\n      labelEl.innerText = isAttributeType ? 'Attribute' : 'Value';\r\n    }\r\n  }\r\n\r\n  show(el) {\r\n    this._showGenericComponents(el);\r\n    this._showGroupsComponents(el);\r\n    this._showScheduleComponents(el);\r\n    this._showRoleComponents(el);\r\n    this._showStatesComponents(el);\r\n    this._showEventsComponents(el);\r\n    this._showFormsComponents(el);\r\n    this._showLoopTypeComponents(el);\r\n    this._showInputOutputMessageRefComponents(el);\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _transformLabelAccordingTaskType(el) {\r\n    const capitalizeType = el.taskType.replace(\r\n      /^./,\r\n      el.taskType[0].toUpperCase(),\r\n    );\r\n    const labelInputOutput = this.wrapInputOutputGroup.querySelector(\r\n      '.main__sidepanel__form__label',\r\n    );\r\n    labelInputOutput.innerText = `${capitalizeType}:`;\r\n  }\r\n\r\n  _clearAllInputOutputComponents() {\r\n    this.taskInputOutputGroup = false;\r\n    // Input\r\n    this._taskInputMsgRefExp.showValue([]);\r\n    this._taskInputMsgRefSearch.selectedItem = undefined;\r\n    this.taskWsMethodName = '';\r\n    this._taskInputMsgRefList.arrayListData = [];\r\n    // Output\r\n    this._taskOutputMsgRefExp.showValue([]);\r\n    this._wsSelected = null;\r\n    this._taskOutputMsgRefWSList.arrayListData = [];\r\n    this._taskOutputMsgRefBindingList.arrayListData = [];\r\n    this._taskOutputWebServiceSearch.selectedItem = undefined;\r\n    this.taskOutputWSBindingType = 'none';\r\n    this.taskOutputWSBindingValue = '';\r\n    this._taskOutputWSBindingType.disabled = true;\r\n    this._changeVisibility(this.wrapOutputWSBindingValue, false);\r\n    this._changeVisibility(this._wrapOutputBindingAttrType, false);\r\n    this._changeVisibility(this._taskOutputBindingAttrSearch.wrapper, false);\r\n  }\r\n\r\n  _showInputOutputMessageRefComponents(el) {\r\n    const isInputOrOutput = this._canShowIt(el);\r\n    this._transformLabelAccordingTaskType(el);\r\n    const condition = isInputOrOutput.input || isInputOrOutput.output;\r\n    this._clearAllInputOutputComponents();\r\n    const { taskType } = el;\r\n    if (\r\n      this._checkIsFirstTask(el)\r\n      && (taskType === 'user' || taskType === 'service')\r\n    ) {\r\n      isInputOrOutput.output = false;\r\n    }\r\n    if (isInputOrOutput.input) {\r\n      const value = this._inputMessageRefShowValue(el);\r\n      this._taskInputMsgRefExp.showValue(value);\r\n      this.taskWsMethodName = el.wsMethodName || '';\r\n      this._taskInputMsgRefList.arrayListData = this.taskWsAttributeType === 'P'\r\n        ? el.imrAttrProc || []\r\n        : el.imrAttrEnt || [];\r\n    }\r\n    if (isInputOrOutput.output) {\r\n      const outputValue = this._outputMessageRefShowValue(el);\r\n      this._taskOutputMsgRefExp.showValue(outputValue);\r\n      this._taskOutputMsgRefWSList.arrayListData = this._getOutputWebServicesList(\r\n        el,\r\n      );\r\n    }\r\n    this._changeVisibility(this.wrapInputOutputGroup, condition);\r\n    if (this._taskInputMsgRefExp.isExpand) this._taskInputMsgRefExp.expand();\r\n    if (this._taskOutputMsgRefExp.isExpand) this._taskOutputMsgRefExp.expand();\r\n  }\r\n\r\n  _groupsShowValue() {\r\n    const groups = this.element.groups || [];\r\n    const valueToShow = groups.map((value) => value.name);\r\n    return valueToShow;\r\n  }\r\n\r\n  async _scheduleShowValue(el) {\r\n    const valueToShow = [];\r\n    if (el.schedule) {\r\n      try {\r\n        const scheduleName = await this._getScheduleName(el);\r\n        const type = el.scheduleType === 'M' ? 'Manual' : '';\r\n        const subprocessName = el.scheduleSubprocessName || '';\r\n        const taskName = await this._getTaskName(el);\r\n        const data = [scheduleName, type, subprocessName, taskName];\r\n        data.forEach((value) => {\r\n          if (value !== '') valueToShow.push(value);\r\n        });\r\n      } catch (error) {\r\n        console.warn(error);\r\n      }\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _statesShowValue(el) {\r\n    let valueToShow = [];\r\n    if (el.states) {\r\n      const { states } = el;\r\n      valueToShow = states.map((value) => value.event);\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _eventsShowValue(el) {\r\n    let valueToShow = [];\r\n    if (el.events) {\r\n      const { events } = el;\r\n      valueToShow = events.map((value) => value.name);\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _formsShowValue(el) {\r\n    let valueToShow = '';\r\n    if (el.forms) {\r\n      const countStep = el.forms.length;\r\n      if (countStep > 0) {\r\n        const value = `(${countStep}) - Step`;\r\n        valueToShow = countStep > 1 ? `${value}s` : value;\r\n      }\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _outputMessageRefShowValue(el) {\r\n    const valueToShow = [];\r\n    const webServices = this._getOutputWebServicesList(el);\r\n    if (webServices) {\r\n      webServices.forEach((value) => {\r\n        valueToShow.push(value.busClaName);\r\n      });\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _inputMessageRefShowValue(el) {\r\n    const valueToShow = [];\r\n    if (el.inputMessageRef) {\r\n      valueToShow.push(el.wsMethodName || '');\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  async _getTaskName(el) {\r\n    let taskName = '';\r\n    if (el.scheduleTaskName && el.scheduleTaskName !== '') {\r\n      taskName = el.scheduleTaskName;\r\n    } else if (el.scheduleSubprocessName === '' && el.scheduleTask) {\r\n      const tasks = getElementsOfType(Config.TASK, this.editor.elements);\r\n      tasks.forEach((task) => {\r\n        if (parseInt(task.taskId, 10) === parseInt(el.scheduleTask, 10)) {\r\n          el.scheduleTaskName = task.taskName;\r\n        }\r\n      });\r\n      return el.scheduleTaskName;\r\n    } else if (el.schedule) {\r\n      try {\r\n        const response = await axios.get(Config.TASK_URL);\r\n        if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n          this.showInvalidSession();\r\n        }\r\n        const convert = new Converter();\r\n        const tasks = convert.convertToJson(response.data);\r\n        tasks.forEach((task) => {\r\n          if (parseInt(task.id, 10) === parseInt(el.scheduleTask, 10)) {\r\n            taskName = task.name;\r\n          }\r\n        });\r\n        el.scheduleTaskName = taskName;\r\n      } catch (error) {\r\n        console.warn(error);\r\n      }\r\n    }\r\n    return taskName;\r\n  }\r\n\r\n  async _getScheduleName(el) {\r\n    let scheduleName = '';\r\n    if (el.scheduleName) {\r\n      scheduleName = el.scheduleName;\r\n    } else if (el.schedule) {\r\n      try {\r\n        const response = await axios.get(Config.TASK_SCHEDULE);\r\n        if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n          this.showInvalidSession();\r\n        }\r\n        const convert = new Converter();\r\n        const schedules = convert.convertToJson(response.data);\r\n        schedules.forEach((schedule) => {\r\n          if (parseInt(schedule.id, 10) === parseInt(el.scheduleId, 10)) {\r\n            scheduleName = schedule.name;\r\n          }\r\n        });\r\n        el.scheduleName = scheduleName;\r\n      } catch (error) {\r\n        console.warn(error);\r\n      }\r\n    }\r\n    return scheduleName;\r\n  }\r\n\r\n  _createParticipantsArrayList() {\r\n    const arrayList = {\r\n      header: [i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderName'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderCond'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderDeleteAll')],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: false,\r\n      data: [],\r\n      notShow: ['id', 'conditionDoc', 'condition'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createEventsStatesArrayList() {\r\n    const arrayList = {\r\n      header: [i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderEvent'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderStatus'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderCond'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderEdit'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderDeleteAll')],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: true,\r\n      data: [],\r\n      notShow: ['id', 'idEvent', 'conditionDoc', 'condition', 'idName'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createStepFormsArrayList() {\r\n    const arrayList = {\r\n      header: [i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderStep'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderEntity'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderProcess'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderDeleteAll')],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: false,\r\n      data: this._stepForms,\r\n      notShow: ['id'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _getStepsForms(el) {\r\n    const steps = [];\r\n    if (el.forms) {\r\n      el.forms.forEach((value) => {\r\n        const step = {\r\n          id: parseInt(value.id, 10),\r\n          name: 'Step',\r\n          entity:\r\n            value.EForms && value.EForms.length > 0 ? value.EForms.length : '0',\r\n          process:\r\n            value.PForms && value.PForms.length > 0 ? value.PForms.length : '0',\r\n        };\r\n        steps.push(step);\r\n      });\r\n    }\r\n    return steps;\r\n  }\r\n\r\n  _getOutputWebServicesList(el) {\r\n    const webServices = [];\r\n    const notShowClass = { BPMNAutoComplete: 'BPMNAUTOCOMPLETE' };\r\n    if (el.outputMessageRef) {\r\n      el.outputMessageRef.forEach((ws) => {\r\n        if (ws.busClaName.toUpperCase() !== notShowClass.BPMNAutoComplete) {\r\n          webServices.push(ws);\r\n        }\r\n      });\r\n    }\r\n    return webServices;\r\n  }\r\n\r\n  _createFormsArrayList() {\r\n    const arrayList = {\r\n      header: [\r\n        'name',\r\n        {\r\n          title: 'ro',\r\n          type: 'checkbox',\r\n          key: 'readOnly',\r\n          all: false,\r\n        },\r\n        {\r\n          title: 'multi',\r\n          type: 'checkbox',\r\n          key: 'multiply',\r\n          all: false,\r\n        },\r\n        'cond',\r\n        'delete-all',\r\n      ],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: false,\r\n      data: [],\r\n      notShow: ['id', 'step', 'order', 'formType', 'conditionDoc', 'condition'],\r\n      actions: [\r\n        { key: 'readOnly', type: 'checkbox' },\r\n        { key: 'multiply', type: 'checkbox' },\r\n      ],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createInputMsgRefAttrsArrayList() {\r\n    const arrayList = {\r\n      header: [i18next.t('taskPropsPanel.txtProDesTaskPanelHeadername'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderMulti'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderUk'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderEdit'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderDeleteAll')],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: true,\r\n      data: [],\r\n      notShow: ['id', 'type'],\r\n      actions: [\r\n        { key: 'multivalued', type: 'checkbox' },\r\n        { key: 'uk', type: 'checkbox' },\r\n      ],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createOutputMsgRefWsArrayList() {\r\n    const arrayList = {\r\n      header: [i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderName'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderEdit'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderDeleteAll')],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: true,\r\n      data: [],\r\n      notShow: [\r\n        'id',\r\n        'eventId',\r\n        'busClaId',\r\n        'name',\r\n        'order',\r\n        'WS',\r\n        'bindings',\r\n        'haveCond',\r\n        'condition',\r\n      ],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createWebServiceBindingsArrayList() {\r\n    const arrayList = {\r\n      header: [i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderParam'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderType'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderInOut'), i18next.t('taskPropsPanel.txtProDesTaskPanelHeaderBinding')],\r\n      deleteAction: false,\r\n      deleteActionAll: false,\r\n      editAction: false,\r\n      data: [],\r\n      notShow: ['id'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  async _onExpandScheduleInput() {\r\n    if (this.element) {\r\n      this._showScheduleComponents(this.element);\r\n      const scheduleValue = this._scheduleShowValue(this.element);\r\n      this._taskScheduleInput.showValue(scheduleValue);\r\n    }\r\n  }\r\n\r\n  async _onSelectScheduleAgendaChanged(item) {\r\n    if (item) {\r\n      this.element.createDefaultSchedule();\r\n      this.element.scheduleId = parseInt(item.id, 10);\r\n      this.element.scheduleName = item.name;\r\n      const scheduleValue = await this._scheduleShowValue(this.element);\r\n      this._taskScheduleInput.showValue(scheduleValue);\r\n    }\r\n  }\r\n\r\n  _onSelectRoleTaskChanged(item) {\r\n    if (item) {\r\n      this.element.role = item;\r\n    }\r\n    const condition = !item && this.taskRoleSearch !== '';\r\n    this._taskRoleSearch.toggleDisabledButton(!condition);\r\n  }\r\n\r\n  _onClearRoleTasks() {\r\n    this.element.role.id = undefined;\r\n    this.element.role.name = '';\r\n    this._taskRoleSearch.reloadData();\r\n  }\r\n\r\n  async _onAddNewRoleSearch() {\r\n    const selected = this._taskRoleSearch.selectedItem;\r\n    if (!selected && Config.ENV === 'Production' && this.element) {\r\n      const regex = /^[a-zA-Z][a-zA-Z_]+[a-zA-Z]$/gi;\r\n      const roleValue = this.taskRoleSearch;\r\n      if (regex.test(roleValue)) {\r\n        try {\r\n          const url = `${Config.NEW_ROLE_URL}&name=${roleValue}`;\r\n          const response = await axios.post(url);\r\n          if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n            this.showInvalidSession();\r\n          }\r\n          if (response) {\r\n            const convert = new Converter();\r\n            const [roleCreated] = convert.convertToJson(response.data);\r\n            this.element.role = roleCreated;\r\n            this._taskRoleSearch.selectedItem = roleCreated;\r\n            this._taskRoleSearch.reloadData();\r\n            this._taskRoleSearch.toggleDisabledButton(true);\r\n            // message\r\n            const options = { ...this.OPTIONS_TOAST };\r\n            options.type = 'success';\r\n            options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessTitle');\r\n            options.message = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessMessage');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(i18next.t('taskPropsPanel.txtProDesTaskPanelErrorMessage'));\r\n        }\r\n      } else {\r\n        const options = { ...this.OPTIONS_TOAST };\r\n        options.type = 'danger';\r\n        options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorTitle');\r\n        options.message = `${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageRoleName')} <b>\"${roleValue}\"</b> ${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageIsValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  async _onSelectScheduleTypeChanged() {\r\n    if (this.element) {\r\n      if (this.taskScheduleTypeSelect !== '') {\r\n        this.element.createDefaultSchedule();\r\n        this.element.scheduleType = this.taskScheduleTypeSelect.toLowerCase() === 'manual' ? 'M' : '';\r\n      } else {\r\n        this.element.deleteScheduleProperties(['type']);\r\n      }\r\n      const scheduleValue = await this._scheduleShowValue(this.element);\r\n      this._taskScheduleInput.showValue(scheduleValue);\r\n    }\r\n  }\r\n\r\n  async _onSelectScheduleSubprocessChanged(item) {\r\n    if (item) {\r\n      this.element.createDefaultSchedule();\r\n      this.element.scheduleSubprocess = parseInt(item.id, 10);\r\n      this.element.scheduleSubprocessName = item.name;\r\n      this._taskScheduleTaskSearch.local = false;\r\n      this._taskScheduleTaskSearch.data = [];\r\n      this._taskScheduleTaskSearch.url = `${Config.SUBPROCESS_TASKS_URL}${item.id}`;\r\n      this._taskScheduleTaskSearch.selectedItem = undefined;\r\n      const scheduleValue = await this._scheduleShowValue(this.element);\r\n      this._taskScheduleInput.showValue(scheduleValue);\r\n    }\r\n  }\r\n\r\n  async _onSelectScheduleTaskChanged(item) {\r\n    if (item) {\r\n      this.element.createDefaultSchedule();\r\n      this.element.scheduleTask = parseInt(item.id, 10);\r\n      this.element.scheduleTaskName = item.name;\r\n      const scheduleValue = await this._scheduleShowValue(this.element);\r\n      this._taskScheduleInput.showValue(scheduleValue);\r\n    }\r\n  }\r\n\r\n  async _onClearSchedulePropertyChanged(properties) {\r\n    if (this.element) {\r\n      const hasSubprocessProp = properties.includes('subprocess');\r\n      if (hasSubprocessProp) {\r\n        this._taskScheduleTaskSearch.selectedItem = undefined;\r\n        this._taskScheduleTaskSearch.local = true;\r\n        this._taskScheduleTaskSearch.data = this._getLocalScheduleTasks();\r\n      }\r\n      this.element.deleteScheduleProperties(properties);\r\n      const scheduleValue = await this._scheduleShowValue(this.element);\r\n      this._taskScheduleInput.showValue(scheduleValue);\r\n    }\r\n  }\r\n\r\n  _toggleVisibilityTaskGroup(el) {\r\n    const flag = el.taskType === 'user'\r\n      || el.taskType === 'manual'\r\n      || el.taskType === 'none';\r\n    this._changeVisibility(this._taskGroupInput.wrapper, flag);\r\n  }\r\n\r\n  _onSelectNameChange(item) {\r\n    const actualName = this.element.taskName;\r\n    if (item && actualName !== item.name) {\r\n      this.taskTitleInput = item.label;\r\n      this.element.taskName = item;\r\n      this._taskTitleInput.setAttribute('readonly', true);\r\n    }\r\n    if (\r\n      this.taskTitleInput !== ''\r\n      && this._taskTitleInput.readOnly\r\n      && Config.ENV !== 'Development'\r\n      && !item\r\n    ) {\r\n      this.taskTitleInput = '';\r\n    }\r\n    if (Config.ENV !== 'Development' && this.taskNameInput !== '' && !item) {\r\n      this._taskTitleInput.removeAttribute('readonly');\r\n    } else if (this.taskNameInput === '') {\r\n      this._taskTitleInput.setAttribute('readonly', true);\r\n    }\r\n    const enableBtn = this.taskNameInput !== '' && item === undefined;\r\n    this._taskNameInput.toggleDisabledButton(!enableBtn);\r\n  }\r\n\r\n  _onClearNameInput() {\r\n    this._taskTitleInput.value = '';\r\n    const item = {\r\n      id: '2',\r\n      name: 'Default_Task',\r\n      label: 'Default Task',\r\n    };\r\n    this.taskTitleInput = item.label;\r\n    this.element.taskName = item;\r\n    this._taskTitleInput.setAttribute('readonly', true);\r\n    this._taskNameInput.selectedItem = item;\r\n  }\r\n\r\n  async _onAddNewTaskNameInput() {\r\n    const selected = this._taskNameInput.selectedItem;\r\n    if (\r\n      !selected\r\n      && Config.ENV === 'Production'\r\n      && this.element\r\n      && !this._taskTitleInput.readOnly\r\n    ) {\r\n      const nameExp = new RegExp(/^[a-zA-Z][\\w]+[a-zA-Z0-9]$/gi);\r\n      const nameValue = this.taskNameInput.trim();\r\n      const titleValue = this._taskTitleInput !== ''\r\n        ? this._taskTitleInput.value.trim()\r\n        : nameValue;\r\n      if (nameExp.test(nameValue)) {\r\n        const nameValueUri = encodeURI(nameValue);\r\n        const titleValueUri = encodeURI(titleValue);\r\n        const url = `${Config.NEW_TASK_URL}&name=${nameValueUri}&title=${titleValueUri}`;\r\n        try {\r\n          const response = await axios.post(url);\r\n          if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n            this.showInvalidSession();\r\n          }\r\n          if (response) {\r\n            const convert = new Converter();\r\n            const [taskCreated] = convert.convertToJson(response.data);\r\n            this.element.taskName = taskCreated;\r\n            this.element.title = taskCreated.label;\r\n            if (!this._taskTitleInput.readOnly) {\r\n              this._taskTitleInput.setAttribute('readonly', true);\r\n            }\r\n            this._taskNameInput.selectedItem = taskCreated;\r\n            this._taskNameInput.reloadData();\r\n            this._taskNameInput.toggleDisabledButton(true);\r\n            // message\r\n            const options = this.OPTIONS_TOAST;\r\n            options.type = 'success';\r\n            options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessTitle');\r\n            options.message = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessMessageTask');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(i18next.t('taskPropsPanel.txtProDesTaskPanelErrorMessageTask'));\r\n        }\r\n      } else {\r\n        const options = { ...this.OPTIONS_TOAST };\r\n        options.type = 'danger';\r\n        options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorTitle');\r\n        options.message = `${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageTaskName')} <b>\"${nameValue}\"</b> ${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageIsValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onSelectParticipantItem(item) {\r\n    if (item) {\r\n      this._taskCondParticipant.conditionAreaEl.disabled = false;\r\n      this._taskCondParticipant.conditionArea = item.condition || '';\r\n      this.taskParticipantDocumentation = item.conditionDoc || '';\r\n      this._taskDocParticipant.disabled = false;\r\n      const message = `\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageParticipantName')}</b> ${item.name}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageCondition')}</b> ${item.haveCond}\r\n      `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  _onStateConditionChanged(condition) {\r\n    const selected = this._taskListEventStates.rowSelected;\r\n    if (selected) {\r\n      this.element.setPropertyObject(\r\n        selected,\r\n        'states',\r\n        'condition',\r\n        condition,\r\n      );\r\n      this._taskListEventStates.arrayList.data = this._createCustomConditionList(\r\n        this.element.states,\r\n      );\r\n      this._taskListEventStates.refreshList();\r\n    }\r\n  }\r\n\r\n  _onParticipantConditionChanged(condition) {\r\n    const selected = this._taskListParticipants.rowSelected;\r\n    if (selected) {\r\n      this.element.setPropertyObject(\r\n        selected,\r\n        'groups',\r\n        'condition',\r\n        condition,\r\n      );\r\n      this._taskListParticipants.arrayList.data = this._createCustomConditionList(\r\n        this.element.groups,\r\n      );\r\n      this._taskListParticipants.refreshList();\r\n    }\r\n  }\r\n\r\n  _onParticipantDocumentationChanged() {\r\n    const selected = this._taskListParticipants.rowSelected;\r\n    if (selected) {\r\n      this.element.setPropertyObject(\r\n        selected,\r\n        'groups',\r\n        'conditionDoc',\r\n        this.taskParticipantDocumentation,\r\n      );\r\n    }\r\n  }\r\n\r\n  _onSelectSearchParticipant(item) {\r\n    if (Config.ENV === 'Production') {\r\n      const condition = item === undefined && this.taskSearchParticipant !== '';\r\n      this._taskSearchParticipant.toggleDisabledButton(!condition);\r\n    }\r\n  }\r\n\r\n  async _onAddNewParticipant() {\r\n    const selected = this._taskSearchParticipant.selectedItem;\r\n    if (!selected && Config.ENV === 'Production') {\r\n      const nameExp = new RegExp(/^[a-zA-Z][\\w]+[a-zA-Z0-9]$/gi);\r\n      const newParticipant = this.taskSearchParticipant.trim();\r\n      if (nameExp.test(newParticipant)) {\r\n        const url = `${Config.NEW_PARTICIPANT_URL}&name=${encodeURI(\r\n          newParticipant,\r\n        )}`;\r\n        try {\r\n          const response = await axios.post(url);\r\n          if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n            this.showInvalidSession();\r\n          }\r\n          if (response) {\r\n            const converter = new Converter();\r\n            const [participant] = converter.convertToJson(response.data);\r\n            this._taskSearchParticipant.selectedItem = participant;\r\n            this._taskSearchParticipant.reloadData();\r\n            this._taskSearchParticipant.toggleDisabledButton(true);\r\n            // message\r\n            const options = { ...this.OPTIONS_TOAST };\r\n            options.type = 'success';\r\n            options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessTitle');\r\n            options.message = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessMessageParticipant');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(i18next.t('taskPropsPanel.txtProDesTaskPanelErrorMessageParticipant'), error);\r\n        }\r\n      } else {\r\n        const options = { ...this.OPTIONS_TOAST };\r\n        options.type = 'danger';\r\n        options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorTitle');\r\n        options.message = `${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageTaskParticipant')} <b>\"${newParticipant}\"</b> ${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageIsValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onAddParticipantSelect() {\r\n    const participant = this._taskSearchParticipant.selectedItem;\r\n    if (participant) {\r\n      if (!this.element.groups) {\r\n        this.element.createDefaultGroup();\r\n        this.element.groups = this._taskListParticipants.arrayList.data;\r\n      }\r\n      const newGroups = [...this.element.groups];\r\n      const { id, name } = participant;\r\n      const exist = newGroups.findIndex(\r\n        (value) => parseInt(value.id, 10) === parseInt(id, 10),\r\n      );\r\n      if (exist === -1) {\r\n        newGroups.push({ id, name });\r\n        this.element.groups = newGroups;\r\n        this._taskListParticipants.arrayList.data = this._createCustomConditionList(\r\n          this.element.groups || [],\r\n        );\r\n        this._taskListParticipants.refreshList();\r\n        this._taskGroupInput.showValue(this._groupsShowValue());\r\n        this._taskSearchParticipant.selectedItem = undefined;\r\n        this._taskListParticipants._scrollToRow({ id, name }, () => this._onSelectParticipantItem({ id, name }));\r\n      }\r\n    }\r\n  }\r\n\r\n  _getObjectIndexById(id, list) {\r\n    return list.findIndex((value) => {\r\n      return parseInt(value.id, 10) === parseInt(id, 10);\r\n    });\r\n  }\r\n\r\n  _onDeleteParticipantItem(item) {\r\n    if (item) {\r\n      const index = this._getObjectIndexById(item.id, this.element.groups);\r\n      const newGroups = this._taskListParticipants.arrayList.data.map(\r\n        (value) => value,\r\n      );\r\n      if (index !== -1) {\r\n        newGroups.splice(index, 1);\r\n        this.element.groups = newGroups;\r\n        this._taskGroupInput.showValue(this._groupsShowValue());\r\n        this._taskListParticipants.arrayList.data = this._createCustomConditionList(\r\n          this.element.groups,\r\n        );\r\n        this._taskListParticipants.refreshList();\r\n        this.taskCondParticipant = '';\r\n        this.taskParticipantDocumentation = '';\r\n        this._taskCondParticipant.disabled = true;\r\n        this._taskDocParticipant.disabled = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDeleteAllParticipantItems() {\r\n    this.element.groups = [];\r\n    this._taskGroupInput.showValue(this._groupsShowValue());\r\n    this._taskListParticipants.arrayList.data = this.element.groups;\r\n  }\r\n\r\n  _onAddStateList() {\r\n    const eventSelected = this._taskSearchEventStates.selectedItem;\r\n    const statusSelected = this._taskSearchStates.selectedItem;\r\n    const states = this.element.states || [];\r\n    if (eventSelected && statusSelected) {\r\n      const newState = {\r\n        id: parseInt(states.length + 1, 10),\r\n        idEvent: parseInt(eventSelected.id, 10),\r\n        event: eventSelected.name,\r\n        idName: parseInt(statusSelected.id, 10),\r\n        name: statusSelected.name,\r\n        condition: '',\r\n        conditionDoc: '',\r\n      };\r\n      this.element.createDefaultStates();\r\n      const copyStates = this.element.states.map((value) => value);\r\n      copyStates.push(newState);\r\n      this.element.states = copyStates;\r\n      this._taskListEventStates.arrayList.data = this._createCustomConditionList(\r\n        this.element.states || [],\r\n      );\r\n      this._taskListEventStates.refreshList();\r\n      this._taskStatesInput.showValue(this._statesShowValue(this.element));\r\n      this._taskListEventStates._scrollToRow(newState, () => this._onSelectedEventState(newState));\r\n    }\r\n  }\r\n\r\n  _onSelectedEventState(item) {\r\n    if (item) {\r\n      this._taskConditionStates.conditionAreaEl.disabled = false;\r\n      this._taskDocStates.disabled = false;\r\n      this.taskConditionStates = item.condition || '';\r\n      this.taskDocStates = item.conditionDoc || '';\r\n\r\n      const message = `\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageEvent')}</b> ${item.event}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageStatus')}</b> ${item.name}\r\n      `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  _onEditEventState(status) {\r\n    const statesToEdit = this._taskListEventStates.rowEditableSelected;\r\n    if (status) {\r\n      this.taskConditionStates = statesToEdit.condition || '';\r\n      this.taskDocStates = statesToEdit.conditionDoc || '';\r\n      this._taskConditionStates.disabled = true;\r\n      this._taskDocStates.disabled = true;\r\n    }\r\n    this._taskSearchEventStates.selectedItem = (status && statesToEdit) && { id: statesToEdit.idEvent, name: statesToEdit.event };\r\n    this._taskSearchStates.selectedItem = (status && statesToEdit) && { id: statesToEdit.idName, name: statesToEdit.name };\r\n    this._taskListEventStates.refreshList();\r\n  }\r\n\r\n  _onSelectEventOrStates(item, type) {\r\n    if (item && this._taskListEventStates.editStatus && this.element) {\r\n      const stateToEdit = this._taskListEventStates.rowEditableSelected;\r\n      if (stateToEdit) {\r\n        const params = type === 'event' ? ['idEvent', 'event'] : ['idName', 'name'];\r\n        const values = [parseInt(item.id, 10), item.name];\r\n        //!\r\n        if (type === 'state') {\r\n          stateToEdit.condition = '';\r\n          stateToEdit.conditionDoc = '';\r\n          this.taskConditionStates = stateToEdit.condition || '';\r\n          this.taskDocStates = stateToEdit.conditionDoc || '';\r\n          this._onConditionAndDocumentationStatesChanged('', 'condition');\r\n          this._onConditionAndDocumentationStatesChanged('', 'conditionDoc');\r\n        }\r\n\r\n        //!\r\n        this.element.setPropertyObject(stateToEdit, 'states', params, values);\r\n        this._taskListEventStates.arrayList.data = this._createCustomConditionList(\r\n          this.element.states || [],\r\n        );\r\n        this._taskListEventStates.refreshList();\r\n      }\r\n    }\r\n  }\r\n\r\n  _onConditionAndDocumentationStatesChanged(value, type) {\r\n    const eventSelected = this._taskListEventStates.rowSelected || this._taskListEventStates._rowEditableSelected;\r\n    if (eventSelected) {\r\n      this.element.setPropertyObject(eventSelected, 'states', type, value);\r\n      this._taskListEventStates.arrayList.data = this._createCustomConditionList(\r\n        this.element.states || [],\r\n      );\r\n      this._taskListEventStates.refreshList();\r\n    }\r\n  }\r\n\r\n  _onDeleteEvenStatestList(item) {\r\n    const indexItem = this.element.objectIndex(item, 'states');\r\n    if (indexItem !== -1) {\r\n      const copyStates = this.element.states.map((value) => value);\r\n      copyStates.splice(indexItem, 1);\r\n      this.element.states = copyStates;\r\n      this._taskListEventStates.arrayList.data = this._createCustomConditionList(\r\n        this.element.states || [],\r\n      );\r\n      this._taskListEventStates.refreshList();\r\n      this.taskConditionStates = '';\r\n      this.taskDocStates = '';\r\n      this._taskConditionStates.conditionAreaEl.disabled = true;\r\n      this._taskDocStates.disabled = true;\r\n      this._taskStatesInput.showValue(this._statesShowValue(this.element));\r\n    }\r\n  }\r\n\r\n  _onDeleteAllEventStatesList() {\r\n    this.element.states = [];\r\n    this.taskConditionStates = '';\r\n    this.taskDocStates = '';\r\n    this._taskConditionStates.disabled = true;\r\n    this._taskDocStates.disabled = true;\r\n  }\r\n\r\n  _deletePropertyWhenTaskTypeChanged(taskType) {\r\n    const components = TSK_SHOW_CONFIG[taskType];\r\n    const props = Object.entries(components);\r\n    if (this.element) {\r\n      for (let index = 0; index < props.length; index++) {\r\n        const property = props[index][0];\r\n        if (this.element.properties[property] && !props[index][1]) {\r\n          this.element.deletePropertyByName(property);\r\n        }\r\n      }\r\n      // Delete Input and Output Msg References Prop Values\r\n      this.element.deletePropertyByName('inputMessageRef');\r\n      this.element.deletePropertyByName('outputMessageRef');\r\n      // Delete Groups Prop Values\r\n      if (!components.groups) {\r\n        this.element.deletePropertyByName('groups');\r\n      }\r\n      // Delete Loop Prop Values\r\n      this._cleanAndDeleteLoopProperties();\r\n    }\r\n  }\r\n\r\n  _cleanAndDeleteLoopProperties() {\r\n    if (this.element.loopType !== 'none' || this.element.multiInstance) {\r\n      this.element.deletePropertyByName('multiInstance');\r\n      this.element.setPropertyWithoutSave('loopType', 'none');\r\n    }\r\n  }\r\n\r\n  _showAccording(el) {\r\n    this._showGroupsComponents(el);\r\n    this._showLoopTypeComponents(el);\r\n    this._showRoleComponents(el);\r\n    this._showFormsComponents(el);\r\n    this._showInputOutputMessageRefComponents(el);\r\n  }\r\n\r\n  _onTaskTypeSelectChanged() {\r\n    const taskType = this.taskTypeSelect;\r\n    this.element.taskType = taskType;\r\n    this._deletePropertyWhenTaskTypeChanged(taskType.toUpperCase());\r\n    this._showAccording(this.element);\r\n    this._switchInputOutputArea();\r\n\r\n    /* when the task type changes you have\r\n    to check the types of the boundary events */\r\n    const { boundaryEvents } = this.element;\r\n    const condition = taskType === 'receive'\r\n      || taskType === 'send'\r\n      || taskType === 'service'\r\n      || taskType === 'script';\r\n    if (boundaryEvents.length > 0 && condition) {\r\n      boundaryEvents.forEach((boundary) => {\r\n        const boundaryId = boundary;\r\n        const found = this.editor.elements.find(\r\n          (event) => event.id === boundaryId,\r\n        );\r\n        if (found) {\r\n          const { eventType } = found;\r\n          if (eventType === 'message') {\r\n            found.setTypeWithoutSave('timer');\r\n            found.deletePropertyByName('message');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _switchInputOutputArea() {\r\n    if (this.taskInputOutputGroup) {\r\n      this.taskInputOutputGroup = false;\r\n      this._onInputOutputGroupChanged();\r\n      this._showInputOutputMessageRefComponents(this.element);\r\n    }\r\n  }\r\n\r\n  _onTaskColorChanged() {\r\n    this.element.color = this.taskColorInput;\r\n    this.taskColorInputName = this.taskColorInput;\r\n  }\r\n\r\n  _onLoopTypeSelectChanged() {\r\n    this.element.loopType = this.loopTypeSelect;\r\n    if (this.element.multiInstance) {\r\n      delete this.element.properties.multiInstance;\r\n    } else {\r\n      this.element.multiInstance = {\r\n        type: 'attribute',\r\n      };\r\n    }\r\n    this._showLoopTypeComponents(this.element);\r\n  }\r\n\r\n  _onTaskMultiInstanceTypeChanged() {\r\n    const labelEl = this._wrapMultiInstanceType.querySelector('.highlighted');\r\n    if (this.element) {\r\n      const isValueType = this.taskMultiInstanceType === 'value';\r\n      if (!isValueType) {\r\n        this._taskMultiInstanceLoopType.selectedItem = undefined;\r\n      } else {\r\n        this.taskMultiplicationNumber = '';\r\n      }\r\n      this._changeVisibility(this._wrapMultiInstanceLoopType, !isValueType);\r\n      this._changeVisibility(this._wrapMultiplicationNumber, isValueType);\r\n      this.element.multiInstanceType = this.taskMultiInstanceType;\r\n      labelEl.innerText = isValueType ? 'Value' : 'Attribute';\r\n    }\r\n  }\r\n\r\n  _onValidateMultiplicationNumber() {\r\n    const value = this.taskMultiplicationNumber;\r\n    if (value < 1 || isNaN(value)) {\r\n      this.taskMultiplicationNumber = 1;\r\n    }\r\n    if (value === '') {\r\n      this.taskMultiplicationNumber = '';\r\n    } else {\r\n      this.taskMultiplicationNumber = parseInt(value, 10);\r\n    }\r\n  }\r\n\r\n  _onTaskMultiplicationNumberChanged() {\r\n    if (this.element) {\r\n      const multiplication = this.taskMultiplicationNumber;\r\n      const actual = this.element.multiInstanceValue;\r\n      if (actual !== multiplication && multiplication !== '') {\r\n        this.element.multiInstanceValue = multiplication;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onTaskNameChanged() {\r\n    this.element.name = this.taskNameInput;\r\n  }\r\n\r\n  _onTaskCommentsChanged() {\r\n    this.element.comments = this.taskComments;\r\n  }\r\n\r\n  _onTaskSkipConditionChanged(condition) {\r\n    this.element.condition = condition;\r\n  }\r\n\r\n  async _getBindings(classId) {\r\n    let bindings = [];\r\n    let url = Config.TASK_BINDINGS_URL;\r\n    if (Config.ENV !== 'Development') url = `${url}${classId}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      if (response.data.toUpperCase().indexOf('HTML') > -1) {\r\n        this.showInvalidSession();\r\n      }\r\n      const convert = new Converter();\r\n      bindings = convert.convertToJson(response.data);\r\n    } catch (error) {\r\n      console.warn('Error:', error);\r\n    }\r\n    const parameters = mapInOutParameters(bindings);\r\n    return this._customBindingsParameters(parameters);\r\n  }\r\n\r\n  _customBindingsParameters(parameters = []) {\r\n    if (this.wsSelected) {\r\n      const { bindings } = this.wsSelected;\r\n      const indexBindings = indexByProperty(bindings || [], 'busClaParId');\r\n      return parameters.map((parameter) => {\r\n        const existBinding = indexBindings[parameter.id];\r\n        return {\r\n          ...parameter,\r\n          binding: existBinding\r\n            ? this._getEspecificationBinding(existBinding)\r\n            : 'None',\r\n        };\r\n      });\r\n    }\r\n    return parameters;\r\n  }\r\n\r\n  _getEspecificationBinding(binding) {\r\n    const isValue = binding.busClaParBndType === 'V'\r\n      && binding.busClaParBndValue !== ''\r\n      && binding.busClaParBndValue;\r\n    const isProcess = binding.busClaParBndType === 'P';\r\n    const isEntity = binding.busClaParBndType === 'E';\r\n    const isAttribute = (isProcess || isEntity) && binding.attId !== -1 && binding.attId;\r\n    if (isValue) return 'Value';\r\n    if (isAttribute) return 'Attribute';\r\n    return 'None';\r\n  }\r\n\r\n  _onTaskEventsChanged(events) {\r\n    if (this.element) {\r\n      this.element.events = events;\r\n      this._taskEventsInput.showValue(this._eventsShowValue(this.element));\r\n    }\r\n  }\r\n\r\n  _getMaxId(list) {\r\n    let max = 0;\r\n    list.forEach((value) => {\r\n      if (parseInt(value.id, 10) > max) max = parseInt(value.id, 10);\r\n    });\r\n    return max;\r\n  }\r\n\r\n  _getStepFormSelected() {\r\n    const selected = this._taskListStepForms.rowSelected;\r\n    let stepSelected;\r\n    if (this.element && selected) {\r\n      const steps = this.element.forms || [];\r\n      stepSelected = steps.find((value) => {\r\n        return parseInt(value.id, 10) === parseInt(selected.id, 10);\r\n      });\r\n    }\r\n    return stepSelected;\r\n  }\r\n\r\n  _onExpandForms() {\r\n    this._stepForms = this._getStepsForms(this.element);\r\n    this._taskListStepForms.arrayListData = this._stepForms;\r\n  }\r\n\r\n  _disableConditionAndDocForms(flag) {\r\n    this._taskConditionForms.conditionAreaEl.disabled = flag;\r\n    this._taskDocumentationForms.disabled = flag;\r\n  }\r\n\r\n  _disableTypeAndSearchForms(flag) {\r\n    this._taskSearchForms.disabled = flag;\r\n    this._taskTypeForms.disabled = flag;\r\n  }\r\n\r\n  _onTaskStepListFormsSelect(item) {\r\n    const step = this._getStepFormSelected();\r\n    if (this._stepSelected !== step) {\r\n      this._disableTypeAndSearchForms(false);\r\n      this._disableConditionAndDocForms(true);\r\n      this._stepSelected = step;\r\n      this.taskConditionForms = '';\r\n      this.taskDocumentationForms = '';\r\n      this._taskListForms.arrayListData = [];\r\n      if (parseInt(item.entity, 10) > 0 || parseInt(item.process, 10) > 0) {\r\n        const type = this.taskTypeForms === 'entity' ? 'E' : 'P';\r\n        if (this.element) {\r\n          // const forms = step[`${type}Forms`];\r\n          const forms = this._createCustomConditionList(step[`${type}Forms`]);\r\n          this._taskListForms.arrayListData = forms || [];\r\n        }\r\n      }\r\n\r\n      const message = `\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageFormStep')}</b><br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageEntityForms')}</b> ${item.entity}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageProcessForms')}</b> ${item.process}\r\n      `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  _onTaskFormListSelect(item) {\r\n    if (item) {\r\n      const { condition, conditionDoc } = item;\r\n      this.taskConditionForms = condition || '';\r\n      this.taskDocumentationForms = conditionDoc || '';\r\n      this._disableConditionAndDocForms(false);\r\n\r\n      const message = `\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageName')}</b> ${item.name}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageReadOnly')}</b> ${item.readOnly ? 'True' : 'False'}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageMultiply')}</b> ${item.multiply ? 'True' : 'False'}\r\n      `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  _createCustomConditionList(list = []) {\r\n    const customList = cloneDeep(list);\r\n    customList.forEach((frm) => {\r\n      frm.haveCond = frm.condition && frm.condition !== '' ? 'Yes' : 'No';\r\n    });\r\n    return customList;\r\n  }\r\n\r\n  _onTaskTypeFormsSelectChanged() {\r\n    const stepSelected = this._getStepFormSelected();\r\n    const type = this.taskTypeForms === 'entity' ? 'E' : 'P';\r\n    const url = type === 'E' ? Config.TASK_ENT_FORMS_URL : Config.TASK_PROC_FORMS_URL;\r\n    if (stepSelected) {\r\n      this._taskSearchForms.url = url;\r\n      // const forms = stepSelected[`${type}Forms`];\r\n      const forms = this._createCustomConditionList(\r\n        stepSelected[`${type}Forms`] || [],\r\n      );\r\n      this._taskListForms.arrayListData = forms;\r\n      this.taskConditionForms = '';\r\n      this.taskDocumentationForms = '';\r\n      this._disableConditionAndDocForms(true);\r\n    }\r\n  }\r\n\r\n  _onTaskConditionAndDocFormsChanged(prop, value) {\r\n    const stepSelected = this._getStepFormSelected();\r\n    const formSelected = this._taskListForms.rowSelected;\r\n    const type = this.taskTypeForms === 'entity' ? 'EForms' : 'PForms';\r\n    const indexStep = this.element.objectIndex(stepSelected, 'forms');\r\n    const indexForm = this.element.objectIndex(\r\n      formSelected,\r\n      stepSelected[type],\r\n    );\r\n    if (indexForm !== -1 && indexStep !== -1 && this.element) {\r\n      this.element.setSpecificFormInStepByIndex(\r\n        indexStep,\r\n        type,\r\n        undefined,\r\n        indexForm,\r\n        prop,\r\n        value,\r\n      );\r\n      const forms = this.element.forms[indexStep][type];\r\n      this._taskListForms.arrayList.data = this._createCustomConditionList(\r\n        forms,\r\n      );\r\n      this._taskListForms.refreshList();\r\n    }\r\n  }\r\n\r\n  _onSelectTaskSearchForms(item) {\r\n    const condition = !item && this.taskSearchForms !== '';\r\n    this._taskSearchForms.toggleDisabledButton(!condition);\r\n  }\r\n\r\n  async _onAddNewTaskForm() {\r\n    const selected = this._taskSearchForms.selectedItem;\r\n    if (!selected && Config.ENV === 'Production' && this.element) {\r\n      const regex = /^[a-zA-Z][a-zA-Z0-9_]+[a-zA-Z0-9]$/gi;\r\n      const formValue = this.taskSearchForms;\r\n      if (regex.test(formValue)) {\r\n        try {\r\n          const baseUrl = this.taskTypeForms === 'entity'\r\n            ? Config.NEW_ENT_FORM_URL\r\n            : Config.NEW_FORM_URL;\r\n          const url = `${baseUrl}&name=${formValue}`;\r\n          const response = await axios.post(url);\r\n          if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n            this.showInvalidSession();\r\n          }\r\n          if (response) {\r\n            const convert = new Converter();\r\n            const [formCreated] = convert.convertToJson(response.data);\r\n            this.element.role = formCreated;\r\n            this._taskSearchForms.selectedItem = formCreated;\r\n            this._taskSearchForms.reloadData();\r\n            this._taskSearchForms.toggleDisabledButton(true);\r\n            // message\r\n            const options = { ...this.OPTIONS_TOAST };\r\n            options.type = 'success';\r\n            options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessTitle');\r\n            options.message = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessMessageForm');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(i18next.t('taskPropsPanel.txtProDesTaskPanelErrorMessageForm'));\r\n        }\r\n      } else {\r\n        const options = { ...this.OPTIONS_TOAST };\r\n        options.type = 'danger';\r\n        options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorTitle');\r\n        options.message = `${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageTaskForm')} <b>\"${formValue}\"</b> ${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageIsValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onAddTaskStepListForms() {\r\n    if (this.element) {\r\n      if (!this.element.forms) this.element.forms = [];\r\n      const steps = this.element.forms.slice();\r\n      const max = this._getMaxId(steps);\r\n      const step = { id: max + 1 };\r\n      steps.push(step);\r\n      this.element.forms = steps;\r\n      this._taskListStepForms.arrayList.data = this._getStepsForms(\r\n        this.element,\r\n      );\r\n      this._taskListStepForms.refreshList();\r\n      this.taskFormsInput = this._formsShowValue(this.element);\r\n      this._taskListStepForms._scrollToRow(step, () => this._onTaskStepListFormsSelect(step));\r\n    }\r\n  }\r\n\r\n  _onDeleteTaskStepListForms(item) {\r\n    const index = this.element.forms.findIndex((value) => {\r\n      return parseInt(value.id, 10) === parseInt(item.id, 10);\r\n    });\r\n    if (index !== -1) {\r\n      const copyForms = this.element.forms.slice();\r\n      copyForms.splice(index, 1);\r\n      this.element.forms = copyForms;\r\n      this._taskListStepForms.arrayList.data = this._getStepsForms(\r\n        this.element,\r\n      );\r\n      this._taskListStepForms.refreshList();\r\n      this.taskFormsInput = this._formsShowValue(this.element);\r\n    }\r\n    this._disabledWhenDeleteInForms();\r\n  }\r\n\r\n  _disabledWhenDeleteInForms() {\r\n    this._disableTypeAndSearchForms(true);\r\n    this._disableConditionAndDocForms(true);\r\n    this.taskConditionForms = '';\r\n    this.taskDocumentationForms = '';\r\n    this.taskSearchForms = '';\r\n    this._taskListForms.arrayListData = [];\r\n  }\r\n\r\n  _onDeleteAllTaskStepListForms() {\r\n    if (this.element) {\r\n      this.element.forms = [];\r\n      this.taskFormsInput = this._formsShowValue(this.element);\r\n      this._disabledWhenDeleteInForms();\r\n    }\r\n  }\r\n\r\n  _onCheckTaskListForm({ value, position, keyName }) {\r\n    if (this.element) {\r\n      const type = this.taskTypeForms === 'entity' ? 'EForms' : 'PForms';\r\n      const stepSelected = this._taskListStepForms.rowSelected;\r\n      const stepIndex = this.element.forms.findIndex((step) => {\r\n        return parseInt(step.id, 10) === parseInt(stepSelected.id, 10);\r\n      });\r\n      if (stepIndex !== -1) {\r\n        const form = this.element.forms[stepIndex][type][position];\r\n        if (form) {\r\n          this.element.setSpecificFormInStepByIndex(\r\n            stepIndex,\r\n            type,\r\n            undefined,\r\n            position,\r\n            keyName,\r\n            value,\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _onAddTaskListForms() {\r\n    const stepSelected = this._getStepFormSelected();\r\n    const type = this.taskTypeForms === 'entity' ? 'EForms' : 'PForms';\r\n    const formToAdd = this._taskSearchForms.selectedItem;\r\n    if (stepSelected && formToAdd) {\r\n      if (!stepSelected[type]) stepSelected[type] = [];\r\n      const form = {\r\n        id: parseInt(formToAdd.id, 10),\r\n        name: formToAdd.name,\r\n        order: stepSelected[type].length,\r\n        readOnly: false,\r\n        multiply: false,\r\n        formType: type.charAt(0),\r\n        condition: '',\r\n        conditionDoc: '',\r\n      };\r\n      const copyForms = stepSelected[type].slice();\r\n      const exist = copyForms.findIndex(\r\n        (value) => parseInt(value.id, 10) === form.id,\r\n      );\r\n      if (exist === -1) {\r\n        copyForms.push(form);\r\n        this.element.setPropertyObject(stepSelected, 'forms', type, copyForms);\r\n        this._taskListForms.arrayList.data = this._createCustomConditionList(\r\n          copyForms,\r\n        );\r\n        this._taskListForms.refreshList();\r\n        this._taskListForms._scrollToRow(form, () => this._onTaskFormListSelect(form));\r\n        const step = this._taskListStepForms.rowSelected;\r\n        const stepTypeForm = this.taskTypeForms;\r\n        step[stepTypeForm] = stepSelected[type].length;\r\n        this._taskListStepForms.refreshList();\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDeleteTaskFormList(item, deleteAll = false) {\r\n    if (item) {\r\n      const type = this.taskTypeForms === 'entity' ? 'EForms' : 'PForms';\r\n      const stepSelected = this._getStepFormSelected();\r\n      const copyForms = deleteAll ? [] : stepSelected[type].slice();\r\n      const indexStep = this.element.objectIndex(stepSelected, 'forms');\r\n      const indexForm = this.element.objectIndex(item, copyForms);\r\n      if ((indexForm !== -1 && indexStep !== -1) || deleteAll) {\r\n        if (!deleteAll) copyForms.splice(indexForm, 1);\r\n        this.element.setSpecificFormInStepByIndex(indexStep, type, copyForms);\r\n        this._taskListForms.arrayList.data = this._createCustomConditionList(\r\n          copyForms,\r\n        );\r\n        this._taskListForms.refreshList();\r\n\r\n        const step = this._taskListStepForms.rowSelected;\r\n        const stepTypeForm = this.taskTypeForms;\r\n        step[stepTypeForm] = `${stepSelected[type].length}`;\r\n        this._taskListStepForms.refreshList();\r\n      }\r\n    }\r\n  }\r\n\r\n  _onOrderStepFormsChanged(actualPos, oldPos, actual, old, data = []) {\r\n    const forms = [];\r\n    for (let index = 0; index < data.length; index++) {\r\n      const step = this.element.forms.find((value) => {\r\n        return parseInt(value.id, 10) === parseInt(data[index].id, 10);\r\n      });\r\n      forms.push(step);\r\n    }\r\n    actual.order = actualPos + 1;\r\n    old.order = oldPos + 1;\r\n    this.element.forms = forms;\r\n  }\r\n\r\n  _onOrderFormsChanged(actualPos, oldPos, actual, old, data = []) {\r\n    actual.order = actualPos;\r\n    old.order = oldPos;\r\n  }\r\n\r\n  _onOrderTaskEventsChanged(actualPos, oldPos, actual, old, data = []) {\r\n    console.log(123);\r\n  }\r\n\r\n  _onTaskMultiInstanceChanged(item) {\r\n    if (this.element) {\r\n      const actualName = this.element.multiInstanceAttributeName || '';\r\n      if (item && actualName !== item.name) {\r\n        const multiInstance = {\r\n          ...this.element.multiInstance,\r\n          attribute: item.name,\r\n          attributeId: parseInt(item.id, 10),\r\n          condition: 'All',\r\n          ordering: 'Parallel',\r\n        };\r\n        this.element.multiInstance = multiInstance;\r\n      }\r\n      const condition = item === undefined && this.taskMultiInstanceLoopType.trim() !== '';\r\n      this._taskMultiInstanceLoopType.toggleDisabledButton(!condition);\r\n    }\r\n  }\r\n\r\n  async _addNewNumericAttribute(name, selected, fnExecuteChanged, search) {\r\n    if (!selected && Config.ENV === 'Production' && this.element) {\r\n      const regex = /^[a-zA-Z][a-zA-Z_]+[a-zA-Z]$/gi;\r\n      if (regex.test(name)) {\r\n        try {\r\n          const url = `${Config.NEW_NUMERIC_ATTR_URL}${name}`;\r\n          const response = await axios.post(url);\r\n          if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n            this.showInvalidSession();\r\n          }\r\n          if (response) {\r\n            const convert = new Converter();\r\n            const [attrCreated] = convert.convertToJson(response.data);\r\n            fnExecuteChanged(attrCreated);\r\n            search.selectedItem = attrCreated;\r\n            search.reloadData();\r\n            search.toggleDisabledButton(true);\r\n            // message\r\n            const options = { ...this.OPTIONS_TOAST };\r\n            options.type = 'success';\r\n            options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessTitle');\r\n            options.message = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessMessageAttr');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(i18next.t('taskPropsPanel.txtProDesTaskPanelErrorMessageAttr'));\r\n        }\r\n      } else {\r\n        const options = { ...this.OPTIONS_TOAST };\r\n        options.type = 'danger';\r\n        options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorTitle');\r\n        options.message = `${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageTaskAttr')} <b>\"${name}\"</b> ${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageIsValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onAddMultiInstanceAttribute() {\r\n    const name = this.taskMultiInstanceLoopType.trim();\r\n    const selected = this._taskMultiInstanceLoopType.selectedItem;\r\n    this._addNewNumericAttribute(\r\n      name,\r\n      selected,\r\n      (item) => this._onTaskMultiInstanceChanged(item),\r\n      this._taskMultiInstanceLoopType,\r\n    );\r\n  }\r\n\r\n  _onExpandInputMessageRefExp() {\r\n    // if (!this._taskInputMsgRefSearch.load) {\r\n    //   this._taskInputMsgRefSearch.load = true;\r\n    // }\r\n  }\r\n\r\n  _onTaskWsMethodNameChanged() {\r\n    if (this.element) {\r\n      this.element.wsMethodName = this.taskWsMethodName;\r\n      const value = this._inputMessageRefShowValue(this.element);\r\n      this._taskInputMsgRefExp.showValue(value);\r\n    }\r\n  }\r\n\r\n  _onSelectTaskWsAttributeType() {\r\n    if (this.element) {\r\n      if (!this.element.inputMessageRef) this.element.inputMessageRef = {};\r\n      const type = this.taskWsAttributeType === 'P' ? 'attrProc' : 'attrEnt';\r\n      if (this.element.inputMessageRef) {\r\n        const attrs = this.element.inputMessageRef[type] || [];\r\n        this._taskInputMsgRefList.arrayList.data = attrs;\r\n        this._taskInputMsgRefList.refreshList();\r\n        this._getBindings(this.wsSelected.busClaId).then((bindings) => {\r\n          this._taskOutputMsgRefBindingList.arrayList.data = bindings;\r\n          this._taskOutputMsgRefBindingList.refreshList();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  _onEditTaskInputMsgRefList(status) {\r\n    this._taskWsMethodName.disabled = status;\r\n    this._taskWsAttributeType.disabled = status;\r\n    const editAttr = this._taskInputMsgRefList.rowEditableSelected;\r\n    this._taskInputMsgRefSearch.selectedItem = status\r\n      ? { id: editAttr.id, name: editAttr.name }\r\n      : undefined;\r\n  }\r\n\r\n  _onAddTaskInputMsgRefList() {\r\n    const type = this.taskWsAttributeType === 'P' ? 'attrProc' : 'attrEnt';\r\n    const addAttr = this._taskInputMsgRefSearch.selectedItem;\r\n    let attrs = [];\r\n    const inputMessageRef = this.element.inputMessageRef || [];\r\n    if (inputMessageRef[type]) {\r\n      attrs = this.element.inputMessageRef[type];\r\n    }\r\n    const exist = attrs.find((value) => {\r\n      return parseInt(addAttr.id, 10) === parseInt(value.id, 10);\r\n    });\r\n    if (this.element && addAttr && !exist) {\r\n      const attr = {\r\n        id: parseInt(addAttr.id, 10),\r\n        name: addAttr.name,\r\n        multivalued: false,\r\n        type: this.taskWsAttributeType,\r\n        uk: false,\r\n      };\r\n      this.element.insertAttributeInputMsgRef(type, attr);\r\n      this._taskInputMsgRefList.arrayList.data = this.element.inputMessageRef[\r\n        type\r\n      ];\r\n      this._taskInputMsgRefList.refreshList();\r\n      this._taskInputMsgRefList._scrollToRow(attr, () => this._onSelectInputMsgRefList(attr));\r\n    }\r\n  }\r\n\r\n  _onDeleteTaskInputMsgRefList(item) {\r\n    const type = this.taskWsAttributeType === 'P' ? 'attrProc' : 'attrEnt';\r\n    if (this.element && item) {\r\n      const attrs = this.element.inputMessageRef[type];\r\n      const index = this.element.objectIndex(item, attrs);\r\n      if (index !== -1) {\r\n        this.element.deleteAttributeInputMsgRef(type, index);\r\n        this._taskInputMsgRefList.refreshList();\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDeleteAllTaskInputMsgRefList() {\r\n    const type = this.taskWsAttributeType === 'P' ? 'attrProc' : 'attrEnt';\r\n    if (this.element) {\r\n      this.element.cleanAttributesInputMsgRef(type);\r\n    }\r\n  }\r\n\r\n  _onSelectInputMsgRefList(item) {\r\n    if (item) {\r\n      const message = `\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageName')}</b> ${item.name}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageType')}</b> ${item.type === 'P' ? 'Process' : 'Entity'}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageMultivalued')}</b> ${item.multivalued ? 'True' : 'False'}<br>\r\n        <b>${i18next.t('taskPropsPanel.txtProDesTaskPanelToastMessageUniqueKey')}</b> ${item.uk ? 'True' : 'False'}<br>\r\n      `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  _onCheckInputMsgRefList(param) {\r\n    const { value, position, keyName } = param;\r\n    const { data } = this._taskInputMsgRefList.arrayList;\r\n    const oppositeProp = keyName === 'multivalued' ? 'uk' : 'multivalued';\r\n    if (value) data[position][oppositeProp] = !value;\r\n    this._taskInputMsgRefList.refreshList();\r\n  }\r\n\r\n  _onCheckInputSelectedOnList(param) {\r\n    // CHECK IF 'param' ALREADY ASSIGNED ON LIST\r\n    return this._taskInputMsgRefList._arrayList.data.find((item) => {\r\n      return Number(param.id) === Number(item.id);\r\n    });\r\n  }\r\n\r\n  _onTaskInputMsgRefSearchChanged(item) {\r\n    const edit = this._taskInputMsgRefList.rowEditableSelected;\r\n    const { editStatus } = this._taskInputMsgRefList;\r\n    const alreadyOnList = item ? this._onCheckInputSelectedOnList(item) : false;\r\n    const condition = this._taskInputMsgRefSearch.valueEl !== '' && !editStatus && !item;\r\n    this._taskInputMsgRefSearch.toggleDisabledButton(!condition);\r\n    if (edit && item && editStatus && !alreadyOnList) {\r\n      const type = this.taskWsAttributeType === 'P' ? 'attrProc' : 'attrEnt';\r\n      const attrs = this.element.inputMessageRef[type];\r\n      const index = this.element.objectIndex(edit, attrs);\r\n      if (index !== -1) {\r\n        const attr = {\r\n          id: parseInt(item.id, 10),\r\n          name: item.name,\r\n          multivalued: false,\r\n          type: this.taskWsAttributeType,\r\n          uk: false,\r\n        };\r\n        this.element.editAttributesInputMsgRef(type, index, attr);\r\n        this._taskInputMsgRefList.rowEditableSelected = attr;\r\n        this._taskInputMsgRefList.refreshList();\r\n      }\r\n    }\r\n  }\r\n\r\n  async _insertNewAttribute(baseUrl, value, dropDown) {\r\n    const url = `${baseUrl}${value}`;\r\n    const response = await axios.post(url);\r\n    if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n      this.showInvalidSession();\r\n    }\r\n    if (response) {\r\n      const convert = new Converter();\r\n      const [attrCreated] = convert.convertToJson(response.data);\r\n      dropDown.selectedItem = attrCreated;\r\n      dropDown.reloadData();\r\n      dropDown.toggleDisabledButton(true);\r\n    }\r\n  }\r\n\r\n  async _onAddNewInputMsgAttribute() {\r\n    const attributeValue = this._taskInputMsgRefSearch.valueEl.trim();\r\n    const selected = this._taskInputMsgRefSearch.selectedItem;\r\n    if (!selected && Config.ENV === 'Production') {\r\n      if (validateApiaName(attributeValue)) {\r\n        try {\r\n          this._insertNewAttribute(\r\n            Config.NEW_TASK_INPUT_MSG_ATTR,\r\n            attributeValue,\r\n            this._taskInputMsgRefSearch,\r\n          ).then(() => this._showSuccessInsertionMessage());\r\n        } catch (error) {\r\n          console.warn(\r\n            i18next.t('taskPropsPanel.txtProDesTaskPanelErrorMessageAttrInsert'),\r\n            error,\r\n          );\r\n        }\r\n      } else {\r\n        this._showErrorMessage(\r\n          `${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageTaskAttr')} <b>\"${attributeValue}\"</b> ${i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorMessageIsValid')}`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  _showErrorMessage(message) {\r\n    const options = { ...this.OPTIONS_TOAST };\r\n    options.type = 'danger';\r\n    options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastErrorTitle');\r\n    options.message = message;\r\n    this.toastMessage.showMessage(options);\r\n  }\r\n\r\n  _showSuccessInsertionMessage() {\r\n    const options = { ...this.OPTIONS_TOAST };\r\n    options.type = 'success';\r\n    options.title = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessTitle');\r\n    options.message = i18next.t('taskPropsPanel.txtProDesTaskPanelToastSuccessMessageAttr');\r\n    this.toastMessage.showMessage(options);\r\n  }\r\n\r\n  _canShowIt(el) {\r\n    const { taskType } = el;\r\n    const type = {\r\n      NONE: 'none',\r\n      SERVICE: 'service',\r\n      RECEIVE: 'receive',\r\n      SEND: 'send',\r\n      USER: 'user',\r\n      MANUAL: 'manual',\r\n      SCRIPT: 'script',\r\n    };\r\n    const value = { input: false, output: false };\r\n    switch (taskType) {\r\n      case type.SEND: {\r\n        value.output = true;\r\n        break;\r\n      }\r\n      case type.RECEIVE: {\r\n        value.input = true;\r\n        break;\r\n      }\r\n      case type.SERVICE:\r\n      case type.USER: {\r\n        value.input = true && el.loopType !== 'multiinstance';\r\n        value.output = true;\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  _onInputOutputGroupChanged() {\r\n    const checked = this.taskInputOutputGroup;\r\n    if (this.element) {\r\n      const condition = this._canShowIt(this.element);\r\n      const { taskType } = this.element;\r\n      if (\r\n        this._checkIsFirstTask(this.element)\r\n        && (taskType === 'user' || taskType === 'service')\r\n      ) {\r\n        condition.output = false;\r\n      }\r\n      this._changeVisibility(\r\n        this._taskInputMsgRefExp.wrapper,\r\n        checked && condition.input,\r\n      );\r\n      this._changeVisibility(\r\n        this._taskOutputMsgRefExp.wrapper,\r\n        checked && condition.output,\r\n      );\r\n      if (!checked) {\r\n        this._changeVisibility(this._taskInputMsgRefExp.wrapper, false);\r\n        this._changeVisibility(this._taskOutputMsgRefExp.wrapper, false);\r\n        if (this._taskInputMsgRefExp.isExpand) {\r\n          this._taskInputMsgRefExp.expand();\r\n        }\r\n        if (this._taskOutputMsgRefExp.isExpand) {\r\n          this._taskOutputMsgRefExp.expand();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _onExpandOutputMsgRefExp() {\r\n    // if (!this._taskOutputWebServiceSearch.load) this._taskOutputWebServiceSearch.load = true;\r\n  }\r\n\r\n  _onAddWebServiceIntoList() {\r\n    const item = this._taskOutputWebServiceSearch.selectedItem;\r\n    if (item && this.element) {\r\n      const webServices = this.element.outputMessageRef || [];\r\n      if (webServices.length === 0) {\r\n        this.element.createDefaultBPMNAutoComplete();\r\n      }\r\n      this._taskOutputWSBindingType.disabled = false;\r\n      const max = this._getMaxId(this.element.outputMessageRef);\r\n      const wsToAdd = {\r\n        id: max + 1,\r\n        eventId: 10, // preguntar como obtenerle mediante peticion\r\n        name: 'ONCOMPLETE', // preguntar como obt.\r\n        busClaId: parseInt(item.id, 10),\r\n        busClaName: item.name,\r\n        order: this.element.outputMessageRef.length,\r\n        WS: true,\r\n      };\r\n      this.element.addWebServiceOutputMsgRef(wsToAdd);\r\n      this._taskOutputMsgRefWSList.arrayList.data = this._getOutputWebServicesList(\r\n        this.element,\r\n      );\r\n      this._taskOutputMsgRefWSList.refreshList();\r\n      this._taskOutputMsgRefWSList._scrollToRow(wsToAdd, () => this._onSelectWebServiceIntoList(wsToAdd));\r\n      this._taskOutputMsgRefExp.showValue(\r\n        this._outputMessageRefShowValue(this.element),\r\n      );\r\n    }\r\n  }\r\n\r\n  _disabledOutputAttrType(value) {\r\n    const radios = this._wrapOutputBindingAttrType.querySelectorAll(\r\n      'input[type=radio]',\r\n    );\r\n    if (radios) {\r\n      radios.forEach((radio) => {\r\n        radio.disabled = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  async _onEditWebServiceIntoList(status) {\r\n    const editSelected = this._taskOutputMsgRefWSList.rowEditableSelected;\r\n    this._taskOutputWebServiceSearch.selectedItem = status && editSelected\r\n      ? {\r\n        id: editSelected.busClaId,\r\n        name: editSelected.busClaName,\r\n      }\r\n      : undefined;\r\n    if (status) {\r\n      this._taskOutputMsgRefBindingList.arrayList.data = [];\r\n      this._cleanAndHideAllOutputBindingsCmp();\r\n      this._taskOutputMsgRefBindingList.unSelectAll();\r\n      this._taskOutputMsgRefBindingList.disabled = true;\r\n      this._taskOutputWSBindingType.disabled = true;\r\n    } else {\r\n      this._taskOutputMsgRefBindingList.disabled = false;\r\n      const selected = this._taskOutputMsgRefWSList.rowSelected;\r\n      if (selected) {\r\n        const bindings = await this._getBindings(selected.busClaId);\r\n        this._taskOutputMsgRefBindingList.arrayListData = bindings;\r\n      }\r\n      this._taskOutputMsgRefBindingList.refreshList();\r\n    }\r\n    this._taskOutputMsgRefExp.showValue(\r\n      this._outputMessageRefShowValue(this.element),\r\n    );\r\n  }\r\n\r\n  async _onSelectOutputWebServiceSearch(item) {\r\n    const isEdit = this._taskOutputMsgRefWSList.editStatus;\r\n    let copy;\r\n    if (item && isEdit && this.element) {\r\n      const wsSelected = this._taskOutputMsgRefWSList.rowEditableSelected;\r\n      const webServices = this.element.outputMessageRef || [];\r\n      const indexWs = this.element.objectIndex(\r\n        wsSelected,\r\n        webServices,\r\n        'id',\r\n      );\r\n      copy = { ...wsSelected };\r\n      if (indexWs !== -1) {\r\n        copy.busClaId = parseInt(item.id, 10);\r\n        copy.busClaName = item.name;\r\n        copy.bindings = [];\r\n        this.element.editWebServiceOutputMsgRef(indexWs, copy);\r\n        this._taskOutputMsgRefWSList.arrayList.data = this._getOutputWebServicesList(\r\n          this.element,\r\n        );\r\n        const bindings = await this._getBindings(copy.busClaId);\r\n        // clean binding\r\n        bindings.forEach((bin) => {\r\n          bin.binding = 'None';\r\n          return bin;\r\n        });\r\n        this._taskOutputMsgRefBindingList.arrayListData = bindings;\r\n        this._taskOutputMsgRefBindingList.refreshList();\r\n        this._taskOutputMsgRefWSList.refreshList();\r\n      }\r\n    }\r\n    // if (!isEdit) {\r\n    //   const bindings = await this._getBindings(copy.busClaId);\r\n    //   bindings.forEach((bin) => { bin.binding = 'None'; });\r\n    //   console.log(bindings);\r\n    //   this._taskOutputMsgRefBindingList.arrayListData = bindings;\r\n    //   this._taskOutputMsgRefBindingList.refreshList();\r\n    // }\r\n  }\r\n\r\n  async _onSelectWebServiceIntoList(item) {\r\n    if (item) {\r\n      const condition = item !== this.wsSelected;\r\n      if (condition) {\r\n        this._taskOutputWSBindingType.disabled = true;\r\n        // this._taskOutputMsgRefBindingList.disabled = true;\r\n        this.wsSelected = item;\r\n        const bindings = await this._getBindings(this.wsSelected.busClaId);\r\n        this._taskOutputMsgRefBindingList.arrayListData = bindings;\r\n\r\n        this.taskOutputWSBindingType = 'none';\r\n        this._cleanAndHideAllOutputBindingsCmp();\r\n      }\r\n      const message = `<b>Web Service:</b> ${item.busClaName}<br>`;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  _cleanAndHideAllOutputBindingsCmp() {\r\n    this.taskOutputWSBindingType = 'none';\r\n    this.taskOutputWSBindingValue = '';\r\n    const radioProc = this._wrapOutputBindingAttrType.querySelector(\r\n      '#binding_attr_type_entity',\r\n    );\r\n    radioProc.checked = true;\r\n\r\n    this._changeVisibility(this.wrapOutputWSBindingValue, false);\r\n    this._changeVisibility(this._wrapOutputBindingAttrType, false);\r\n    this._changeVisibility(this._taskOutputBindingAttrSearch.wrapper, false);\r\n  }\r\n\r\n  _onSelectOutputWsBindingsList(item) {\r\n    this._cleanAndHideAllOutputBindingsCmp();\r\n    if (item && this.element && this._wsSelected) {\r\n      const wsBindings = this._wsSelected.bindings || [];\r\n      const wsBindingFind = wsBindings.find((bind) => {\r\n        return parseInt(item.id, 10) === parseInt(bind.busClaParId, 10);\r\n      });\r\n      this._taskOutputWSBindingType.disabled = false;\r\n\r\n      if (wsBindingFind && item.binding !== 'None') {\r\n        const bindingType = wsBindingFind.busClaParBndType;\r\n        if (bindingType === 'V') {\r\n          this.taskOutputWSBindingType = 'value';\r\n          this._taskOutputWSBindingValue.disabled = false;\r\n          this._changeVisibility(this.wrapOutputWSBindingValue, true);\r\n          this.taskOutputWSBindingValue = wsBindingFind.busClaParBndValue || '';\r\n        } else {\r\n          this.taskOutputWSBindingType = 'attribute';\r\n          this._taskOutputBindingAttrSearch.selectedItem = !wsBindingFind.attId || wsBindingFind.attId === -1\r\n            ? undefined\r\n            : {\r\n              id: wsBindingFind.attId,\r\n              name: wsBindingFind.attTooltip || wsBindingFind.attName,\r\n            };\r\n          const attrType = bindingType === 'P' ? 'process' : 'entity';\r\n          const radio = this._wrapOutputBindingAttrType.querySelector(\r\n            `#binding_attr_type_${attrType}`,\r\n          );\r\n          if (radio) radio.checked = true;\r\n\r\n          this._changeVisibility(\r\n            this._taskOutputBindingAttrSearch.wrapper,\r\n            true,\r\n          );\r\n          this._changeVisibility(this._wrapOutputBindingAttrType, true);\r\n        }\r\n      }\r\n\r\n      const message = `\r\n        <b>Parameter:</b> ${item.param}<br>\r\n        <b>Type:</b> ${this.PARAMETER_TYPE[item.type]}<br>\r\n        <b>In/Out:</b> ${item.inout}\r\n        `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  createNewWebServiceBinding(paramSelected, wsIndex) {\r\n    const newBinding = {\r\n      busClaParId: parseInt(paramSelected.id, 10),\r\n      busClaParType: paramSelected.type,\r\n      busClaParName: paramSelected.param,\r\n      busClaParBndType: '',\r\n    };\r\n    this.element.addBindingWebServiceOutputMsgRef(wsIndex, newBinding);\r\n  }\r\n\r\n  _onTaskWsAttributeTypeChanged() {\r\n    const attrType = this.taskOutputWSBindingType.toUpperCase();\r\n    const paramSelected = this._taskOutputMsgRefBindingList.rowSelected;\r\n\r\n    const bindings = this._wsSelected.bindings || [];\r\n    const indexWebService = this.element.objectIndex(\r\n      this._wsSelected,\r\n      'outputMessageRef',\r\n    );\r\n    let indexBinSelected = bindings.findIndex((value) => {\r\n      return parseInt(value.busClaParId, 10) === parseInt(paramSelected.id, 10);\r\n    });\r\n    if (indexBinSelected === -1 && attrType !== 'NONE') {\r\n      this.createNewWebServiceBinding(paramSelected, indexWebService);\r\n      indexBinSelected = this.element.outputMessageRef[indexWebService].bindings.length - 1;\r\n    }\r\n    let valueType;\r\n    const wsBinding = this._wsSelected.bindings[indexBinSelected];\r\n    const condition = paramSelected.binding.toUpperCase() !== attrType;\r\n\r\n\r\n    if (condition) {\r\n      this._taskOutputBindingAttrSearch.selectedItem = undefined;\r\n      this.taskOutputWSBindingValue = '';\r\n      this._fillBindingsParameters(this._wsSelected.busClaId);\r\n    }\r\n\r\n    if (attrType === 'VALUE' && condition) {\r\n      this._setFieldValueEachType(\r\n        paramSelected,\r\n        this._taskOutputWSBindingValue,\r\n      );\r\n      valueType = 'V';\r\n      this.element.setWebServicePropertyOutputMsgRef(\r\n        indexWebService,\r\n        indexBinSelected,\r\n        'busClaParBndType',\r\n        valueType,\r\n      );\r\n      this.taskOutputWSBindingValue = '';\r\n      this._changeVisibility(this.wrapOutputWSBindingValue, true);\r\n      this._taskOutputBindingAttrSearch.selectedItem = undefined;\r\n      this._changeVisibility(this._wrapOutputBindingAttrType, false);\r\n      this._changeVisibility(this._taskOutputBindingAttrSearch.wrapper, false);\r\n      if (wsBinding.attId || wsBinding.attTooltip || wsBinding.attName) {\r\n        this.element.deleteAttributeWebServicesProperties(\r\n          indexWebService,\r\n          indexBinSelected,\r\n        );\r\n      }\r\n    }\r\n    if (attrType === 'ATTRIBUTE' && condition) {\r\n      this._setUrlAttributeSearch(\r\n        this._taskOutputBindingAttrSearch,\r\n        paramSelected.type,\r\n      );\r\n      valueType = this.ouputWsAttributeTypeChecked.value.toUpperCase();\r\n      this.element.setWebServicePropertyOutputMsgRef(\r\n        indexWebService,\r\n        indexBinSelected,\r\n        'busClaParBndType',\r\n        valueType,\r\n      );\r\n      this._taskOutputBindingAttrSearch.selectedItem = undefined;\r\n      this._changeVisibility(this._wrapOutputBindingAttrType, true);\r\n      this._changeVisibility(this._taskOutputBindingAttrSearch.wrapper, true);\r\n      this.taskOutputWSBindingValue = '';\r\n      this._changeVisibility(this.wrapOutputWSBindingValue, false);\r\n      if (wsBinding.busClaParBndValue) {\r\n        this.element.deleteValueWebServiceProperty(\r\n          indexWebService,\r\n          indexBinSelected,\r\n        );\r\n      }\r\n    }\r\n    if (attrType === 'NONE' && indexBinSelected !== -1) {\r\n      this._cleanAndHideAllOutputBindingsCmp();\r\n      this.element.deleteBindingWebServiceOutputMsgRef(\r\n        indexWebService,\r\n        indexBinSelected,\r\n      );\r\n      this._fillBindingsParameters(this._wsSelected.busClaId);\r\n    }\r\n  }\r\n\r\n  _fillBindingsParameters(busClaId) {\r\n    this._getBindings(busClaId).then((parameters) => {\r\n      this._taskOutputMsgRefBindingList.arrayList.data = parameters;\r\n      this._taskOutputMsgRefBindingList.refreshList();\r\n    });\r\n  }\r\n\r\n  _setUrlAttributeSearch(attributeSearch, type) {\r\n    if (Config.ENV === 'Production') {\r\n      // Reload for bring different attributes according to paramater type\r\n      attributeSearch.url = `${Config.DEFAULT_ATTRS_URL}&attType=${type}&name=`;\r\n    }\r\n  }\r\n\r\n  _onWebServiceBindingAttrTypeChanged() {\r\n    const param = this._taskOutputMsgRefBindingList.rowSelected;\r\n    const bindings = this._wsSelected.bindings || [];\r\n    const indexWs = this.element.objectIndex(\r\n      this._wsSelected,\r\n      this.element.outputMessageRef,\r\n    );\r\n    const indexBin = bindings.findIndex((value) => {\r\n      return parseInt(param.id, 10) === parseInt(value.busClaParId, 10);\r\n    });\r\n    if (indexWs !== -1 && indexBin !== -1) {\r\n      const type = this.ouputWsAttributeTypeChecked.value;\r\n      this.element.setWebServicePropertyOutputMsgRef(\r\n        indexWs,\r\n        indexBin,\r\n        'busClaParBndType',\r\n        type,\r\n      );\r\n    }\r\n  }\r\n\r\n  _onWebServiceBindingAttributeChanged(item) {\r\n    const param = this._taskOutputMsgRefBindingList.rowSelected;\r\n    const bindings = this._wsSelected.bindings || [];\r\n    const indexWs = this.element.objectIndex(\r\n      this._wsSelected,\r\n      this.element.outputMessageRef,\r\n    );\r\n    const indexBin = bindings.findIndex((value) => {\r\n      return parseInt(param.id, 10) === parseInt(value.busClaParId, 10);\r\n    });\r\n    if (indexWs !== -1 && indexBin !== -1 && item) {\r\n      const props = ['attId', 'attTooltip', 'attName'];\r\n      const values = [parseInt(item.id, 10), item.name, item.label];\r\n      this.element.setWebServicePropertyOutputMsgRef(\r\n        indexWs,\r\n        indexBin,\r\n        props,\r\n        values,\r\n      );\r\n      this._fillBindingsParameters(this._wsSelected.busClaId);\r\n    }\r\n  }\r\n\r\n  _onWebServiceBindingValueChanged() {\r\n    const valueToChange = this.taskOutputWSBindingValue;\r\n    const param = this._taskOutputMsgRefBindingList.rowSelected;\r\n    const bindings = this._wsSelected.bindings || [];\r\n    const indexWs = this.element.objectIndex(\r\n      this._wsSelected,\r\n      this.element.outputMessageRef,\r\n    );\r\n    const indexBin = bindings.findIndex((value) => {\r\n      return parseInt(param.id, 10) === parseInt(value.busClaParId, 10);\r\n    });\r\n    const isValid = validateField(this._taskOutputWSBindingValue);\r\n    if (indexWs !== -1 && indexBin !== -1 && isValid) {\r\n      this._fillValidBindingValue(bindings[indexBin].busClaParBndValue);\r\n      this.element.setWebServicePropertyOutputMsgRef(\r\n        indexWs,\r\n        indexBin,\r\n        'busClaParBndValue',\r\n        valueToChange,\r\n      );\r\n      this._fillBindingsParameters(this._wsSelected.busClaId);\r\n    }\r\n  }\r\n\r\n  _fillValidBindingValue(oldValue = '') {\r\n    const { type } = this._taskOutputWSBindingValue;\r\n    if (type === 'number' && this.taskOutputWSBindingValue === '') {\r\n      this.taskOutputWSBindingValue = oldValue;\r\n    }\r\n  }\r\n\r\n  _onDeleteWebServiceOutputMsgRefList(item) {\r\n    const indexWs = this.element.objectIndex(\r\n      item,\r\n      this.element.outputMessageRef,\r\n    );\r\n    if (indexWs !== -1) {\r\n      this.element.deleteWebServiceOutputMsgRef(indexWs);\r\n      this._taskOutputMsgRefWSList.arrayList.data = this._getOutputWebServicesList(\r\n        this.element,\r\n      );\r\n      this._taskOutputMsgRefWSList.refreshList();\r\n      if (this.element.outputMessageRef.length === 1) {\r\n        this.element.outputMessageRef = [];\r\n      }\r\n      if (this._wsSelected && item) {\r\n        const condition = parseInt(this._wsSelected.id, 10) === parseInt(item.id, 10);\r\n        if (condition || !this.element.outputMessageRef) {\r\n          this.wsSelected = null;\r\n          this._taskOutputMsgRefBindingList.arrayListData = [];\r\n          this._cleanAndHideAllOutputBindingsCmp();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDeleteAllWebServiceOutputMsgRefList() {\r\n    if (this.element) {\r\n      this.element.cleanWebServicesOutputMsgRef();\r\n      this.wsSelected = null;\r\n      this._taskOutputMsgRefBindingList.arrayListData = [];\r\n      this._cleanAndHideAllOutputBindingsCmp();\r\n    }\r\n  }\r\n\r\n  _getOutgoingConnectors(element) {\r\n    const allConnectors = getElementsOfType(\r\n      Config.CONNECTOR,\r\n      this.editor.elements,\r\n    );\r\n    const outgoingTransitions = allConnectors.filter((transition) => {\r\n      const validTransition = transition.type === Config.CONNECTOR_TYPE_TRANSITION\r\n        && transition.from === element.id;\r\n      return validTransition;\r\n    });\r\n    return outgoingTransitions;\r\n  }\r\n\r\n  _getOutgoingElements(connectors, visited) {\r\n    const outgoingElements = [];\r\n    connectors.forEach((connector) => {\r\n      const element = getProcessElementByID(connector.to, this.editor.elements);\r\n      const wasVisited = visited.find((id) => element.id === id);\r\n      if (!wasVisited) {\r\n        outgoingElements.push(element);\r\n      }\r\n    });\r\n    return outgoingElements;\r\n  }\r\n\r\n  _getLocalScheduleTasks() {\r\n    const [selected] = getSelected(this.editor.elements);\r\n    const tasks = this._getNextTasks(selected, [], [], selected.id);\r\n    const data = [];\r\n    tasks.forEach((task) => {\r\n      const { taskId, name } = task;\r\n      data.push({ id: taskId, name });\r\n    });\r\n    return data;\r\n  }\r\n\r\n  _getNextTasks(startElement, tasksCollections, visited, startID = undefined) {\r\n    const outgoingConnectors = this._getOutgoingConnectors(startElement);\r\n    const outgoingElements = this._getOutgoingElements(\r\n      outgoingConnectors,\r\n      visited,\r\n    );\r\n    if (\r\n      startElement.elementType === Config.TASK\r\n      && startElement.id !== startID\r\n    ) {\r\n      tasksCollections.push(startElement.properties);\r\n    }\r\n    if (outgoingElements.length > 0) {\r\n      visited.push(startElement.id);\r\n      outgoingElements.forEach((element) => {\r\n        return this._getNextTasks(element, tasksCollections, visited);\r\n      });\r\n    }\r\n\r\n    return tasksCollections;\r\n  }\r\n\r\n  _setFieldValueEachType(binding, bindingValueField) {\r\n    // if (this.bindingSelected && Config.ENV === 'Production' && flag) {\r\n    if (binding) {\r\n      const { type } = binding;\r\n      switch (type) {\r\n        case 'N': {\r\n          bindingValueField.setAttribute('type', 'number');\r\n          break;\r\n        }\r\n        case 'D': {\r\n          bindingValueField.setAttribute('type', 'date');\r\n          break;\r\n        }\r\n        default: {\r\n          bindingValueField.setAttribute('type', 'text');\r\n          break;\r\n        }\r\n      }\r\n      this._toggleNumberFieldAttributes(type === 'N', bindingValueField);\r\n    }\r\n  }\r\n\r\n  _toggleNumberFieldAttributes(add, field) {\r\n    const hasMinAttribute = field.hasAttribute('min');\r\n    const hasStepAttribute = field.hasAttribute('step');\r\n    if (add && !hasMinAttribute && !hasStepAttribute) {\r\n      field.setAttribute('min', '0');\r\n      field.setAttribute('step', '1');\r\n    } else {\r\n      field.removeAttribute('min');\r\n      field.removeAttribute('step');\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport TemplatePanel from '../templatePanel';\r\nimport { normalizeText } from './validator';\r\n\r\nexport default class GatewayFacilis extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'gateway');\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    // Variables Initializations\r\n    this._typeSelect = this._panel.querySelector('#gateway_type_select');\r\n    this._nameInput = this._panel.querySelector('#gateway_name_input');\r\n\r\n    // Events Initializations\r\n    this._typeSelect.addEventListener('input', () => {\r\n      this._onTypeSelectChanged();\r\n    });\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onNameInputChanged();\r\n      },\r\n      this._nameInput,\r\n      'input',\r\n    );\r\n  }\r\n\r\n  get typeSelect() {\r\n    return this._typeSelect.value;\r\n  }\r\n\r\n  get nameInput() {\r\n    return this._nameInput.value;\r\n  }\r\n\r\n  set typeSelect(value) {\r\n    this._typeSelect.value = value;\r\n  }\r\n\r\n  set nameInput(value) {\r\n    this._nameInput.value = value;\r\n  }\r\n\r\n  show(el) {\r\n    // console.log(el.properties);\r\n    this.typeSelect = el.type;\r\n    this.nameInput = el.name;\r\n    this.documentationInput = el.documentation;\r\n    this._changeVisibility(this._panel, true);\r\n\r\n    el.on('delete_exclusive', () => {\r\n      el.deleteAllExecutionOrderConnector(this.editor.elements);\r\n    });\r\n\r\n    el.on('change_parallel_event', () => {\r\n      el.changeAllConnectorsKind(this.editor.elements);\r\n    });\r\n  }\r\n\r\n  _onTypeSelectChanged() {\r\n    if (this.element) {\r\n      const oldType = this.element.type.toUpperCase();\r\n      const newType = this.typeSelect.toUpperCase();\r\n      if (oldType !== newType) {\r\n        this.element.type = this.typeSelect;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onNameInputChanged() {\r\n    if (this.element) {\r\n      const actualName = this.element.elementType === Config.GATEWAY\r\n        ? this.element.name\r\n        : undefined;\r\n      this.nameInput = normalizeText(this.nameInput, /[\"]/g);\r\n      if (\r\n        actualName !== this.nameInput\r\n        && this.element.elementType === Config.GATEWAY\r\n      ) {\r\n        this.element.name = this.nameInput;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDocumentationInputChanged() {\r\n    this.documentationInput = normalizeText(this.documentationInput);\r\n    super._onDocumentationInputChanged();\r\n  }\r\n}\r\n","import Gateway from './facilis/gatewayFacilis';\r\n\r\nexport default class GatewayPanel extends Gateway {\r\n  constructor(editor) {\r\n    super(editor);\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    super._init();\r\n    // Variables Initializations\r\n    this._executionType = this._panel.querySelector('#gateway_execution');\r\n    this.wrapExecutionType = this._executionType.parentNode.parentNode;\r\n    // Events Initializations\r\n    this._executionType.addEventListener('input', () => {\r\n      this._onExecutionTypeChanged();\r\n    });\r\n  }\r\n\r\n  get executionType() {\r\n    return this._executionType.value;\r\n  }\r\n\r\n  set executionType(value) {\r\n    this._executionType.value = value;\r\n  }\r\n\r\n  show(el) {\r\n    super.show(el);\r\n    this._showExecution(el);\r\n  }\r\n\r\n  _showExecution(el) {\r\n    const execution = el.executionType;\r\n    const { type } = el;\r\n    this.executionType = execution || 'manual';\r\n    const condition = type.toUpperCase() === 'EXCLUSIVE' || type.toUpperCase() === 'INCLUSIVE';\r\n    this._changeVisibility(this.wrapExecutionType, condition);\r\n  }\r\n\r\n  _onTypeSelectChanged() {\r\n    super._onTypeSelectChanged();\r\n    const newType = this.typeSelect.toUpperCase();\r\n    const condition = newType === 'EXCLUSIVE' || newType === 'INCLUSIVE';\r\n    this._changeVisibility(this.wrapExecutionType, condition);\r\n  }\r\n\r\n  _onExecutionTypeChanged() {\r\n    if (this.element) {\r\n      const oldExec = this.element.executionType;\r\n      const newExec = this.executionType;\r\n      if (oldExec !== newExec) {\r\n        this.element.executionType = newExec;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport TemplatePanel from './templatePanel';\r\nimport { normalizeText } from './facilis/validator';\r\n\r\nexport default class GroupPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'group');\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    // Variables Initilizations\r\n    this._nameInput = this._panel.querySelector('#group_name_input');\r\n    // Events Initializations\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onNameInputChanged();\r\n      },\r\n      this._nameInput,\r\n      'input',\r\n    );\r\n  }\r\n\r\n  get nameInput() {\r\n    return this._nameInput.value;\r\n  }\r\n\r\n  set nameInput(value) {\r\n    this._nameInput.value = value;\r\n  }\r\n\r\n  show(el) {\r\n    this.nameInput = el.name;\r\n    this.documentationInput = el.documentation;\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _onNameInputChanged() {\r\n    if (this.element) {\r\n      const actual = this.element.elementType === Config.GROUP\r\n        ? this.element.name\r\n        : undefined;\r\n      this.nameInput = normalizeText(this.nameInput, /[\"]/g);\r\n      if (actual !== this.nameInput) this.element.name = this.nameInput;\r\n    }\r\n  }\r\n}\r\n","import TemplatePanel from './templatePanel';\r\nimport { normalizeText } from './facilis/validator';\r\n\r\nexport default class TextPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'text');\r\n\r\n    this._textInput = this._panel.querySelector('#text_text_input');\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => this._onTextInput(),\r\n      this._textInput,\r\n      'input',\r\n      100,\r\n    );\r\n  }\r\n\r\n  get textInput() {\r\n    return this._textInput.value;\r\n  }\r\n\r\n  set textInput(newValue) {\r\n    this._textInput.value = newValue;\r\n  }\r\n\r\n  show(el) {\r\n    this.textInput = el.text;\r\n    this.documentationInput = el.documentation;\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _onTextInput() {\r\n    if (this.element) {\r\n      const actual = this.element.text;\r\n      this.textInput = normalizeText(this.textInput, /[\"]/g);\r\n      if (actual !== this.textInput) this.element.text = this.textInput;\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport TemplatePanel from './templatePanel';\r\nimport { normalizeText } from './facilis/validator';\r\n\r\nexport default class PoolLanePanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'pool_lane');\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this._nameInput = this._panel.querySelector('#pool_lane_name_input');\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onNameInputChanged();\r\n      },\r\n      this._nameInput,\r\n      'input',\r\n      100,\r\n    );\r\n  }\r\n\r\n  get nameInput() {\r\n    return this._nameInput.value;\r\n  }\r\n\r\n  set nameInput(value) {\r\n    this._nameInput.value = value;\r\n  }\r\n\r\n  show(el) {\r\n    this.nameInput = el.name;\r\n    this.documentationInput = el.documentation;\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _onNameInputChanged() {\r\n    if (this.element) {\r\n      const { elementType, name } = this.element;\r\n      const isPoolOrLane = elementType === Config.POOL || elementType === Config.LANE;\r\n      const actual = isPoolOrLane ? name : undefined;\r\n      this.nameInput = normalizeText(this.nameInput, /[\"]/g);\r\n      if (actual !== this.nameInput && isPoolOrLane) {\r\n        this.element.name = this.nameInput;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport Config from 'config';\r\nimport i18next from 'i18next';\r\nimport Converter from '../../utils/convertToJson';\r\nimport TemplatePanel from './templatePanel';\r\nimport { indexByProperty, mapInOutParameters } from '../../utils/util';\r\n\r\nexport default class EventPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'event');\r\n    this._init();\r\n    this._initMessageComponents();\r\n    this._initTimerComponents();\r\n    this._initEventOfComponents();\r\n  }\r\n\r\n  _init() {\r\n    this.EVENT_PANEL = {\r\n      MESSAGE: {\r\n        nameId: 'event_message',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelMessageLabel'),\r\n        expandId: 'expand_message_zone',\r\n      },\r\n      MSG_ATTR_SEARCH: {\r\n        nameId: 'event_message_attrs',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelAttributeSearchLabel'),\r\n        add: true,\r\n        url: Config.EVT_MSG_ATTRS_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      MSG_ATTRS_LIST: {\r\n        nameId: 'event_message_attrs_list',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelAttributeListLabel'),\r\n        add: true,\r\n      },\r\n      MSG_WS_SEARCH: {\r\n        nameId: 'event_message_webservice',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelWSSearchLabel'),\r\n        add: false,\r\n        url: Config.EVT_MSG_WS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      MSG_WS_LIST: {\r\n        nameId: 'event_message_webservices_list',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelWSListLabel'),\r\n        add: true,\r\n      },\r\n      MSG_BINDINGS_LIST: {\r\n        nameId: 'event_message_bindings_list',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelBindingListLabel'),\r\n        add: false,\r\n      },\r\n      MSG_WS_ATTR_SEARCH: {\r\n        nameId: 'event_message_ws_attribute',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelWSAttributeSearchLabel'),\r\n        add: false,\r\n        url: Config.EVT_MSG_WS_ATTR_URL,\r\n        baseUrl: Config.EVT_MSG_WS_ATTR_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      TIMER: {\r\n        nameId: 'event_timer',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelTimerLabel'),\r\n        expandId: 'expand_timer_zone',\r\n      },\r\n      TIMER_ATTRIBUTE_SEARCH: {\r\n        nameId: 'event_timer_attribute',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelTimerAttributeSearchLabel'),\r\n        add: false,\r\n        url: Config.EVT_TIMER_ATTR_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      TIMER_START_DATE: {\r\n        nameId: 'event_timer_start_date',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelTimerStartDateLabel'),\r\n      },\r\n      TIMER_END_DATE: {\r\n        nameId: 'event_timer_end_date',\r\n        label: i18next.t('eventPropsPanel.txtProDesEventPanelTimerStartDateLabel'),\r\n      },\r\n    };\r\n\r\n    this.OPTIONS_TOAST = {\r\n      type: 'info',\r\n      title: i18next.t('eventPropsPanel.txtProDesEventPanelToastTitleInformation'),\r\n      duration: 3000,\r\n      position: 'bottom-left',\r\n    };\r\n    this._eventNameType = this._panel.querySelector('#event_name_type');\r\n    this._detailTypeSelect = this._panel.querySelector('#event_detail_type_select');\r\n    this._nameInput = this._panel.querySelector('#event_name_input');\r\n\r\n    this._eventMsgCatchThrow = this._panel.querySelector('#event_message_catch_throw');\r\n    this._eventMsgWebServiceInput = this._panel.querySelector('#event_message_webservice_input');\r\n    this._eventMsgAttributesType = this._panel.querySelector('#event_message_attr_type');\r\n    this._eventMsgBindingType = this._panel.querySelector('#event_message_binding_type');\r\n    this._eventMsgBindingValue = this._panel.querySelector('#event_message_binding_value');\r\n\r\n    this._eventTimerType = this._panel.querySelector('#event_timer_type_select');\r\n    this._eventTimerStartDate = this._panel.querySelector('#event_timer_start_date');\r\n    this._eventTimerEndDate = this._panel.querySelector('#event_timer_end_date');\r\n    this._eventTimerUnit = this._panel.querySelector('#event_timer_unit');\r\n    this._eventTimerValue = this._panel.querySelector('#event_timer_value');\r\n    this._eventTimerAttrType = this._panel.querySelector('#event_timer_attribute_type');\r\n    // Wrappers\r\n    this.wrapDetailTypeSelect = this._detailTypeSelect.parentNode.parentNode;\r\n    this.wrapMsgCatchThrow = this._eventMsgCatchThrow.parentNode.parentNode;\r\n    this.wrapAttrsType = this._eventMsgAttributesType.parentNode.parentNode;\r\n    this.wrapWebserviceInput = this._eventMsgWebServiceInput.parentNode.parentNode;\r\n    this.wrapBindingType = this._eventMsgBindingType.parentNode.parentNode;\r\n    this.wrapBindingValue = this._eventMsgBindingValue.parentNode.parentNode;\r\n    this.wrapBindingAttrType = this._panel.querySelector('#wrapper_event_message_binding_attr_type');\r\n    this.wrapTimerAttrType = this._eventTimerAttrType.parentNode.parentNode;\r\n    // Events\r\n    this._detailTypeSelect.addEventListener('input', () => {\r\n      this._onDetailTypeSelectChanged();\r\n    });\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onNameInputChanged();\r\n      },\r\n      this._nameInput,\r\n      'input',\r\n      500,\r\n    );\r\n\r\n    this._eventTimerType.addEventListener('input', () => {\r\n      this._onTimerTypeChanged();\r\n    });\r\n  }\r\n\r\n  get nameInput() {\r\n    return this._nameInput.value;\r\n  }\r\n\r\n  get detailTypeSelect() {\r\n    return this._detailTypeSelect.value.toLowerCase();\r\n  }\r\n\r\n  set nameInput(value) {\r\n    this._nameInput.value = value;\r\n  }\r\n\r\n  set detailTypeSelect(value) {\r\n    this._detailTypeSelect.value = value;\r\n  }\r\n\r\n  set eventNameType(value) {\r\n    this._eventNameType.value = value;\r\n  }\r\n\r\n  get eventTimerType() {\r\n    return this._eventTimerType.value;\r\n  }\r\n\r\n  set eventTimerType(value) {\r\n    this._eventTimerType.value = value;\r\n  }\r\n\r\n  get eventTimerStartDate() {\r\n    return this._eventTimerStartDate.date;\r\n  }\r\n\r\n  set eventTimerStartDate(value) {\r\n    this._eventTimerStartDate.date = value;\r\n  }\r\n\r\n  get eventTimerEndDate() {\r\n    return this._eventTimerEndDate.date;\r\n  }\r\n\r\n  set eventTimerEndDate(value) {\r\n    this._eventTimerEndDate.date = value;\r\n  }\r\n\r\n  get eventTimerUnit() {\r\n    return this._eventTimerUnit.value;\r\n  }\r\n\r\n  set eventTimerUnit(value) {\r\n    this._eventTimerUnit.value = value;\r\n  }\r\n\r\n  get eventTimerValue() {\r\n    const { value } = this._eventTimerValue;\r\n    return value !== '' ? parseInt(value, 10) : value;\r\n  }\r\n\r\n  set eventTimerValue(value) {\r\n    this._eventTimerValue.value = value;\r\n  }\r\n\r\n  get eventTimerAttribute() {\r\n    return this._eventTimerAttributeSearch.valueEl;\r\n  }\r\n\r\n  set eventTimerAttribute(value) {\r\n    this._eventTimerAttributeSearch.selectedItem = value;\r\n  }\r\n\r\n  set eventTimerAttrType(value) {\r\n    this._eventTimerAttrType.value = value;\r\n  }\r\n\r\n  get eventTimerAttrType() {\r\n    return this._eventTimerAttrType.value;\r\n  }\r\n\r\n  get eventMsgWebServiceInput() {\r\n    return this._eventMsgWebServiceInput.value;\r\n  }\r\n\r\n  set eventMsgWebServiceInput(value) {\r\n    this._eventMsgWebServiceInput.value = value;\r\n  }\r\n\r\n  set eventMsgAttributeSearch(value) {\r\n    this._eventMsgAttributeSearch.valueEl = value;\r\n  }\r\n\r\n  get eventMsgAttributeSearch() {\r\n    return this._eventMsgAttributeSearch.valueEl;\r\n  }\r\n\r\n  get eventMsgAttributeType() {\r\n    return this._eventMsgAttributesType.value;\r\n  }\r\n\r\n  set eventMsgAttributeType(value) {\r\n    this._eventMsgAttributesType.value = value;\r\n  }\r\n\r\n  get eventMsgCatchThrow() {\r\n    return this._eventMsgCatchThrow.value;\r\n  }\r\n\r\n  set eventMsgCatchThrow(value) {\r\n    this._eventMsgCatchThrow.value = value;\r\n  }\r\n\r\n  set eventMsgWebServiceSearch(value) {\r\n    this._eventMsgWebServiceSearch.valueEl = value;\r\n  }\r\n\r\n  get eventMsgWebServiceSearch() {\r\n    return this._eventMsgWebServiceSearch.valueEl;\r\n  }\r\n\r\n  get eventMsgBindingType() {\r\n    return this._eventMsgBindingType.value;\r\n  }\r\n\r\n  set eventMsgBindingType(value) {\r\n    this._eventMsgBindingType.value = value;\r\n  }\r\n\r\n  get eventMsgBindingValue() {\r\n    return this._eventMsgBindingValue.value;\r\n  }\r\n\r\n  set eventMsgBindingValue(value) {\r\n    this._eventMsgBindingValue.value = value;\r\n  }\r\n\r\n  set eventMsgWSAttributeSearch(value) {\r\n    this._eventMsgWSAttributeSearch.valueEl = value;\r\n  }\r\n\r\n  get bindingAttrTypes() {\r\n    return this.wrapBindingAttrType.querySelectorAll('input[type=radio]');\r\n  }\r\n\r\n  get bindingAttrTypeChecked() {\r\n    const checked = this.wrapBindingAttrType.querySelector('input[type=radio]:checked');\r\n    return checked.value;\r\n  }\r\n\r\n  set bindingAttrTypeToCheck(value) {\r\n    const radio = this.wrapBindingAttrType.querySelector(`#binding_attr_type_${value}`);\r\n    radio.checked = true;\r\n  }\r\n\r\n  get wsSelected() {\r\n    return this._wsSelected;\r\n  }\r\n\r\n  set wsSelected(value) {\r\n    this._wsSelected = value;\r\n  }\r\n\r\n  _initTimerComponents() {\r\n    const { TIMER, TIMER_ATTRIBUTE_SEARCH } = this.EVENT_PANEL;\r\n    const { TIMER_START_DATE, TIMER_END_DATE } = this.EVENT_PANEL;\r\n\r\n    this._eventTimerExp = this._includeComponent(\r\n      'expander',\r\n      this.wrapTimer,\r\n      this._eventMessageExp.expandZone,\r\n      'afterend',\r\n      TIMER,\r\n    );\r\n    this._eventTimerAttributeSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapEvtTimerAttrSearch,\r\n      this.wrapTimerAttrType,\r\n      'beforebegin',\r\n      TIMER_ATTRIBUTE_SEARCH,\r\n    );\r\n    const dateWrapper = this._getTimerGroup('date');\r\n    this._eventTimerStartDate = this._includeComponent(\r\n      'date',\r\n      this.wrapStartDate,\r\n      dateWrapper,\r\n      'inner',\r\n      TIMER_START_DATE,\r\n    );\r\n    this._eventTimerEndDate = this._includeComponent('date', this.wrapEndDate, dateWrapper, 'inner', TIMER_END_DATE);\r\n  }\r\n\r\n  _initMessageComponents() {\r\n    const { MESSAGE, MSG_ATTR_SEARCH, MSG_ATTRS_LIST } = this.EVENT_PANEL;\r\n    const {\r\n      MSG_WS_SEARCH, MSG_WS_LIST, MSG_BINDINGS_LIST, MSG_WS_ATTR_SEARCH,\r\n    } = this.EVENT_PANEL;\r\n    MSG_ATTRS_LIST.arrayList = this._createMessageAttributesArrayList();\r\n    MSG_WS_LIST.arrayList = this._createMessageWebServicesArrayList();\r\n    MSG_BINDINGS_LIST.arrayList = this._createMessageBindingsArrayList();\r\n\r\n    const isProduction = Config.ENV === 'Production';\r\n    MSG_ATTR_SEARCH.add = isProduction;\r\n\r\n    // Message Comps Start-Intermediate\r\n    this._eventMessageExp = this._includeComponent(\r\n      'expander',\r\n      this.wrapMessage,\r\n      this.wrapDetailTypeSelect,\r\n      'afterend',\r\n      MESSAGE,\r\n    );\r\n    this._eventMsgAttributeSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapEvtMsgAttrSearch,\r\n      this.wrapWebserviceInput,\r\n      'afterend',\r\n      MSG_ATTR_SEARCH,\r\n    );\r\n    this._eventMsgAttributesList = this._includeComponent(\r\n      'list',\r\n      this.wrapEvtMsgAttrsList,\r\n      this.wrapAttrsType,\r\n      'afterend',\r\n      MSG_ATTRS_LIST,\r\n    );\r\n    // Message Comps End\r\n    this._eventMsgWebServiceSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapEvtMsgWSSearch,\r\n      this._eventMsgAttributesList.wrapper,\r\n      'afterend',\r\n      MSG_WS_SEARCH,\r\n    );\r\n    this._eventMsgWebServicesList = this._includeComponent(\r\n      'list',\r\n      this.wrapEvtMsgWSList,\r\n      this._eventMsgWebServiceSearch.wrapper,\r\n      'afterend',\r\n      MSG_WS_LIST,\r\n    );\r\n    this._eventMsgWSBindingsList = this._includeComponent(\r\n      'list',\r\n      this.wrapEvtMsgWSBindingsList,\r\n      this.wrapBindingType,\r\n      'beforebegin',\r\n      MSG_BINDINGS_LIST,\r\n    );\r\n    this._eventMsgWSAttributeSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapEvtMsgWSAttrSearch,\r\n      this.wrapBindingAttrType,\r\n      'afterend',\r\n      MSG_WS_ATTR_SEARCH,\r\n    );\r\n    this._wsSelected = null;\r\n    this._eventMsgAttributeSearch.toggleDisabledButton(true);\r\n  }\r\n\r\n  _initEventOfComponents() {\r\n    this._eventTimerStartDate.on('change_date', (date) => {\r\n      this._onEventTimerDateChanged(date, 'start');\r\n    });\r\n\r\n    this._eventTimerEndDate.on('change_date', (date) => {\r\n      this._onEventTimerDateChanged(date, 'end');\r\n    });\r\n\r\n    this._eventTimerUnit.addEventListener('input', () => {\r\n      this._onEventTimerFrequencyChanged();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onValidateFrequencyValue();\r\n        this._onEventTimerFrequencyChanged();\r\n      },\r\n      this._eventTimerValue,\r\n      'input',\r\n      100,\r\n    );\r\n\r\n    this._eventTimerAttrType.addEventListener('input', () => {\r\n      this._onEventTimerAttributeChanged();\r\n    });\r\n\r\n    this._eventTimerAttributeSearch.on('select_item', () => {\r\n      this._onEventTimerAttributeChanged();\r\n    });\r\n\r\n    this._eventMessageExp.on('expand', () => {\r\n      this._onEventMessageExpand();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onEventMessageWebServiceChanged();\r\n      },\r\n      this._eventMsgWebServiceInput,\r\n      'input',\r\n    );\r\n\r\n    this._eventMsgAttributeSearch.on('add_item', () => {\r\n      this._onAddNewMessageAttribute();\r\n    });\r\n\r\n    this._eventMsgAttributeSearch.on('select_item', (item) => {\r\n      this._onSelectToEditEventMsgAttributeSeacrh(item);\r\n    });\r\n\r\n    this._eventMsgAttributesList.on('delete_item', (item) => {\r\n      this._onDeleteEventMsgAttributesList(item);\r\n    });\r\n\r\n    this._eventMsgAttributesList.on('delete_all_items', () => {\r\n      this._onDeleteAllEventMsgAttributesList();\r\n    });\r\n\r\n    this._eventMsgAttributesList.on('add_item', () => {\r\n      this._onAddEventMessageAttribute();\r\n    });\r\n\r\n    this._eventMsgAttributesList.on('selected_item', (item) => {\r\n      this._onSelectEventMsgAttributesList(item);\r\n    });\r\n\r\n    this._eventMsgAttributesList.on('edit_item', (status) => {\r\n      this._onEditEventMsgAttributesList(status);\r\n    });\r\n\r\n    this._eventMsgAttributesList.on('checked_item', (param) => {\r\n      this._onCheckedEventMsgAttributesList(param);\r\n    });\r\n\r\n    this._eventMsgAttributesType.addEventListener('input', () => {\r\n      this._onEventMsgAttributesTypeChanged();\r\n    });\r\n\r\n    this._eventMsgCatchThrow.addEventListener('input', () => {\r\n      this._onEventMsgCatchThrowChanged();\r\n    });\r\n\r\n    this._eventMsgWebServicesList.on('add_item', () => {\r\n      this._onAddEventMsgWebServicesList();\r\n    });\r\n\r\n    this._eventMsgWebServicesList.on('selected_item', (item) => {\r\n      this._onSelectMsgWebServicesList(item);\r\n    });\r\n\r\n    this._eventMsgWebServicesList.on('edit_item', (status) => {\r\n      this._onEditMsgWebServicesList(status);\r\n    });\r\n\r\n    this._eventMsgWebServicesList.on('delete_item', (item) => {\r\n      this._onDeleteEventMsgWebServicesList(item);\r\n    });\r\n\r\n    this._eventMsgWebServicesList.on('delete_all_items', () => {\r\n      this._onDeleteAllEventMsgWebServices();\r\n    });\r\n\r\n    this._eventMsgWebServiceSearch.on('select_item', (item) => {\r\n      this._onSelectToEditEventMsgWebServiceSearch(item);\r\n    });\r\n\r\n    this._eventMsgWSBindingsList.on('selected_item', (item) => {\r\n      this._onSelectEventMsgWSBindings(item);\r\n    });\r\n\r\n    this._eventMsgBindingType.addEventListener('input', () => {\r\n      this._onEventMsgWSBindingTypeChanged();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onEventMsgWSBindingValueChanged();\r\n      },\r\n      this._eventMsgBindingValue,\r\n      'input',\r\n    );\r\n\r\n    this.bindingAttrTypes.forEach((radio) => {\r\n      radio.addEventListener('click', () => {\r\n        this._onEventMsgWSBindingAttributeChanged('attrType');\r\n      });\r\n    });\r\n\r\n    this._eventMsgWSAttributeSearch.on('select_item', (item) => {\r\n      this._onEventMsgWSBindingAttributeChanged('attribute', item);\r\n    });\r\n  }\r\n\r\n  _setDetailTypeSelect(el) {\r\n    let optionsValues = ['None', 'Message', 'Signal', 'Timer']; // Is very Important this order !!!\r\n    this._cleanTypeSelect();\r\n    if (el.elementType === Config.END_EVENT) {\r\n      optionsValues.pop();\r\n      optionsValues = optionsValues.concat(['Terminate', 'Error']);\r\n    }\r\n    if (el.elementType === Config.INTERMEDIATE_EVENT && el.isAttached) {\r\n      optionsValues.shift();\r\n      optionsValues = [...optionsValues, 'Multiple', 'Error'];\r\n      const taskContainer = this.editor.elements.find((element) => {\r\n        return element.elementType === Config.TASK && element.id === el.target;\r\n      });\r\n      if (taskContainer) {\r\n        const { taskType } = taskContainer;\r\n        if (taskType === 'receive' || taskType === 'send' || taskType === 'service' || taskType === 'script') {\r\n          optionsValues.shift();\r\n        }\r\n      }\r\n    }\r\n    optionsValues.forEach((option) => this._createOptionElement(option));\r\n  }\r\n\r\n  _getTypeToShow(el) {\r\n    const { elementType } = el;\r\n    const splitType = elementType.split('Event');\r\n    const [type] = splitType;\r\n    return `${type.toUpperCase()} ${i18next.t('eventPropsPanel.txtProDesEventPanelTypeToShow')}`;\r\n  }\r\n\r\n  show(el) {\r\n    this._setDetailTypeSelect(el);\r\n    this.eventNameType = this._getTypeToShow(el);\r\n    this.detailTypeSelect = el.eventType;\r\n    this.nameInput = el.eventName;\r\n    this.documentationInput = el.documentation;\r\n    this._showTimerComponentsAccordingToType(el);\r\n    this._showMessageComponentsAccordingToType(el);\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _getDateObject(date) {\r\n    const startDate = {\r\n      date: {\r\n        year: date.getFullYear(),\r\n        month: date.getMonth() + 1,\r\n        day: date.getDate(),\r\n      },\r\n      time: { hour: date.getHours(), minutes: date.getMinutes() },\r\n    };\r\n    return startDate;\r\n  }\r\n\r\n  _showTimerComponentsAccordingToType(el) {\r\n    const isIntermediate = el.elementType !== Config.INTERMEDIATE_EVENT;\r\n    const timerValue = this._getTimerShowValue(el);\r\n\r\n    this._changeVisibility(this._eventTimerExp.wrapper, el.eventType === 'timer' || el.eventType === 'multiple');\r\n    this._changeVisibility(this._eventTimerEndDate.wrapper, isIntermediate);\r\n    this._eventTimerExp.showValue(timerValue);\r\n\r\n    if (this._eventTimerExp.isExpand && el.eventType !== 'timer') {\r\n      this._eventTimerExp.expand();\r\n    }\r\n\r\n    this._cleanTimerDateComponents();\r\n    this._cleanTimerFrequencyComponents();\r\n    this._cleanTimerAttributeComponents();\r\n\r\n    if (el.eventType === 'timer' && el.timer) {\r\n      const date = el.dateTimer || {};\r\n      if (date) this.eventTimerType = 'date';\r\n      if (date.start) {\r\n        this.eventTimerStartDate = this._getDateObject(date.start);\r\n      }\r\n      if (date.end) this.eventTimerEndDate = this._getDateObject(date.end);\r\n\r\n      const frequency = el.frequencyTimer;\r\n      if (frequency) {\r\n        this.eventTimerUnit = frequency.unit;\r\n        this.eventTimerValue = frequency.value;\r\n        this.eventTimerType = 'frequency';\r\n      }\r\n\r\n      const attribute = el.attributeTimer;\r\n      if (attribute) {\r\n        this.eventTimerType = 'attribute';\r\n        this.eventTimerAttrType = attribute.type;\r\n        const { id, name } = attribute;\r\n        this.eventTimerAttribute = { id, name };\r\n      }\r\n      this._onTimerTypeChanged();\r\n    }\r\n    this._changeVisibility(this._eventMessageExp.wrapper, el.eventType === 'message' || el.eventType === 'multiple');\r\n  }\r\n\r\n  _showMessageComponentsAccordingToType(el) {\r\n    const { elementType, eventType } = el;\r\n    const isStart = elementType === Config.START_EVENT;\r\n    const isItermediate = elementType === Config.INTERMEDIATE_EVENT;\r\n    const isEnd = elementType === Config.END_EVENT;\r\n    const isMessage = eventType === 'message' || eventType === 'multiple';\r\n    const isThrow = el.catchThrowMessage === 'throw';\r\n    const isIntermediateThrow = isItermediate && isThrow;\r\n    const showValue = this._getMessageShowValue(el);\r\n\r\n    this._toggleEventMessageComponents(el);\r\n    if (!isMessage && this._eventMessageExp.isExpand) {\r\n      this._eventMessageExp.expand();\r\n    }\r\n    this._eventMessageExp.showValue(showValue);\r\n\r\n    if (isMessage && (isStart || (isItermediate && !isIntermediateThrow))) {\r\n      this._fillStartOrItermEventMessageComponents(el, isItermediate);\r\n    }\r\n    if (isMessage && (isEnd || isIntermediateThrow)) {\r\n      this._fillEndEventMessageComponents(el);\r\n    }\r\n  }\r\n\r\n  _cleanStartItermEventMessageCmp() {\r\n    this.eventMsgCatchThrow = 'catch';\r\n    this.eventMsgWebServiceInput = '';\r\n    this.eventMsgAttributeType = 'entity';\r\n    this._eventMsgAttributeSearch.selectedItem = undefined;\r\n    this._eventMsgAttributesList.arrayListData = [];\r\n  }\r\n\r\n  _cleanEndEventMessageCmp() {\r\n    this._eventMsgWebServiceSearch.selectedItem = undefined;\r\n    this._eventMsgWebServicesList.arrayListData = [];\r\n    this._eventMsgWSBindingsList.arrayListData = [];\r\n    this.eventMsgBindingType = 'none';\r\n    this._eventMsgBindingType.disabled = true;\r\n    this.eventMsgBindingValue = '';\r\n    this._eventMsgWSAttributeSearch.selectedItem = undefined;\r\n    this.bindingAttrTypeToCheck = 'entity';\r\n    this.wsSelected = null;\r\n  }\r\n\r\n  _fillStartOrItermEventMessageComponents(el, isIntermediate) {\r\n    this._cleanStartItermEventMessageCmp();\r\n    const attrType = this.eventMsgAttributeType;\r\n    if (isIntermediate) {\r\n      this.eventMsgCatchThrow = el.catchThrowMessage || 'catch';\r\n    }\r\n    this.eventMsgWebServiceInput = el.webServiceMessage || '';\r\n    if (this._eventMsgAttributesList.editStatus) {\r\n      this._eventMsgAttributesList.editStatus = false;\r\n    }\r\n    this._eventMsgAttributesList.arrayListData = attrType === 'process' ? el.processAttributesMessage || [] : el.entityAttributesMessage || [];\r\n  }\r\n\r\n  _fillEndEventMessageComponents(el) {\r\n    this._cleanEndEventMessageCmp();\r\n    const webServices = this._getFilteredWebServicesArray(el.webServices || []);\r\n    this._eventMsgWebServicesList.arrayListData = webServices;\r\n    this._eventMsgWSBindingsList.arrayListData = [];\r\n    this.eventMsgCatchThrow = el.catchThrowMessage || 'throw';\r\n    if (this._eventMsgWebServicesList.editStatus) {\r\n      this._eventMsgWebServicesList.editStatus = false;\r\n    }\r\n  }\r\n\r\n  _getFilteredWebServicesArray(webServices) {\r\n    const ignore = 'BPMNAutoComplete';\r\n    let filtered = [];\r\n    if (this.element.webServices) {\r\n      filtered = webServices.filter((ws) => ws.busClaName !== ignore);\r\n    }\r\n    return filtered;\r\n  }\r\n\r\n  async _getBindings(classId) {\r\n    let bindings = [];\r\n    let url = Config.EVT_MSG_WS_BINDINGS_URL;\r\n    if (Config.ENV !== 'Development') url = `${url}${classId}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n        this.showInvalidSession();\r\n      }\r\n      const convert = new Converter();\r\n      bindings = convert.convertToJson(response.data);\r\n    } catch (error) {\r\n      throw Error(`${i18next.t('eventPropsPanel.txtProDesEventPanelErrorObtainParameter')} \\n${error}`);\r\n    }\r\n    const parameters = this._customBindingsParameters(bindings);\r\n    return mapInOutParameters(parameters);\r\n  }\r\n\r\n  _getTimerShowValue(el) {\r\n    const valueToShow = [];\r\n    if (el.timer) {\r\n      if (el.dateTimer) valueToShow.push('DATE');\r\n      if (el.frequencyTimer) valueToShow.push('FREQUENCY');\r\n      if (el.attributeTimer) valueToShow.push('ATTRIBUTE');\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _updateMessageExpValue(el) {\r\n    const value = this._getMessageShowValue(el);\r\n    this._eventMessageExp.showValue(value);\r\n  }\r\n\r\n  _customBindingsParameters(parameters = []) {\r\n    if (this.wsSelected) {\r\n      const { bindings } = this.wsSelected;\r\n      const indexBindings = indexByProperty(bindings || [], 'busClaParId');\r\n      return parameters.map((parameter) => {\r\n        const existBinding = indexBindings[parameter.id];\r\n        return {\r\n          ...parameter,\r\n          binding: existBinding ? this._getEspecificationBinding(existBinding) : 'None',\r\n        };\r\n      });\r\n    }\r\n    return parameters;\r\n  }\r\n\r\n  _getEspecificationBinding(binding) {\r\n    const isValue = binding.busClaParBndType === 'V' && binding.busClaParBndValue !== '';\r\n    const isProcess = binding.busClaParBndType === 'P';\r\n    const isEntity = binding.busClaParBndType === 'E';\r\n    const isAttribute = (isProcess || isEntity) && binding.attId !== -1 && binding.attId;\r\n    if (isValue) return 'Value';\r\n    if (isAttribute) return 'Attribute';\r\n    return 'None';\r\n  }\r\n\r\n  _getMessageShowValue(el) {\r\n    const valueToShow = [];\r\n    const { elementType } = el;\r\n    const isStart = elementType === Config.START_EVENT;\r\n    const isIntermediate = elementType === Config.INTERMEDIATE_EVENT;\r\n    const isEnd = elementType === Config.END_EVENT;\r\n    const isThrow = el.catchThrowMessage === 'throw';\r\n    const isIntermediateThrow = isIntermediate && isThrow;\r\n    if (el.message && (isStart || (isIntermediate && !isIntermediateThrow)) && !isEnd) {\r\n      valueToShow.push(el.webServiceMessage || '');\r\n    }\r\n    if (el.message && (isEnd || isIntermediateThrow) && !isStart && el.webServices) {\r\n      const ignore = 'BPMNAutoComplete';\r\n      el.webServices.forEach((value) => {\r\n        if (value.busClaName !== ignore) valueToShow.push(value.busClaName);\r\n      });\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _getTimerGroup(name) {\r\n    const timerGroup = this._eventTimerExp.expandZone.querySelector(`#wrapper_timer_${name}`);\r\n    return timerGroup;\r\n  }\r\n\r\n  _getActiveTimerGroup() {\r\n    const activeGroup = this._eventTimerExp.expandZone.querySelector('.timer_group[data-visible=true]');\r\n    return activeGroup;\r\n  }\r\n\r\n  _toggleEventMessageComponents(el) {\r\n    this._cleanEndEventMessageCmp();\r\n    this._cleanAndHideBindingsComponents();\r\n    const isStart = el.elementType === Config.START_EVENT;\r\n    const isIntermediate = el.elementType === Config.INTERMEDIATE_EVENT;\r\n    const isEnd = el.elementType === Config.END_EVENT;\r\n    const catchThrow = el.catchThrowMessage || 'catch';\r\n    const isCatch = isStart || (isIntermediate && catchThrow === 'catch');\r\n    const { eventType, isAttached } = el;\r\n    const isThrow = isEnd || (isIntermediate && catchThrow === 'throw');\r\n    const hideCatchThrow = isIntermediate && eventType !== 'multiple' && eventType === 'message' && !isAttached;\r\n    this._changeVisibility(this.wrapMsgCatchThrow, hideCatchThrow);\r\n    this._toggleCatchEventMessageComponents(isCatch);\r\n    this._toggleThrowEventMessageComponents(isThrow);\r\n  }\r\n\r\n  _toggleCatchEventMessageComponents(isCatch) {\r\n    this._changeVisibility(this.wrapWebserviceInput, isCatch);\r\n    this._changeVisibility(this.wrapAttrsType, isCatch);\r\n    this._changeVisibility(this._eventMsgAttributeSearch.wrapper, isCatch);\r\n    this._changeVisibility(this._eventMsgAttributesList.wrapper, isCatch);\r\n  }\r\n\r\n  _toggleThrowEventMessageComponents(isThrow) {\r\n    this._changeVisibility(this._eventMsgWebServiceSearch.wrapper, isThrow);\r\n    this._changeVisibility(this._eventMsgWebServicesList.wrapper, isThrow);\r\n    this._changeVisibility(this._eventMsgWSBindingsList.wrapper, isThrow);\r\n    this._changeVisibility(this.wrapBindingType, isThrow);\r\n    this._changeVisibility(this.wrapBindingValue, false);\r\n    this._changeVisibility(this.wrapBindingAttrType, false);\r\n    this._changeVisibility(this._eventMsgWSAttributeSearch.wrapper, false);\r\n  }\r\n\r\n  _isActiveTimerGroup(name) {\r\n    const active = this._getActiveTimerGroup();\r\n    const idActive = active.id;\r\n    const nameActive = idActive.split('wrapper_timer_')[1];\r\n    return nameActive === name;\r\n  }\r\n\r\n  _onTimerTypeChanged() {\r\n    const timerType = this.eventTimerType;\r\n    const active = this._getActiveTimerGroup();\r\n    const timerGroup = this._getTimerGroup(timerType);\r\n\r\n    if (this.element) {\r\n      const actualName = active.getAttribute('data-timer');\r\n      if (actualName !== timerType) {\r\n        this._onDeleteTimerProperty(actualName);\r\n\r\n        if (!this._isActiveTimerGroup(timerType)) {\r\n          this._changeVisibility(active, false);\r\n          this._changeVisibility(timerGroup, true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getFilteredAttributesByType(type, attributes) {\r\n    const filterBy = type.toUpperCase().charAt(0);\r\n    const filtered = attributes.filter((attr) => attr.type === filterBy);\r\n    return filtered;\r\n  }\r\n\r\n  _createMessageAttributesArrayList() {\r\n    const arrayList = {\r\n      header: [\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgAttributeHeaderName'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgAttributeHeaderMulti'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgAttributeHeaderUk'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgAttributeHeaderEdit'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgAttributeHeaderDeleteAll'),\r\n      ],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: true,\r\n      data: [],\r\n      notShow: ['id', 'type'],\r\n      actions: [\r\n        { key: 'multivalued', type: 'checkbox' },\r\n        { key: 'uk', type: 'checkbox' },\r\n      ],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createMessageWebServicesArrayList() {\r\n    const arrayList = {\r\n      header: [\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgWsHeaderName'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgWsHeaderEdit'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgWsHeaderDeleteAll'),\r\n      ],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: true,\r\n      data: [],\r\n      notShow: ['id', 'eventId', 'busClaId', 'name', 'WS', 'order', 'bindings', 'haveCond', 'condition'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createMessageBindingsArrayList() {\r\n    const arrayList = {\r\n      header: [\r\n        i18next.t(\r\n          'eventPropsPanel.txtProDesEventPanelMsgBindingHeaderParameter',\r\n        ),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgBindingHeaderType'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgBindingHeaderInOut'),\r\n        i18next.t('eventPropsPanel.txtProDesEventPanelMsgBindingHeaderBinding'),\r\n      ],\r\n      deleteAction: false,\r\n      deleteActionAll: false,\r\n      editAction: false,\r\n      data: [],\r\n      notShow: ['id'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _createOptionElement(value) {\r\n    const option = document.createElement('option');\r\n    option.setAttribute('value', value.toLowerCase());\r\n    option.innerText = value;\r\n    if (this._detailTypeSelect) {\r\n      this._detailTypeSelect.appendChild(option);\r\n    }\r\n  }\r\n\r\n  _onDetailTypeSelectChanged() {\r\n    const type = this.detailTypeSelect;\r\n    if (this.element) {\r\n      const actual = this.element.eventType;\r\n      if (actual !== type) {\r\n        if (actual === 'message' && type === 'none') {\r\n          this.element.webServices = this.element.webServices.filter((ws) => ws.busClaName === 'BPMNAutoComplete');\r\n        } else {\r\n          this.element.webServices = [];\r\n        }\r\n        this.element.deletePropertyByName((type !== 'timer' || type !== 'multiple') && 'timer');\r\n        this.element.deletePropertyByName((type !== 'message' || type !== 'multiple') && 'message');\r\n        this.element.type = type;\r\n        this._showTimerComponentsAccordingToType(this.element);\r\n        this._showMessageComponentsAccordingToType(this.element);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onNameInputChanged() {\r\n    this.element.name = this.nameInput;\r\n  }\r\n\r\n  _cleanTypeSelect() {\r\n    const options = this._detailTypeSelect.querySelectorAll('option');\r\n    if (options.length !== 0) {\r\n      options.forEach((option) => option.remove());\r\n    }\r\n  }\r\n\r\n  _cleanTimerDateComponents() {\r\n    this._eventTimerStartDate.clean();\r\n    this._eventTimerEndDate.clean();\r\n  }\r\n\r\n  _cleanTimerFrequencyComponents() {\r\n    this.eventTimerUnit = 'Minutes';\r\n    this.eventTimerValue = '';\r\n  }\r\n\r\n  _cleanTimerAttributeComponents() {\r\n    this.eventTimerAttrType = 'entity';\r\n    this.eventTimerAttribute = undefined;\r\n  }\r\n\r\n  _onDeleteTimerProperty(timerType) {\r\n    if (this.element) {\r\n      const timer = this.element.timer || {};\r\n      if (timer[timerType]) this.element.deleteTimerProperty(timerType);\r\n      switch (timerType.toUpperCase()) {\r\n        case 'DATE':\r\n          this._cleanTimerDateComponents();\r\n          break;\r\n        case 'FREQUENCY':\r\n          this._cleanTimerFrequencyComponents();\r\n          break;\r\n        case 'ATTRIBUTE':\r\n          this._cleanTimerAttributeComponents();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      const showValue = this._getTimerShowValue(this.element);\r\n      this._eventTimerExp.showValue(showValue);\r\n    }\r\n  }\r\n\r\n  _onEventTimerDateChanged(date, type) {\r\n    if (date && this.element) {\r\n      this.element.setDateTimerByType(date, type);\r\n      const showData = this._getTimerShowValue(this.element);\r\n      this._eventTimerExp.showValue(showData);\r\n    }\r\n  }\r\n\r\n  _onValidateFrequencyValue() {\r\n    const value = this.eventTimerValue;\r\n    if (value < 1 || isNaN(value)) {\r\n      this.eventTimerValue = 1;\r\n    }\r\n    if (value === '') this.eventTimerValue = '';\r\n  }\r\n\r\n  _onEventTimerFrequencyChanged() {\r\n    const frequency = {\r\n      unit: this.eventTimerUnit,\r\n      value: this.eventTimerValue,\r\n    };\r\n    const actualFreq = this.element.frequencyTimer || {};\r\n    if (actualFreq.unit !== frequency.unit) {\r\n      frequency.value = '';\r\n      this.element.frequencyTimer = frequency;\r\n      this.eventTimerValue = frequency.value;\r\n    }\r\n    if (this.element && this.eventTimerValue !== '') {\r\n      const freqTimer = this.element.frequencyTimer || {};\r\n      if (frequency.unit !== freqTimer.value || frequency.value !== freqTimer.value) {\r\n        this.element.frequencyTimer = frequency;\r\n        const showData = this._getTimerShowValue(this.element);\r\n        this._eventTimerExp.showValue(showData);\r\n        this.eventTimerValue = frequency.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onEventTimerAttributeChanged() {\r\n    const selected = this._eventTimerAttributeSearch.selectedItem || {};\r\n    let value = { type: this.eventTimerAttrType };\r\n    if (this.element) {\r\n      const { id, name } = selected;\r\n      value = { ...value, id: parseInt(id || 0, 10), name: name || '' };\r\n      const actualValue = this.element.attributeTimer || {};\r\n      if (value.type !== actualValue.type || value.id !== actualValue.id || value.name !== actualValue.name) {\r\n        if (value.type !== actualValue.type) {\r\n          this.eventTimerAttribute = undefined;\r\n          value = { ...value, id: 0, name: '' };\r\n        }\r\n        this.element.attributeTimer = value;\r\n\r\n        const showData = this._getTimerShowValue(this.element);\r\n        this._eventTimerExp.showValue(showData);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onEventMessageExpand() {\r\n    if (!this.element.message) {\r\n      this._cleanStartItermEventMessageCmp();\r\n      this._cleanEndEventMessageCmp();\r\n    }\r\n  }\r\n\r\n  _onEventMessageWebServiceChanged() {\r\n    if (this.element) {\r\n      const actualWS = this.element.webServiceMessage;\r\n      const webService = this.eventMsgWebServiceInput;\r\n      if (actualWS !== webService) {\r\n        this.element.webServiceMessage = webService;\r\n\r\n        const showValue = this._getMessageShowValue(this.element);\r\n        this._eventMessageExp.showValue(showValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  async _onAddNewMessageAttribute() {\r\n    const attribute = this._eventMsgAttributeSearch.selectedItem;\r\n    const attrName = this.eventMsgAttributeSearch;\r\n    if (!attribute && Config.ENV === 'Production' && this.element) {\r\n      const nameExp = new RegExp(/^[a-zA-Z][\\w]+[a-zA-Z0-9]$/gi);\r\n      if (nameExp.test(attrName)) {\r\n        const url = `${Config.EVT_MSG_NEW_ATTRS_URL}${encodeURI(attrName)}`;\r\n        try {\r\n          const response = await axios.post(url);\r\n\r\n          const converter = new Converter();\r\n          if (response && response) {\r\n            if (response.data.toUpperCase().indexOf('HTML') > -1) {\r\n              this.showInvalidSession();\r\n            }\r\n            const [newAttr] = converter.convertToJson(response.data);\r\n            this._eventMsgAttributeSearch.selectedItem = newAttr;\r\n            this._eventMsgAttributeSearch.reloadData();\r\n            this._eventMsgAttributeSearch.toggleDisabledButton(true);\r\n\r\n            // message\r\n            const options = { ...this.OPTIONS_TOAST };\r\n            options.type = 'success';\r\n            options.title = i18next.t('eventPropsPanel.txtProDesEventPanelToastTitleSuccess');\r\n            options.message = i18next.t('eventPropsPanel.txtProDesEventPanelToastTitleSuccessMessage');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(`${i18next.t('eventPropsPanel.txtProDesEventPanelErrorInsertAttribute')}: \\n ${error}`);\r\n        }\r\n      } else {\r\n        const options = { ...this.OPTIONS_TOAST };\r\n        options.type = 'danger';\r\n        options.title = i18next.t('eventPropsPanel.txtProDesEventPanelToastTitleError');\r\n        options.message = `${i18next.t(\r\n          'eventPropsPanel.txtProDesEventPanelErrorMessageAttrName',\r\n        )} <b>\"${attrName}\"</b> ${i18next.t('eventPropsPanel.txtProDesEventPanelErrorMessageNotValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onAddEventMessageAttribute() {\r\n    const attribute = this._eventMsgAttributeSearch.selectedItem;\r\n    const attrType = this.eventMsgAttributeType;\r\n    if (attribute && this.element) {\r\n      const newAttribute = {\r\n        id: parseInt(attribute.id, 10),\r\n        name: attribute.name,\r\n        multivalued: false,\r\n        uk: false,\r\n        type: attrType.toUpperCase().charAt(0),\r\n      };\r\n      const arrayType = attrType === 'process' ? 'attrProc' : 'attrEnt';\r\n      const attrFind = this.element.existMessageAttribute(attribute.id, arrayType);\r\n      if (!attrFind) {\r\n        this.element.addMessageAttribute(newAttribute, attrType);\r\n        const showValue = this._getMessageShowValue(this.element);\r\n        const attributes = attrType === 'process' ? this.element.processAttributesMessage : this.element.entityAttributesMessage;\r\n        this._eventMsgAttributesList.arrayList.data = attributes;\r\n        this._eventMsgAttributesList.refreshList();\r\n        this._eventMessageExp.showValue(showValue);\r\n        // this._eventMsgAttributeSearch.selectedItem = undefined;\r\n      }\r\n      this._eventMsgAttributesList._scrollToRow(newAttribute, () => this._onSelectEventMsgAttributesList(newAttribute));\r\n    }\r\n  }\r\n\r\n  _onEventMsgAttributesTypeChanged() {\r\n    const attrType = this.eventMsgAttributeType;\r\n    if (this.element) {\r\n      const attributes = attrType === 'process' ? this.element.processAttributesMessage : this.element.entityAttributesMessage;\r\n      this._eventMsgAttributesList.arrayList.data = attributes || [];\r\n      this._eventMsgAttributesList.refreshList();\r\n    }\r\n  }\r\n\r\n  _onEventMsgCatchThrowChanged() {\r\n    const catchThrow = this.eventMsgCatchThrow;\r\n    const el = this.element || {};\r\n    if (el.catchThrowMessage !== catchThrow) {\r\n      el.catchThrowMessage = catchThrow;\r\n      this._toggleEventMessageComponents(el);\r\n      this._updateMessageExpValue(el);\r\n    }\r\n  }\r\n\r\n  _onSelectEventMsgAttributesList(item) {\r\n    if (item) {\r\n      const options = { ...this.OPTIONS_TOAST };\r\n      options.message = `\r\n        <b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageAttrName')} </b>${item.name}<br>\r\n        <b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageMultivalued')} </b>${\r\n  item.multivalued ? 'True' : 'False'\r\n}<br>\r\n        <b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageUniqueKey')} </b>${item.uk ? 'True' : 'False'}\r\n      `;\r\n      this.toastMessage.showMessage(options);\r\n    }\r\n  }\r\n\r\n  _onEditEventMsgAttributesList(status) {\r\n    const editAttr = this._eventMsgAttributesList.rowEditableSelected;\r\n    const selected = this._eventMsgAttributeSearch.selectedItem;\r\n    const editAlreadyOnlist = selected ? this._onCheckedEventMsgAttributesList(selected) : false;\r\n    const condition = status && editAttr && !editAlreadyOnlist;\r\n    this._eventMsgAttributeSearch.selectedItem = condition ? { id: editAttr.id, name: editAttr.name } : undefined;\r\n    this._eventMsgWebServiceInput.disabled = condition;\r\n    this._eventMsgAttributesType.disabled = condition;\r\n  }\r\n\r\n  _onCheckedEventMsgAttributesList(param) {\r\n    const { value, position, keyName } = param;\r\n    const { data } = this._eventMsgAttributesList.arrayList;\r\n    const oppositeProp = keyName === 'multivalued' ? 'uk' : 'multivalued';\r\n    if (value) data[position][oppositeProp] = !value;\r\n    this._eventMsgAttributesList.refreshList();\r\n  }\r\n\r\n  _onCheckEditEventMsgAttributeOnList(param) {\r\n    // CHECK IF 'param' ALREADY ASSIGNED ON LIST\r\n    return this._eventMsgAttributesList._arrayList.data.find((item) => {\r\n      return Number(param.id) === Number(item.id);\r\n    });\r\n  }\r\n\r\n  _onSelectToEditEventMsgAttributeSeacrh(attribute) {\r\n    const attrType = this.eventMsgAttributeType;\r\n    const selected = this._eventMsgAttributesList.rowEditableSelected;\r\n    const alreadyOnList = this._onCheckEditEventMsgAttributeOnList(attribute);\r\n    const { editStatus } = this._eventMsgAttributesList;\r\n    if (this.element && attribute && selected && editStatus && !alreadyOnList) {\r\n      const valueAttr = {\r\n        id: parseInt(attribute.id, 10),\r\n        name: attribute.name,\r\n        multivalued: false,\r\n        uk: false,\r\n        type: attrType.toUpperCase().charAt(0),\r\n      };\r\n      this.element.editMessageAttribute(selected.id, attrType, valueAttr);\r\n      const attributes = attrType === 'process' ? this.element.processAttributesMessage : this.element.entityAttributesMessage;\r\n      this._eventMsgAttributesList.rowEditableSelected = valueAttr;\r\n      this._eventMsgAttributesList.arrayList.data = attributes;\r\n      this._eventMsgAttributesList.refreshList();\r\n    }\r\n    const condition = !attribute && this.eventMsgAttributeSearch !== '' && !editStatus;\r\n    this._eventMsgAttributeSearch.toggleDisabledButton(!condition);\r\n  }\r\n\r\n  _onDeleteEventMsgAttributesList(attribute) {\r\n    const attrType = this.eventMsgAttributeType;\r\n    if (this.element && attribute) {\r\n      this.element.deleteMessageAttribute(attribute.id, attrType);\r\n\r\n      const attributes = attrType === 'process' ? this.element.processAttributesMessage : this.element.entityAttributesMessage;\r\n      this._eventMsgAttributesList.arrayList.data = attributes;\r\n      this._eventMsgAttributesList.refreshList();\r\n    }\r\n  }\r\n\r\n  _onDeleteAllEventMsgAttributesList() {\r\n    const attrType = this.eventMsgAttributeType;\r\n    if (this.element) {\r\n      this.element.deleteAllMessageAttributes(attrType);\r\n    }\r\n  }\r\n\r\n  _refreshWebServicesList(el) {\r\n    this._eventMsgWebServicesList.arrayList.data = this._getFilteredWebServicesArray(el.webServices);\r\n    this._eventMsgWebServicesList.refreshList();\r\n    const showData = this._getMessageShowValue(el);\r\n    this._eventMessageExp.showValue(showData);\r\n  }\r\n\r\n  _onAddEventMsgWebServicesList() {\r\n    const wsSelected = this._eventMsgWebServiceSearch.selectedItem;\r\n    if (wsSelected && this.element) {\r\n      const ONCOMPLETE = {\r\n        eventId: 10,\r\n        name: 'ONCOMPLETE',\r\n      };\r\n      const wsFind = this.element.existWebService(wsSelected.id);\r\n      if (!wsFind) {\r\n        const wsToAdd = {\r\n          busClaId: parseInt(wsSelected.id, 10),\r\n          busClaName: wsSelected.name,\r\n          ...ONCOMPLETE,\r\n        };\r\n        const defaultWebService = {\r\n          WS: true,\r\n          busClaId: 102,\r\n          busClaName: 'BPMNAutoComplete',\r\n          eventId: 11,\r\n          id: 1,\r\n          name: 'ONREADY',\r\n          order: 0,\r\n        };\r\n        if (this.element.webServices && this.element.webServices.length === 0 && !this.element.webServices.includes(defaultWebService)) {\r\n          this.element.webServices.push(defaultWebService);\r\n          this._refreshWebServicesList(this.element);\r\n        }\r\n        this.element.addWebService(wsToAdd);\r\n        this._refreshWebServicesList(this.element);\r\n        this._eventMsgWebServicesList._scrollToRow({ id: this.element.webServices.length, name: wsToAdd.busClaName }, () => { this._onSelectMsgWebServicesList(wsToAdd); });\r\n        this._eventMsgWebServiceSearch.selectedItem = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  async _onSelectMsgWebServicesList(webService) {\r\n    if (webService && this.element) {\r\n      if (webService !== this.wsSelected) {\r\n        this.wsSelected = this._eventMsgWebServicesList.rowSelected;\r\n        const bindings = await this._getBindings(webService.busClaId);\r\n        this._eventMsgWSBindingsList.arrayListData = bindings;\r\n        this._cleanAndHideBindingsComponents();\r\n      }\r\n\r\n      const options = {\r\n        ...this.OPTIONS_TOAST,\r\n        message: `<b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageName')}</b> ${webService.busClaName}`,\r\n      };\r\n      this.toastMessage.showMessage(options);\r\n    }\r\n  }\r\n\r\n  _cleanAndHideBindingsComponents() {\r\n    this.eventMsgBindingType = 'none';\r\n    this._eventMsgBindingType.disabled = true;\r\n    this.eventMsgBindingValue = '';\r\n    this.bindingAttrTypeToCheck = 'entity';\r\n    this._eventMsgWSAttributeSearch.selectedItem = undefined;\r\n    this._changeVisibility(this.wrapBindingValue, false);\r\n    this._changeVisibility(this.wrapBindingAttrType, false);\r\n    this._changeVisibility(this._eventMsgWSAttributeSearch.wrapper, false);\r\n  }\r\n\r\n  async _onEditMsgWebServicesList(status) {\r\n    const condition = this.element && status;\r\n    const isVisibleAttr = this._elementVisibility(this._eventMsgWSAttributeSearch.wrapper);\r\n    const isVisibleAttrType = this._elementVisibility(this.wrapBindingAttrType);\r\n    const isVisibleValue = this._elementVisibility(this.wrapBindingValue);\r\n    // const wsSelected = this._eventMsgWebServicesList.rowSelected;\r\n    const wsEdit = this._eventMsgWebServicesList.rowEditableSelected;\r\n    if (condition && (isVisibleAttr || isVisibleAttrType || isVisibleValue)) {\r\n      this._cleanAndHideBindingsComponents();\r\n    }\r\n    if (status) {\r\n      this._eventMsgBindingType.disabled = true;\r\n      this._eventMsgWSBindingsList.unSelectAll();\r\n      this._eventMsgWSBindingsList.disabled = true;\r\n    } else {\r\n      this._eventMsgWSBindingsList.disabled = false;\r\n    }\r\n    this.eventMsgBindingType = 'none';\r\n    this._eventMsgWebServiceSearch.selectedItem = wsEdit ? { id: wsEdit.busClaId, name: wsEdit.busClaName } : undefined;\r\n  }\r\n\r\n  async _onSelectToEditEventMsgWebServiceSearch(webService) {\r\n    const wsToEdit = this._eventMsgWebServicesList.rowEditableSelected;\r\n    const { editStatus } = this._eventMsgWebServicesList;\r\n    if (webService && this.element && editStatus && wsToEdit) {\r\n      const ws = this.element.editWebService(wsToEdit.id, webService);\r\n      this._eventMsgWebServicesList.rowEditableSelected = ws;\r\n      const bindings = await this._getBindings(webService.id);\r\n      this._eventMsgWSBindingsList.arrayListData = bindings;\r\n      this._eventMsgWSBindingsList.refreshList();\r\n      this._refreshWebServicesList(this.element);\r\n    }\r\n  }\r\n\r\n  _onDeleteEventMsgWebServicesList(webService) {\r\n    if (webService && this.element) {\r\n      this.element.deleteWebService(webService.id);\r\n      const defaultWebService = {\r\n        WS: true,\r\n        busClaId: 102,\r\n        busClaName: 'BPMNAutoComplete',\r\n        eventId: 11,\r\n        id: 1,\r\n        name: 'ONREADY',\r\n        order: 0,\r\n      };\r\n      if (this.element.webServices.length === 0 && !this.element.webServices.includes(defaultWebService)) {\r\n        this.element.webServices.push(defaultWebService);\r\n        this._refreshWebServicesList(this.element);\r\n      }\r\n      this._eventMsgWSBindingsList.arrayListData = [];\r\n      this._eventMsgWSBindingsList.refreshList();\r\n    }\r\n  }\r\n\r\n  _onDeleteAllEventMsgWebServices() {\r\n    if (this.element) {\r\n      this.element.webServices = [];\r\n      this._refreshWebServicesList(this.element);\r\n    }\r\n  }\r\n\r\n  _onSelectEventMsgWSBindings(parameter) {\r\n    if (parameter && this.wsSelected && this.element) {\r\n      this._cleanAndHideBindingsComponents();\r\n      // const editStatus = this._eventMsgWebServicesList._editStatus;\r\n      this._eventMsgBindingType.disabled = false;\r\n      const binding = this.element.existWSBindingParameter(this.wsSelected.id, parameter.id);\r\n      if (binding) {\r\n        const type = binding.busClaParBndType;\r\n        if (type === 'V' && parameter.binding !== 'None') {\r\n          this.eventMsgBindingType = 'value';\r\n          this._changeVisibility(this.wrapBindingValue, true);\r\n          this.setFieldValueEachType();\r\n          this.eventMsgBindingValue = binding.busClaParBndValue || '';\r\n        }\r\n        if ((type === 'E' || type === 'P') && parameter.binding !== 'None') {\r\n          this.eventMsgBindingType = 'attribute';\r\n          this._changeVisibility(this.wrapBindingAttrType, true);\r\n          this._changeVisibility(this._eventMsgWSAttributeSearch.wrapper, true);\r\n          this.bindingAttrTypeToCheck = type === 'E' ? 'entity' : 'process';\r\n          this._eventMsgWSAttributeSearch.selectedItem = {\r\n            id: binding.attId,\r\n            name: binding.attTooltip || binding.attName,\r\n          };\r\n          this.setUrlAttributeEachType();\r\n        }\r\n      } else {\r\n        if (parameter.binding === 'None' && Config.ENV === 'Production') {\r\n          const parType = parameter.type;\r\n          this._eventMsgWSAttributeSearch.url = `${this._eventMsgWSAttributeSearch.baseUrl}&attType=${parType}`;\r\n        }\r\n        this._cleanAndHideBindingsComponents();\r\n        this._eventMsgBindingType.disabled = false;\r\n      }\r\n      if (\r\n        Config.ENV === 'Production'\r\n        && (this.eventMsgBindingType === 'attribute' || parameter.binding === undefined)\r\n      ) {\r\n        const parType = parameter.type;\r\n        this._eventMsgWSAttributeSearch.url = `${this._eventMsgWSAttributeSearch.baseUrl}&attType=${parType}`;\r\n      }\r\n\r\n      let type;\r\n      switch (parameter.type) {\r\n        case 'S':\r\n          type = 'String';\r\n          break;\r\n        case 'D':\r\n          type = 'Date';\r\n          break;\r\n        default:\r\n          type = 'Number';\r\n          break;\r\n      }\r\n      const message = `\r\n      <b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageParameter')}</b> ${parameter.param}<br>\r\n      <b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageType')}</b> ${type}<br>\r\n      <b>${i18next.t('eventPropsPanel.txtProDesEventPanelToastMessageInOut')}</b> ${parameter.inout}<br>\r\n    `;\r\n      this.toastMessage.showMessage({ ...this.OPTIONS_TOAST, message });\r\n    }\r\n  }\r\n\r\n  setUrlAttributeEachType(flag = true) {\r\n    const bindingSelected = this._eventMsgWSBindingsList.rowSelected;\r\n    if (bindingSelected && Config.ENV === 'Production' && flag) {\r\n      const { type } = bindingSelected;\r\n      this._eventMsgWSAttributeSearch.url = `${Config.DEFAULT_ATTRS_URL}&attType=${type}&name=`;\r\n    }\r\n  }\r\n\r\n  changeWhenTypeIsValue(webService, binding) {\r\n    this.element.editBindingParameter(webService.id, binding.busClaParId, {\r\n      busClaParBndType: 'V',\r\n      busClaParBndValue: '',\r\n    });\r\n    this.element.deletePropertyOfBindingParameter(webService.id, binding.busClaParId, [\r\n      'attId',\r\n      'attName',\r\n      'attTooltip',\r\n    ]);\r\n  }\r\n\r\n\r\n  changeWhenTypeIsAttribute(webService, binding) {\r\n    this.element.editBindingParameter(webService.id, binding.busClaParId, {\r\n      busClaParBndType: 'E',\r\n    });\r\n    this.element.deletePropertyOfBindingParameter(webService.id, binding.busClaParId, ['busClaParBndValue']);\r\n  }\r\n\r\n  _updateBindingsParametersList(webService) {\r\n    this._getBindings(webService.busClaId).then((bindings) => {\r\n      this._eventMsgWSBindingsList.arrayList.data = bindings;\r\n      this._eventMsgWSBindingsList.refreshList();\r\n    });\r\n  }\r\n\r\n  _onEventMsgWSBindingTypeChanged() {\r\n    const bindingParam = this._eventMsgWSBindingsList.rowSelected;\r\n    const bindingType = this.eventMsgBindingType;\r\n    let type;\r\n    if (bindingType === 'value') type = 'V';\r\n    if (bindingType === 'attribute') type = 'E';\r\n\r\n    if (this.wsSelected && bindingParam && this.element) {\r\n      const binding = this.element.existWSBindingParameter(this.wsSelected.id, bindingParam.id);\r\n      const isDistinct = binding ? binding.busClaParBndType !== type : false;\r\n      if (type === 'V') {\r\n        if (binding && isDistinct) {\r\n          this.changeWhenTypeIsValue(this.wsSelected, binding);\r\n        }\r\n        this.setFieldValueEachType();\r\n      }\r\n      if (binding && type === 'P' && isDistinct) {\r\n        this.changeWhenTypeIsAttribute(this.wsSelected, binding);\r\n        this.setUrlAttributeEachType();\r\n      }\r\n\r\n      //!\r\n      //   if (binding && !type && isDistinct && bindingParam.binding === 'None') {\r\n      if (binding && !type) {\r\n        this.element.deleteBindingParameter(this.wsSelected.id, binding.busClaParId);\r\n        this._cleanAndHideBindingsComponents();\r\n        this._eventMsgBindingType.disabled = false;\r\n      }\r\n      this._changeVisibility(this.wrapBindingValue, bindingType === 'value');\r\n      this._changeVisibility(this.wrapBindingAttrType, bindingType === 'attribute');\r\n      this._changeVisibility(this._eventMsgWSAttributeSearch.wrapper, bindingType === 'attribute');\r\n      this._updateBindingsParametersList(this.wsSelected);\r\n    }\r\n  }\r\n\r\n  getNewBindingToAdd(parameter, newProps, type) {\r\n    const newBinding = {\r\n      busClaParId: parseInt(parameter.id, 10),\r\n      busClaParName: parameter.param,\r\n      busClaParType: parameter.type,\r\n      busClaParBndType: type,\r\n      ...newProps,\r\n    };\r\n    return newBinding;\r\n  }\r\n\r\n  setFieldValueEachType(flag = true) {\r\n    const bindingSelected = this._eventMsgWSBindingsList.rowSelected;\r\n    if (bindingSelected && flag) {\r\n      const { type } = bindingSelected;\r\n      switch (type) {\r\n        case 'N': {\r\n          this._eventMsgBindingValue.setAttribute('type', 'number');\r\n          break;\r\n        }\r\n        case 'D': {\r\n          this._eventMsgBindingValue.setAttribute('type', 'date');\r\n          break;\r\n        }\r\n        default: {\r\n          this._eventMsgBindingValue.setAttribute('type', 'text');\r\n          break;\r\n        }\r\n      }\r\n      this._toggleNumberFieldAttributes(type === 'N');\r\n    }\r\n  }\r\n\r\n  _toggleNumberFieldAttributes(add) {\r\n    const hasMinAttribute = this._eventMsgBindingValue.hasAttribute('min');\r\n    const hasStepAttribute = this._eventMsgBindingValue.hasAttribute('step');\r\n    if (add && !hasMinAttribute && !hasStepAttribute) {\r\n      this._eventMsgBindingValue.setAttribute('min', '0');\r\n      this._eventMsgBindingValue.setAttribute('max', Number.MAX_SAFE_INTEGER);\r\n      this._eventMsgBindingValue.setAttribute('step', '1');\r\n    } else {\r\n      this._eventMsgBindingValue.removeAttribute('min');\r\n      this._eventMsgBindingValue.removeAttribute('step');\r\n      this._eventMsgBindingValue.removeAttribute('max');\r\n    }\r\n  }\r\n\r\n  _editOrAddBinding(binding, props, type) {\r\n    if (binding) {\r\n      this.element.editBindingParameter(this.wsSelected.id, binding.busClaParId, props);\r\n    }\r\n    const parameter = this._eventMsgWSBindingsList.rowSelected;\r\n    if (!binding && parameter) {\r\n      const newBinding = this.getNewBindingToAdd(parameter, props, type);\r\n      this.element.addBindingParameter(this.wsSelected.id, newBinding);\r\n    }\r\n  }\r\n\r\n  _onEventMsgWSBindingValueChanged() {\r\n    const paramSelected = this._eventMsgWSBindingsList.rowSelected;\r\n    const bindingValue = this.eventMsgBindingValue.trim();\r\n    if (this.element && paramSelected && this.wsSelected) {\r\n      const binding = this.element.existWSBindingParameter(this.wsSelected.id, paramSelected.id);\r\n      if (bindingValue !== '') {\r\n        const newProp = { busClaParBndValue: bindingValue };\r\n        this._editOrAddBinding(binding, newProp, 'V');\r\n        this._updateBindingsParametersList(this.wsSelected);\r\n      }\r\n      const param = binding || {};\r\n      this._fillValidBindingValue(param.busClaParBndValue);\r\n    }\r\n  }\r\n\r\n  _fillValidBindingValue(oldValue = '') {\r\n    const { type } = this._eventMsgBindingValue;\r\n    if (type === 'number' && this.eventMsgBindingValue === '') {\r\n      this.eventMsgBindingValue = oldValue;\r\n    }\r\n  }\r\n\r\n  _onEventMsgWSBindingAttributeChanged(type, attribute = undefined) {\r\n    const paramSelected = this._eventMsgWSBindingsList.rowSelected;\r\n    if (this.element && paramSelected && this.wsSelected) {\r\n      const binding = this.element.existWSBindingParameter(this.wsSelected.id, paramSelected.id);\r\n      let newProps;\r\n      const attrType = this.bindingAttrTypeChecked;\r\n      let isDistinct;\r\n      if (type === 'attrType') {\r\n        newProps = { busClaParBndType: attrType };\r\n        isDistinct = binding ? binding.busClaParBndType !== attrType : true;\r\n      }\r\n      if (type === 'attribute' && attribute) {\r\n        isDistinct = binding ? parseInt(binding.attId, 10) !== parseInt(attribute.id, 10) : true;\r\n        newProps = {\r\n          attId: parseInt(attribute.id, 10),\r\n          attTooltip: attribute.name,\r\n        };\r\n        if (attribute.label) newProps.attName = attribute.label;\r\n      }\r\n      if (((type === 'attribute' && attribute) || type === 'attrType') && isDistinct) {\r\n        this._editOrAddBinding(binding, newProps, attrType);\r\n      }\r\n      this._updateBindingsParametersList(this.wsSelected);\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport TemplatePanel from './templatePanel';\r\nimport { normalizeText } from './facilis/validator';\r\n\r\nexport default class DataPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'data');\r\n    this._init();\r\n    this._initEvents();\r\n  }\r\n\r\n  _init() {\r\n    this._dataTypeInput = this._panel.querySelector('#data_type_input');\r\n    this._nameInput = this._panel.querySelector('#data_name_input');\r\n    this._stateInput = this._panel.querySelector('#data_state_input');\r\n    this._collectionInput = this._panel.querySelector('#data_collection_input');\r\n    this._unlimitInput = this.panel.querySelector('#data_unlimit_input');\r\n    this._capacityInput = this.panel.querySelector('#data_capacity_input');\r\n    if (this.element) {\r\n      this._checkCapacity(this.element);\r\n    }\r\n  }\r\n\r\n  _initEvents() {\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onNameInputChanged();\r\n      },\r\n      this._nameInput,\r\n      'input',\r\n    );\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onStateInputChanged();\r\n      },\r\n      this._stateInput,\r\n      'input',\r\n    );\r\n\r\n    this._collectionInput.addEventListener('input', () => {\r\n      this._onCollectionInputChanged();\r\n    });\r\n\r\n    this._unlimitInput.addEventListener('input', () => {\r\n      this._onUnlimitInputChanged();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onCapacityInputChanged();\r\n      },\r\n      this._capacityInput,\r\n      'input',\r\n    );\r\n  }\r\n\r\n  set dataTypeInput(value) {\r\n    this._dataTypeInput.value = value.toUpperCase();\r\n  }\r\n\r\n  get nameInput() {\r\n    return this._nameInput.value;\r\n  }\r\n\r\n  get stateInput() {\r\n    return this._stateInput.value;\r\n  }\r\n\r\n  get collectionInput() {\r\n    return this._collectionInput.checked;\r\n  }\r\n\r\n  get capacityInput() {\r\n    return this._capacityInput.value;\r\n  }\r\n\r\n  get unlimitInput() {\r\n    return this._unlimitInput.checked;\r\n  }\r\n\r\n  set unlimitInput(value) {\r\n    this._unlimitInput.checked = value;\r\n  }\r\n\r\n  set nameInput(value) {\r\n    this._nameInput.value = value;\r\n  }\r\n\r\n  set stateInput(value) {\r\n    this._stateInput.value = value;\r\n  }\r\n\r\n  set collectionInput(value) {\r\n    this._collectionInput.checked = value;\r\n  }\r\n\r\n  set capacityInput(value) {\r\n    this._capacityInput.value = value;\r\n  }\r\n\r\n  show(el) {\r\n    const [, dataType] = el.elementType.toLowerCase().split('data');\r\n    this.dataTypeInput = dataType;\r\n    this.nameInput = el.dataName;\r\n    this.stateInput = el.state;\r\n    this.documentationInput = el.documentation;\r\n    const isDataStore = this.element.elementType.toLowerCase() === 'datastore';\r\n    if (isDataStore) {\r\n      this.unlimitInput = el.unlimit;\r\n      this.capacityInput = el.capacity;\r\n    } else {\r\n      this.collectionInput = el.collection;\r\n    }\r\n    this._changeVisibility(\r\n      this._collectionInput.parentNode.parentNode,\r\n      !isDataStore,\r\n    );\r\n    this._changeVisibility(\r\n      this._unlimitInput.parentNode.parentNode,\r\n      isDataStore,\r\n    );\r\n    this._changeVisibility(\r\n      this._capacityInput.parentNode.parentNode,\r\n      isDataStore,\r\n    );\r\n    this._checkCapacity(el);\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _onNameInputChanged() {\r\n    if (this.element) {\r\n      const { elementType, name } = this.element;\r\n      const isDataElement = elementType === Config.DATA_STORE\r\n        || elementType === Config.DATA_INPUT\r\n        || elementType === Config.DATA_OUTPUT\r\n        || elementType === Config.DATA_OBJECT;\r\n      const actual = isDataElement ? name : undefined;\r\n      this.nameInput = normalizeText(this.nameInput, /[\"]/g);\r\n      if (actual !== this.nameInput && this.nameInput !== '' && isDataElement) {\r\n        this.element.name = this.nameInput;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onStateInputChanged() {\r\n    if (this.element) {\r\n      const actual = this.element.state;\r\n      this.stateInput = normalizeText(this.stateInput, /[\"]/g);\r\n      if (actual !== this.stateInput) this.element.state = this.stateInput;\r\n    }\r\n  }\r\n\r\n  _onCollectionInputChanged() {\r\n    this.element.collection = this.collectionInput;\r\n  }\r\n\r\n  _checkCapacity(el) {\r\n    if (el.elementType.toLowerCase() === 'datastore') {\r\n      const container = this._capacityInput.parentNode.parentNode;\r\n      const isUnlimit = el.unlimit;\r\n      if (isUnlimit) this.capacityInput = '';\r\n      this._changeVisibility(container, !isUnlimit);\r\n    }\r\n  }\r\n\r\n  _onUnlimitInputChanged() {\r\n    if (this.element) {\r\n      const actual = this.element.unlimit;\r\n      if (actual !== this.unlimitInput) this.element.unlimit = this.unlimitInput;\r\n      this._checkCapacity(this.element);\r\n    }\r\n  }\r\n\r\n  _onCapacityInputChanged() {\r\n    if (this.element) {\r\n      const actual = this.element.capacity;\r\n      if (actual !== this.capacityInput) {\r\n        this.element.capacity = parseInt(this.capacityInput, 10);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport Config from 'config';\r\nimport i18next from 'i18next';\r\nimport TemplatePanel from './templatePanel';\r\nimport Converter from '../../utils/convertToJson';\r\n\r\nexport default class SubProcessPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'subprocess');\r\n    this._init();\r\n    this._initComponents();\r\n    this._initEventsComponents();\r\n  }\r\n\r\n  _init() {\r\n    this.SUBPROCESS_PANEL = {\r\n      SUBPROCESS_NAME_SEARCH: {\r\n        nameId: 'subprocess_name_input',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelNameSearchLabel'),\r\n        add: true,\r\n        url: Config.SUBP_NAME_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      STANDARD_LOOP_CONDITION: {\r\n        nameId: 'subp_standard_loop_cond',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelLoopConditionLabel'),\r\n      },\r\n      REUSABLE: {\r\n        nameId: 'subp_reusable_type',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelReusableLabel'),\r\n        expandId: 'expand_reusable_zone',\r\n      },\r\n      REUSABLE_ENTITY_SEARCH: {\r\n        nameId: 'subp_reusable_entity',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelReusableEntitySearchLabel'),\r\n        add: false,\r\n        url: Config.SUBP_REUSABLE_ENT_URL,\r\n        hasLabel: true,\r\n        canReload: true,\r\n      },\r\n      REUSABLE_FORMS_SEARCH: {\r\n        nameId: 'subp_reusable_form',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelReusableFormsSearchLabel'),\r\n        add: false,\r\n        url: Config.SUBP_REUSABLE_ENT_FORMS_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n      REUSABLE_FORMS_LIST: {\r\n        nameId: 'subp_reusable_forms_list',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelReusableFormsListLabel'),\r\n        add: true,\r\n      },\r\n      MULTIINSTANCE_LOOPTYPE_SEARCH: {\r\n        nameId: 'subp_multiinstance_looptype',\r\n        label: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelMultiInstanceLoopTypeLabel'),\r\n        add: true,\r\n        responseTime: 1000,\r\n        url: Config.SUBP_MULTIINSTANCE_URL,\r\n        hasLabel: false,\r\n        canReload: true,\r\n      },\r\n    };\r\n\r\n    this.OPTIONS_TOAST = {\r\n      type: 'info',\r\n      title: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastTitle'),\r\n      duration: 3000,\r\n      position: 'bottom-left',\r\n    };\r\n    // subp = subprocess\r\n    // this._subpNameInput = this._panel.querySelector('#subprocess_name_input');\r\n    this._subpTypeSelect = this._panel.querySelector('#subprocess_type_select');\r\n    this._subpLoopTypeSelect = this._panel.querySelector('#subprocess_loop_type_select');\r\n    this._subpColorInput = this._panel.querySelector('#subprocess_color_input');\r\n    this._subpColorInputName = this._panel.querySelector('#subprocess_color_name_input');\r\n\r\n    this._subpStandardLoop = this._panel.querySelector('#subp_standard_loop_switch');\r\n    this._subpConditionDoc = this._panel.querySelector('#subp_condition_documentation_input');\r\n\r\n    this._subpReusableFormType = this._panel.querySelector('#subp_reusable_form_type');\r\n    this._subpReusableExecution = this._panel.querySelector('#subp_reusable_execution');\r\n    this._subpReusableSkipFirstTask = this._panel.querySelector('#subp_reusable_skip_first_task');\r\n    this._subpTypeSelect.addEventListener('input', () => {\r\n      this._onSubpTypeSelectChanged();\r\n    });\r\n    this._subpLoopTypeSelect.addEventListener('input', () => {\r\n      this._onSubpLoopTypeSelectChanged();\r\n    });\r\n    this._subpColorInput.addEventListener('change', () => {\r\n      this._onSubpColorChanged();\r\n    });\r\n    this._subpReusableFormType.addEventListener('input', () => {\r\n      this._onSubpReusableFormTypeChanged();\r\n    });\r\n  }\r\n\r\n  _initComponents() {\r\n    this.wrapStandardLoopSwitch = this._panel.querySelector('#wrapper_subprocess_standard_loop_switch');\r\n    this.wrapSubpConditionDoc = this._subpConditionDoc.parentNode.parentNode;\r\n    this.wrapReusableExpandZone = this._panel.querySelector('#expand_reusable_zone');\r\n    this.wrapReusableFormType = this._subpReusableFormType.parentNode.parentNode;\r\n    this.wrapSubpLoopType = this._subpLoopTypeSelect.parentNode.parentNode;\r\n    this.wrapSubpType = this._subpTypeSelect.parentNode.parentNode;\r\n    this._initSubpNameComponent();\r\n    this._initStandardLoopComponents();\r\n    this._initReusableTypeComponents();\r\n    this._initMultiInstanceComponent();\r\n  }\r\n\r\n  _initSubpNameComponent() {\r\n    const { SUBPROCESS_NAME_SEARCH } = this.SUBPROCESS_PANEL;\r\n    this._subpNameInput = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapSubpName,\r\n      this.wrapSubpType,\r\n      'beforebegin',\r\n      SUBPROCESS_NAME_SEARCH,\r\n    );\r\n    this._subpNameInput.placeholder = 'Insert a Subprocess';\r\n    this._subpNameInput.toggleDisabledButton(true);\r\n  }\r\n\r\n  _initStandardLoopComponents() {\r\n    const { STANDARD_LOOP_CONDITION } = this.SUBPROCESS_PANEL;\r\n\r\n    this._subpStandardLoopCond = this._includeComponent(\r\n      'condition',\r\n      this.wrapStandardLoopCond,\r\n      this.wrapSubpConditionDoc,\r\n      'beforebegin',\r\n      STANDARD_LOOP_CONDITION,\r\n    );\r\n\r\n    this._subpStandardLoopCond.placeholder = i18next.t(\r\n      'subprocessPropsPanel.txtProDesSubprocessPanelPlaceholderCondition',\r\n    );\r\n    this._subpConditionDoc.placeholder = i18next.t(\r\n      'subprocessPropsPanel.txtProDesSubprocessPanelPlaceholderDocumentation',\r\n    );\r\n\r\n    this._changeVisibility(this._subpStandardLoopCond.wrapper, false);\r\n    this._changeVisibility(this.wrapSubpConditionDoc, false);\r\n  }\r\n\r\n  _initReusableTypeComponents() {\r\n    const {\r\n      REUSABLE, REUSABLE_ENTITY_SEARCH, REUSABLE_FORMS_SEARCH, REUSABLE_FORMS_LIST,\r\n    } = this.SUBPROCESS_PANEL;\r\n    REUSABLE_FORMS_LIST.arrayList = this._createReusableFormsArrayList();\r\n\r\n    this._subpReusableExp = this._includeComponent(\r\n      'expander',\r\n      this.wrapReusableExpandZone,\r\n      this.wrapReusableExpandZone,\r\n      'beforebegin',\r\n      REUSABLE,\r\n    );\r\n    this._subpReusableEntitySearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapReusableEntSearch,\r\n      this.wrapReusableFormType,\r\n      'beforebegin',\r\n      REUSABLE_ENTITY_SEARCH,\r\n    );\r\n    this._subpReusableFormSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapReusableFormSearch,\r\n      this.wrapReusableFormType,\r\n      'afterend',\r\n      REUSABLE_FORMS_SEARCH,\r\n    );\r\n    this._subpReusableFormsList = this._includeComponent(\r\n      'list',\r\n      this.wrapReusableFormsList,\r\n      this._subpReusableFormSearch.wrapper,\r\n      'afterend',\r\n      REUSABLE_FORMS_LIST,\r\n    );\r\n\r\n    this._subpReusableEntitySearch.placeholder = i18next.t(\r\n      'subprocessPropsPanel.txtProDesSubprocessPanelPlaceholderEntitySelect',\r\n    );\r\n    this._subpReusableFormSearch.placeholder = i18next.t(\r\n      'subprocessPropsPanel.txtProDesSubprocessPanelPlaceholderAddForm',\r\n    );\r\n  }\r\n\r\n  _initMultiInstanceComponent() {\r\n    const { MULTIINSTANCE_LOOPTYPE_SEARCH } = this.SUBPROCESS_PANEL;\r\n\r\n    this._subpMultiInstanceType = this._panel.querySelector('#subp_multiinstance_type_select');\r\n    this.wrapMultiInstanceType = this._panel.querySelector('#wrap_subp_multiinstance_type_select');\r\n\r\n    this._subpMultiplicationSearch = this._includeComponent(\r\n      'dropdown',\r\n      this.wrapMultipSearch,\r\n      this.wrapMultiInstanceType,\r\n      'afterend',\r\n      MULTIINSTANCE_LOOPTYPE_SEARCH,\r\n    );\r\n    this._subpMultiplicationNumber = this._panel.querySelector('#subp_multiinstance_number_type');\r\n    this.wrapMultiplicationNumber = this._subpMultiplicationNumber.parentNode.parentNode;\r\n    this._subpMultiplicationSearch.placeholder = 'Select an Attribute';\r\n    this._subpMultiplicationSearch.toggleDisabledButton(true);\r\n  }\r\n\r\n  _initEventsComponents() {\r\n    this._subpStandardLoop.addEventListener('input', () => {\r\n      this._onSubpStandardLoopChanged();\r\n    });\r\n\r\n    this._subpStandardLoopCond.on('change_condition', (condition) => {\r\n      this._onSubpStandardLoopCondChanged(condition);\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onSubpStandardLoopDocumentationChanged();\r\n      },\r\n      this._subpConditionDoc,\r\n      'input',\r\n    );\r\n\r\n    this._subpNameInput.on('select_item', (item) => {\r\n      this._onSubpNameInputChanged(item);\r\n    });\r\n\r\n    this._subpNameInput.on('add_item', () => {\r\n      this._onAddNewSubprocess();\r\n    });\r\n\r\n    this._subpMultiplicationSearch.on('select_item', (item) => {\r\n      this._onSelectMultiplicationSearch(item);\r\n    });\r\n\r\n    this._subpMultiplicationSearch.on('add_item', () => {\r\n      this._onAddNewMultiplicationAttribute();\r\n    });\r\n\r\n    this._subpReusableEntitySearch.on('select_item', (item) => {\r\n      this._onSelectReusableEntitySearch(item);\r\n    });\r\n\r\n    this._subpReusableEntitySearch.on('clear_item', () => {\r\n      this._onDeleteReusableEntitySearch();\r\n    });\r\n\r\n    this._subpReusableFormsList.on('add_item', () => {\r\n      this._onAddReusableFormsList();\r\n    });\r\n\r\n    this._subpReusableFormSearch.on('select_item', (item) => {\r\n      this._onSelectReusableForm(item);\r\n    });\r\n\r\n    this._subpReusableFormsList.on('edit_item', (status) => {\r\n      this._onEditSubpReusableFormsList(status);\r\n    });\r\n\r\n    this._subpReusableFormsList.on('selected_item', (item) => {\r\n      this._onSelectSubpReusableFormsList(item);\r\n    });\r\n\r\n    this._subpReusableFormsList.on('delete_item', (item) => {\r\n      this._onDeleteSubpReusableFormsList(item);\r\n    });\r\n\r\n    this._subpReusableFormsList.on('delete_all_items', () => {\r\n      this._onDeleteAllSubpReusableFormsList();\r\n    });\r\n\r\n    this._subpReusableFormsList.on('move', (actualPos, oldPos, actual, old) => {\r\n      this._onOrderFormChanged(actualPos, oldPos, actual, old);\r\n    });\r\n\r\n    this._subpReusableExecution.addEventListener('input', () => {\r\n      this._onSelectSubpReusableExecutionChanged();\r\n    });\r\n\r\n    this._subpReusableSkipFirstTask.addEventListener('input', () => {\r\n      this._onSubpReusableSkipFirtsTaskChanged();\r\n    });\r\n\r\n    this._subpMultiInstanceType.addEventListener('input', () => {\r\n      this._onSubMultiInstanceTypeChanged();\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onValidateMultiplicationNumber();\r\n        this._onSubpMultiplicationNumberChanged();\r\n      },\r\n      this._subpMultiplicationNumber,\r\n      'input',\r\n      100,\r\n    );\r\n  }\r\n\r\n  set subpNameInput(newValue) {\r\n    this._subpNameInput.valueEl = newValue;\r\n  }\r\n\r\n  set subpTypeSelect(newValue) {\r\n    this._subpTypeSelect.value = newValue || '';\r\n  }\r\n\r\n  set subpLoopTypeSelect(newValue) {\r\n    this._subpLoopTypeSelect.value = newValue || '';\r\n  }\r\n\r\n  set subpColorInput(value) {\r\n    this._subpColorInput.value = value;\r\n  }\r\n\r\n  set subpColorInputName(value) {\r\n    this._subpColorInputName.value = value;\r\n  }\r\n\r\n  get subpNameInput() {\r\n    return this._subpNameInput.valueEl;\r\n  }\r\n\r\n  get subpTypeSelect() {\r\n    return this._subpTypeSelect.value;\r\n  }\r\n\r\n  get subpLoopTypeSelect() {\r\n    return this._subpLoopTypeSelect.value;\r\n  }\r\n\r\n  get subpMultiInstanceType() {\r\n    return this._subpMultiInstanceType.checked;\r\n  }\r\n\r\n  set subpMultiInstanceType(value) {\r\n    this._subpMultiInstanceType.checked = value;\r\n    const label = this.wrapMultiInstanceType.querySelector('.highlighted');\r\n    label.innerText = value ? 'Value' : 'Attribute';\r\n  }\r\n\r\n  get subpMultiplicationNumber() {\r\n    const { value } = this._subpMultiplicationNumber;\r\n    return value !== '' ? parseInt(value, 10) : value;\r\n  }\r\n\r\n  set subpMultiplicationNumber(value) {\r\n    this._subpMultiplicationNumber.value = value;\r\n  }\r\n\r\n  get subpColorInput() {\r\n    return this._subpColorInput.value;\r\n  }\r\n\r\n  get subpStandardLoop() {\r\n    return this._subpStandardLoop.checked;\r\n  }\r\n\r\n  get subpStandardLoopCond() {\r\n    return this._subpStandardLoopCond.conditionArea;\r\n  }\r\n\r\n  get subpStandardLoopCondDoc() {\r\n    return this._subpConditionDoc.value;\r\n  }\r\n\r\n  set subpStandardLoopCond(value) {\r\n    this._subpStandardLoopCond.conditionArea = value;\r\n  }\r\n\r\n  set subpStandardLoopCondDoc(value) {\r\n    this._subpConditionDoc.value = value;\r\n  }\r\n\r\n  set subpStandardLoop(value) {\r\n    this._subpStandardLoop.checked = value;\r\n  }\r\n\r\n  set subpReusableEntitySearch(value) {\r\n    this._subpReusableEntitySearch.valueEl = value;\r\n  }\r\n\r\n  get subpReusableFormType() {\r\n    return this._subpReusableFormType.value;\r\n  }\r\n\r\n  set subpReusableFormSearch(value) {\r\n    this._subpReusableFormSearch.valueEl = value;\r\n  }\r\n\r\n  set subpMultiplicationSearch(value) {\r\n    this._subpMultiplicationSearch.valueEl = value;\r\n  }\r\n\r\n  get subpMultiplicationSearch() {\r\n    return this._subpMultiplicationSearch.valueEl.trim();\r\n  }\r\n\r\n  get subpReusableExecution() {\r\n    return this._subpReusableExecution.value;\r\n  }\r\n\r\n  get subpReusableSkipFirstTask() {\r\n    return this._subpReusableSkipFirstTask.checked;\r\n  }\r\n\r\n  set subpReusableExecution(value) {\r\n    this._subpReusableExecution.value = value;\r\n  }\r\n\r\n  set subpReusableSkipFirstTask(value) {\r\n    this._subpReusableSkipFirstTask.checked = value;\r\n  }\r\n\r\n  show(el) {\r\n    this.showGenericComponents(el);\r\n    this.showStandardLoop(el);\r\n    this.showReusable(el);\r\n    this.showMultiInstance(el);\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  showGenericComponents(el) {\r\n    this._subpNameInput.selectedItem = { id: el.subprocessId, name: el.name };\r\n    this.subpTypeSelect = el.type;\r\n    this.subpLoopTypeSelect = el.loopType;\r\n    this.subpColorInput = el.color;\r\n    this.subpColorInputName = el.color;\r\n    this.documentationInput = el.documentation;\r\n  }\r\n\r\n  showStandardLoop(el) {\r\n    const loopType = this.subpLoopTypeSelect.toUpperCase();\r\n    this.subpStandardLoop = false;\r\n    this._changeVisibility(this.wrapStandardLoopSwitch, loopType === 'STANDARD');\r\n    const isVisibleCond = this._elementVisibility(this._subpStandardLoopCond.wrapper);\r\n    const isVisibleCondDoc = this._elementVisibility(this.wrapSubpConditionDoc);\r\n    if (isVisibleCond && loopType !== 'STANDARD') {\r\n      this._changeVisibility(this._subpStandardLoopCond.wrapper, false);\r\n    }\r\n    if (isVisibleCondDoc && loopType !== 'STANDARD') {\r\n      this._changeVisibility(this.wrapSubpConditionDoc, false);\r\n    }\r\n\r\n    this.subpStandardLoopCond = el.standard && el.standardCondition ? el.standardCondition : '';\r\n    this.subpStandardLoopCondDoc = el.standard && el.standardDocumentation ? el.standardDocumentation : '';\r\n  }\r\n\r\n  showReusable(el) {\r\n    const reusable = this.subpTypeSelect.toUpperCase();\r\n    this._changeVisibility(this._subpReusableExp.wrapper, reusable === 'REUSABLE');\r\n    const { isExpand } = this._subpReusableExp;\r\n    if (isExpand && reusable !== 'REUSABLE') this._subpReusableExp.expand();\r\n    this._subpReusableEntitySearch.selectedItem = !isEmpty(el.reusableEntity)\r\n      ? { id: el.reusableEntity.id, name: el.reusableEntity.name }\r\n      : undefined;\r\n    const formType = this.subpReusableFormType === 'entity' ? 'E' : 'P';\r\n    this._subpReusableExp.showValue(this._getReusableExpShowValue(el));\r\n    this._subpReusableFormsList.arrayList.data = this._getReusableFormByType(formType, el);\r\n    this._subpReusableFormSearch.selectedItem = undefined;\r\n    if (this._subpReusableFormsList.editStatus) {\r\n      this._subpReusableFormsList.editStatus = false;\r\n      this._setReusableEditionMode(false);\r\n    }\r\n    this._subpReusableFormsList.refreshList();\r\n    this.subpReusableExecution = el.execution || 'synchronized';\r\n    this.subpReusableSkipFirstTask = el.skipFirst || false;\r\n  }\r\n\r\n  showMultiInstance(el) {\r\n    const multiInstance = this.subpLoopTypeSelect.toUpperCase() === 'MULTIINSTANCE';\r\n    const isMultiplicationNumber = el.multiInstanceType === 'value';\r\n    this._changeVisibility(this.wrapMultiInstanceType, multiInstance);\r\n    this._changeVisibility(this._subpMultiplicationSearch.wrapper, multiInstance && !isMultiplicationNumber);\r\n    this._changeVisibility(this.wrapMultiplicationNumber, multiInstance && isMultiplicationNumber);\r\n    const { id, name } = el.multiInstanceAttribute;\r\n    const condition = el.multiInstance && id && name;\r\n    this._subpMultiplicationSearch.selectedItem = condition ? { id, name } : undefined;\r\n    this.subpMultiInstanceType = el.multiInstanceType === 'value';\r\n    this.subpMultiplicationNumber = el.multiInstanceValue || '';\r\n    if (!this._subpMultiplicationSearch.load && multiInstance) {\r\n      this._subpMultiplicationSearch.load = true;\r\n    }\r\n  }\r\n\r\n  _getReusableExpShowValue(el) {\r\n    const valueToShow = [];\r\n    if (el.reusable) {\r\n      const forms = el.reusableForms || [];\r\n      forms.forEach((value) => valueToShow.push(value.name));\r\n    }\r\n    return valueToShow;\r\n  }\r\n\r\n  _getReusableFormByType(type, el) {\r\n    let formsByType = [];\r\n    if (el.reusable) {\r\n      const forms = el.reusableForms || [];\r\n      formsByType = forms.filter((value) => {\r\n        return value.formType === type;\r\n      });\r\n    }\r\n    return formsByType;\r\n  }\r\n\r\n  _createReusableFormsArrayList() {\r\n    const arrayList = {\r\n      header: [\r\n        i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelHeaderName'),\r\n        i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelHeaderEdit'),\r\n        i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelHeaderDeleteAll'),\r\n      ],\r\n      deleteAction: true,\r\n      deleteActionAll: true,\r\n      editAction: true,\r\n      data: [],\r\n      notShow: ['id', 'order', 'step', 'formType'],\r\n      actions: [],\r\n    };\r\n    return arrayList;\r\n  }\r\n\r\n  _onSubpNameInputChanged(item) {\r\n    const condition = !item && this.subpNameInput !== '';\r\n    this._subpNameInput.toggleDisabledButton(!condition);\r\n    if (item) {\r\n      this.element.name = item;\r\n    }\r\n  }\r\n\r\n  async _onAddNewSubprocess() {\r\n    const selected = this._subpNameInput.selectedItem;\r\n    if (!selected && Config.ENV === 'Production' && this.element) {\r\n      const nameExp = new RegExp(/^[a-zA-Z][\\w]+[a-zA-Z0-9]$/gi);\r\n      const nameValue = this.subpNameInput;\r\n      if (nameExp.test(nameValue)) {\r\n        const valueUri = encodeURI(nameValue);\r\n        const url = `${Config.NEW_SUBP_URL}&name=${valueUri}&title=${valueUri}`;\r\n        try {\r\n          const response = await axios.post(url);\r\n          if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n            this.showInvalidSession();\r\n          }\r\n          if (response) {\r\n            const convert = new Converter();\r\n            const [subpCreated] = convert.convertToJson(response.data);\r\n            this.element.name = subpCreated;\r\n            this._subpNameInput.selectedItem = subpCreated;\r\n            this._subpNameInput.reloadData();\r\n            this._subpNameInput.toggleDisabledButton(true);\r\n            // message\r\n            const options = this.OPTIONS_TOAST;\r\n            options.type = 'success';\r\n            options.title = i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastSuccessTitle');\r\n            options.message = i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastSuccessMessage');\r\n            this.toastMessage.showMessage(options);\r\n          }\r\n        } catch (error) {\r\n          throw Error(i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelErrorMessage'));\r\n        }\r\n      } else {\r\n        const options = this.OPTIONS_TOAST;\r\n        options.type = 'danger';\r\n        options.title = i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastErrorTitle');\r\n        options.message = `${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelErrorToastErrorMessageIsValid')} <b>\"${nameValue}\"</b> ${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastMessageIsValid')}`;\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onSubpTypeSelectChanged() {\r\n    if (this.element) {\r\n      const typeSelect = this.subpTypeSelect;\r\n      if (this.element.type !== typeSelect) {\r\n        this.element.type = typeSelect;\r\n        if (typeSelect.toUpperCase() !== 'REUSABLE') {\r\n          this.element.deletePropertyByName('reusable');\r\n        } else {\r\n          const execution = this.subpReusableExecution;\r\n          const skipFirst = this.subpReusableSkipFirstTask;\r\n          this.element.reusable = { execution, skipFirst };\r\n        }\r\n        this.showReusable(this.element);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onSubpLoopTypeSelectChanged() {\r\n    const loopType = this.subpLoopTypeSelect;\r\n    if (loopType !== this.element.loopType) {\r\n      this.element.loopType = loopType;\r\n      const propToDelete = loopType === 'multiinstance' ? 'standard' : 'multiInstance';\r\n      if (\r\n        (loopType.toUpperCase() === 'MULTIINSTANCE' && this.element.standard)\r\n        || (loopType.toUpperCase() === 'STANDARD' && this.element.multiInstance)\r\n      ) {\r\n        this.element.deletePropertyByName(propToDelete);\r\n      }\r\n      if (loopType.toUpperCase() === 'MULTIINSTANCE') {\r\n        const multiInstanceType = this.subpMultiInstanceType ? 'value' : 'attribute';\r\n        this.element.multiInstance = {\r\n          type: multiInstanceType,\r\n        };\r\n      }\r\n      if (\r\n        (loopType.toUpperCase() === 'NONE' && this.element.multiInstance)\r\n        || (loopType.toUpperCase() === 'NONE' && this.element.standard)\r\n      ) {\r\n        this.element.deletePropertyByName(this.element.multiInstance ? 'multiInstance' : 'standard');\r\n        this.subpMultiInstanceType = false;\r\n        this.subpMultiplicationNumber = '';\r\n      }\r\n      this.showMultiInstance(this.element);\r\n      this.showStandardLoop(this.element);\r\n    }\r\n  }\r\n\r\n  _onSubpColorChanged() {\r\n    this.element.color = this.subpColorInput;\r\n    this.subpColorInputName = this.subpColorInput;\r\n  }\r\n\r\n  _onSubpStandardLoopChanged() {\r\n    const standardLoop = this.subpStandardLoop;\r\n    this._changeVisibility(this._subpStandardLoopCond.wrapper, standardLoop);\r\n    this._changeVisibility(this.wrapSubpConditionDoc, standardLoop);\r\n  }\r\n\r\n  _onSubpReusableFormTypeChanged() {\r\n    const formType = this.subpReusableFormType === 'entity' ? 'E' : 'P';\r\n    const url = formType === 'E' ? Config.SUBP_REUSABLE_ENT_FORMS_URL : Config.SUBP_REUSABLE_PROC_FORMS_URL;\r\n    this._subpReusableFormSearch.url = url; // Automatic reload data !!!\r\n    this._subpReusableFormsList.arrayList.data = this._getReusableFormByType(formType, this.element);\r\n    this._subpReusableFormsList.refreshList();\r\n  }\r\n\r\n  _onSubpStandardLoopCondChanged(condition) {\r\n    if (this.element) {\r\n      this.element.standardCondition = condition;\r\n    }\r\n  }\r\n\r\n  _onSubpStandardLoopDocumentationChanged() {\r\n    const documentation = this.subpStandardLoopCondDoc;\r\n    if (this.element) {\r\n      this.element.standardDocumentation = documentation;\r\n    }\r\n  }\r\n\r\n  _onSelectMultiplicationSearch(item) {\r\n    if (item && this.element) {\r\n      const multiInstance = this.element.multiInstanceAttribute;\r\n      const multiSelect = item || {};\r\n      if (multiInstance.name !== multiSelect.name) {\r\n        this.element.multiInstanceAttribute = multiSelect;\r\n      }\r\n    }\r\n    const condition = !item && this.subpMultiplicationSearch !== '';\r\n    this._subpMultiplicationSearch.toggleDisabledButton(!condition);\r\n  }\r\n\r\n  async _onAddNewMultiplicationAttribute() {\r\n    const regex = /^[a-zA-Z][a-zA-Z_0-9]+[a-zA-Z0-9]$/gi;\r\n    const name = this.subpMultiplicationSearch;\r\n    if (regex.test(name)) {\r\n      try {\r\n        const url = `${Config.NEW_NUMERIC_ATTR_URL}${name}`;\r\n        const response = await axios.post(url);\r\n        if (response && response.data.toUpperCase().indexOf('HTML') > -1) {\r\n          this.showInvalidSession();\r\n        }\r\n        if (response) {\r\n          const convert = new Converter();\r\n          const [attrCreated] = convert.convertToJson(response.data);\r\n          this.element.multiInstanceAttribute = { ...attrCreated };\r\n          this._subpMultiplicationSearch.selectedItem = attrCreated;\r\n          this._subpMultiplicationSearch.reloadData();\r\n          this._subpMultiplicationSearch.toggleDisabledButton(true);\r\n          // message\r\n          const options = { ...this.OPTIONS_TOAST };\r\n          options.type = 'success';\r\n          options.title = i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastSuccessTitle');\r\n          options.message = i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastSuccessMessageAttr');\r\n          this.toastMessage.showMessage(options);\r\n        }\r\n      } catch (error) {\r\n        throw Error(i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelErrorMessageAttr'));\r\n      }\r\n    } else {\r\n      const options = { ...this.OPTIONS_TOAST };\r\n      options.type = 'danger';\r\n      options.title = i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastErrorTitle');\r\n      options.message = `${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastErrorMessageSubprocessNameAttr')} <b>\"${name}\"</b> ${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastMessageIsValid')}`;\r\n      this.toastMessage.showMessage(options);\r\n    }\r\n  }\r\n\r\n  _onSelectReusableEntitySearch(item) {\r\n    if (this.element) {\r\n      const entitySelect = item || {};\r\n      const entity = this.element.reusableEntity;\r\n      if (entity.name !== entitySelect.name) {\r\n        this.element.reusableEntity = entitySelect;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDeleteReusableEntitySearch() {\r\n    if (this.element) {\r\n      this.element.reusableEntity = null;\r\n    }\r\n  }\r\n\r\n  _onSelectReusableForm(item) {\r\n    const formType = this.subpReusableFormType.toUpperCase().charAt(0);\r\n    const { editStatus } = this._subpReusableFormsList;\r\n    if (item && editStatus && this.element) {\r\n      const editForm = this._subpReusableFormsList.rowEditableSelected;\r\n      const index = this.element.reusableForms.findIndex((value) => {\r\n        return parseInt(value.id, 10) === parseInt(editForm.id, 10) && value.formType === formType;\r\n      });\r\n      const existForm = this.element.reusableForms.findIndex((rform) => {\r\n        return parseInt(rform.id, 10) === parseInt(item.id, 10) && rform.formType === formType;\r\n      });\r\n      if (index !== -1 && existForm === -1) {\r\n        const newForm = { ...editForm };\r\n        newForm.id = parseInt(item.id, 10);\r\n        newForm.name = item.name;\r\n        this.element.editReusableForm(index, newForm);\r\n\r\n        const formType = this.subpReusableFormType.toUpperCase().charAt(0);\r\n        this._subpReusableFormsList.arrayList.data = this._getReusableFormByType(formType, this.element);\r\n        this._subpReusableFormsList.rowEditableSelected = newForm;\r\n        this._subpReusableFormsList.refreshList();\r\n        const showValue = this._getReusableExpShowValue(this.element);\r\n        this._subpReusableExp.showValue(showValue);\r\n      }\r\n      if (existForm !== -1) {\r\n        this._subpReusableFormSearch.selectedItem = { ...editForm };\r\n        const options = {\r\n          ...this.OPTIONS_TOAST,\r\n          type: 'danger',\r\n          title: i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastErrorTitle'),\r\n          message: `${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastErrorMessageForm')} \"${item.name}\" ${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastErrorMessageExist')}`,\r\n        };\r\n        this.toastMessage.showMessage(options);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onAddReusableFormsList() {\r\n    const formToAdd = this._subpReusableFormSearch.selectedItem;\r\n    const formType = this.subpReusableFormType.toUpperCase().charAt(0);\r\n    if (formToAdd) {\r\n      const forms = this.element.reusableForms || [];\r\n      const findForm = forms.find((value) => {\r\n        return parseInt(value.id, 10) === parseInt(formToAdd.id, 10) && value.formType === formType;\r\n      });\r\n      if (!findForm) {\r\n        const add = {\r\n          id: parseInt(formToAdd.id, 10),\r\n          name: formToAdd.name,\r\n          order: forms.length,\r\n          step: 1,\r\n          formType,\r\n        };\r\n        this.element.addReusableForm(add);\r\n        this._subpReusableFormsList.arrayList.data = this._getReusableFormByType(formType, this.element);\r\n        this._subpReusableFormsList.refreshList();\r\n        this._subpReusableFormsList._scrollToRow(add, () => this._onSelectSubpReusableFormsList(add));\r\n        this._subpReusableFormSearch.selectedItem = undefined;\r\n        const valueShow = this._getReusableExpShowValue(this.element);\r\n        this._subpReusableExp.showValue(valueShow);\r\n      }\r\n    }\r\n  }\r\n\r\n  _setReusableEditionMode(status) {\r\n    this._subpReusableEntitySearch.disabled = status;\r\n    this._subpReusableFormType.disabled = status;\r\n    this._subpReusableExecution.disabled = status;\r\n    this._subpReusableSkipFirstTask.disabled = status;\r\n  }\r\n\r\n  _onEditSubpReusableFormsList(status) {\r\n    // console.log(status ? 'Editing ON' : 'Editing OFF');\r\n    this._setReusableEditionMode(status);\r\n    if (status) {\r\n      const formEdit = this._subpReusableFormsList.rowEditableSelected;\r\n      this._subpReusableFormSearch.selectedItem = {\r\n        id: formEdit.id,\r\n        name: formEdit.name,\r\n      };\r\n    } else {\r\n      this._subpReusableFormSearch.selectedItem = undefined;\r\n    }\r\n  }\r\n\r\n  _onSelectSubpReusableFormsList(item) {\r\n    if (item) {\r\n      const options = this.OPTIONS_TOAST;\r\n      options.message = `<b>${i18next.t('subprocessPropsPanel.txtProDesSubprocessPanelToastMessageFormName')}</b> ${item.name}`;\r\n      this.toastMessage.showMessage(options);\r\n    }\r\n  }\r\n\r\n  _onDeleteSubpReusableFormsList(item) {\r\n    const formType = this.subpReusableFormType.toUpperCase().charAt(0);\r\n    if (this.element && item) {\r\n      const index = this.element.reusableForms.findIndex((value) => {\r\n        return parseInt(value.id, 10) === parseInt(item.id, 10) && value.formType === formType;\r\n      });\r\n      if (index !== -1) {\r\n        this.element.deleteReusableForm(index);\r\n        // this._subpReusableFormsList.arrayList.data = this.element.reusableForms;\r\n        this._subpReusableFormsList.arrayList.data = this.element.reusableForms.filter((x) => x.formType === formType);\r\n\r\n        this._subpReusableFormsList.refreshList();\r\n        this._subpReusableExp.showValue(this._getReusableExpShowValue(this.element));\r\n      }\r\n    }\r\n  }\r\n\r\n  _onDeleteAllSubpReusableFormsList() {\r\n    if (this.element) {\r\n      this.element.cleanReusableForm(this._subpReusableFormType.value === 'entity' ? 'E' : 'P');\r\n      this._subpReusableExp.showValue(this._getReusableExpShowValue(this.element));\r\n    }\r\n  }\r\n\r\n  _onSelectSubpReusableExecutionChanged() {\r\n    if (this.element) {\r\n      this.element.execution = this.subpReusableExecution;\r\n    }\r\n  }\r\n\r\n  _onSubpReusableSkipFirtsTaskChanged() {\r\n    if (this.element) {\r\n      this.element.skipFirst = this.subpReusableSkipFirstTask;\r\n    }\r\n  }\r\n\r\n  _onOrderFormChanged(actualPos, oldPos, actual, old) {\r\n    const formType = this.subpReusableFormType.toUpperCase().charAt(0);\r\n    if (this.element) {\r\n      // this.element.changeReusableFormPosition(actualPos, actual,formType);\r\n      // this.element.changeReusableFormPosition(oldPos, old,formType);\r\n\r\n      this.element.changeReusableFormPosition(actualPos, oldPos, actual, old, formType);\r\n    }\r\n  }\r\n\r\n  _onSubMultiInstanceTypeChanged() {\r\n    const isNumberMult = this.subpMultiInstanceType;\r\n    const labelEl = this.wrapMultiInstanceType.querySelector('.highlighted');\r\n    this._changeVisibility(this._subpMultiplicationSearch.wrapper, !isNumberMult);\r\n    this._changeVisibility(this.wrapMultiplicationNumber, isNumberMult);\r\n    if (isNumberMult && this.element) {\r\n      this._subpMultiplicationSearch.selectedItem = undefined;\r\n    } else {\r\n      this.subpMultiplicationNumber = '';\r\n    }\r\n    const value = isNumberMult ? 'Value' : 'Attribute';\r\n    labelEl.innerText = value;\r\n    if (this.element) this.element.multiInstanceType = value.toLowerCase();\r\n  }\r\n\r\n  _onValidateMultiplicationNumber() {\r\n    const value = this.subpMultiplicationNumber;\r\n    if (value < 1 || isNaN(value)) {\r\n      this.subpMultiplicationNumber = 1;\r\n    }\r\n    if (value === '') {\r\n      this.subpMultiplicationNumber = '';\r\n    } else {\r\n      this.subpMultiplicationNumber = parseInt(value, 10);\r\n    }\r\n  }\r\n\r\n  _onSubpMultiplicationNumberChanged() {\r\n    if (this.element) {\r\n      const multiplication = this.subpMultiplicationNumber;\r\n      const actual = this.element.multiInstanceValue;\r\n      if (actual !== multiplication) {\r\n        this.element.multiInstanceValue = multiplication;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport TemplatePanel from './templatePanel';\r\nimport EventManager from './managers/eventManager';\r\n\r\nexport default class WorkflowPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'workflow');\r\n    this._initElements();\r\n    this._initEventsHandlers();\r\n  }\r\n\r\n  _initElements() {\r\n    const wrapper = this._panel.querySelector('#manager_workflow_events');\r\n    this._eventsManager = new EventManager('workflow', wrapper, {\r\n      eventsUrl: Config.WORKFLOW_EVENTS_URL,\r\n      busClassUrl: Config.WORKFLOW_ACTIONS_URL,\r\n      attributesUrl: Config.WORKFLOW_ATTRS_URL,\r\n      bindingsUrl: Config.WORKFLOW_BINDINGS_URL,\r\n    });\r\n  }\r\n\r\n  _initEventsHandlers() {\r\n    this._eventsManager.on('change', (data) => this._setEventsWhenManagerChanged(data));\r\n  }\r\n\r\n  show(el) {\r\n    const { events } = el;\r\n    this._eventsManager.reset();\r\n    this._eventsManager.eventsList = events;\r\n    this.documentationInput = el.documentation || '';\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _setEventsWhenManagerChanged(events) {\r\n    if (this.element) {\r\n      this.element.events = events;\r\n    }\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport i18next from 'i18next';\r\nimport TemplatePanel from './templatePanel';\r\nimport { getProcessElementByID, getElementsOfType } from '../../utils/util';\r\nimport { validatePositiveInteger } from './facilis/validator';\r\n\r\nexport default class ConnectorPanel extends TemplatePanel {\r\n  constructor(editor) {\r\n    super(editor, 'connector');\r\n    this._init();\r\n    this._initEvents();\r\n  }\r\n\r\n  // getters methods\r\n  get connectorNameInput() {\r\n    return this._connectorNameInput.value.trim();\r\n  }\r\n\r\n  get connectorTypeSelect() {\r\n    return this._connectorTypeSelect.value;\r\n  }\r\n\r\n  get connectorApiaSelect() {\r\n    return this._connectorApiaSelect.value.toUpperCase();\r\n  }\r\n\r\n  get connectorExpCondition() {\r\n    return this._connectorExpCondition.conditionArea;\r\n  }\r\n\r\n  get connectorDirectionSelect() {\r\n    return this._connectorDirectionSelect.value;\r\n  }\r\n\r\n  get connectorExecOrder() {\r\n    return this._connectorExecOrder.value;\r\n  }\r\n\r\n  // setters methods\r\n  set connectorNameInput(value) {\r\n    this._connectorNameInput.value = value;\r\n  }\r\n\r\n  set connectorTypeSelect(value) {\r\n    this._connectorTypeSelect.value = value;\r\n  }\r\n\r\n  set connectorApiaSelect(value) {\r\n    this._connectorApiaSelect.value = value;\r\n  }\r\n\r\n  set connectorExpCondition(value) {\r\n    this._connectorExpCondition.conditionArea = value;\r\n  }\r\n\r\n  set connectorDirectionSelect(value) {\r\n    this._connectorDirectionSelect.value = value;\r\n  }\r\n\r\n  set connectorExecOrder(value) {\r\n    this._connectorExecOrder.value = value;\r\n  }\r\n\r\n  _init() {\r\n    this.CONNECTOR_PANEL = {\r\n      EXPRESSION: {\r\n        nameId: 'connector_exp_condition',\r\n        label: i18next.t('connectorPropsPanel.txtProDesConnectorPanelExpressionLabel'),\r\n      },\r\n    };\r\n    const { EXPRESSION } = this.CONNECTOR_PANEL;\r\n    this._connectorNameInput = this.panel.querySelector('#connector_name_input');\r\n    this._connectorDirectionSelect = this.panel.querySelector('#connector_direction_select');\r\n    this._connectorTypeSelect = this.panel.querySelector('#connector_type_select');\r\n    this._connectorApiaSelect = this.panel.querySelector('#connector_apia_select');\r\n    this._wrapConnectorDoc = this._documentationInput.parentNode.parentNode;\r\n    this._wrapConnectorType = this._connectorTypeSelect.parentNode.parentNode;\r\n    this._wrapConnectorDirection = this._connectorDirectionSelect.parentNode.parentNode;\r\n    this._wrapConnectorApia = this._connectorApiaSelect.parentNode.parentNode;\r\n    this._connectorExpCondition = this._includeComponent(\r\n      'condition',\r\n      this._wrapCod,\r\n      this._wrapConnectorType,\r\n      'afterend',\r\n      EXPRESSION,\r\n    );\r\n    this._connectorExecOrder = this.panel.querySelector('#connector_execution_order');\r\n    this._wrapConnectorExecOrder = this._connectorExecOrder.parentNode.parentNode;\r\n    this._changeVisibility(this._connectorExpCondition.wrapper, false);\r\n    this._changeVisibility(this._wrapConnectorExecOrder, false);\r\n  }\r\n\r\n  _initEvents() {\r\n    this._connectorTypeSelect.addEventListener('input', () => {\r\n      this._onConnectorTypeSelectChanged();\r\n    });\r\n\r\n    this._connectorDirectionSelect.addEventListener('input', () => {\r\n      this._onConnectorDirectionSelectChanged();\r\n    });\r\n\r\n    this._connectorApiaSelect.addEventListener('input', () => {\r\n      this._onConnectorApiaSelectChanged();\r\n    });\r\n\r\n    this._connectorExpCondition.on('change_condition', (condition) => {\r\n      this._onConnectorExpressionCondChanged(condition);\r\n    });\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onConnectorNameChanged();\r\n      },\r\n      this._connectorNameInput,\r\n      'input',\r\n      200,\r\n    );\r\n\r\n    this._setTimeoutOnPropertyChanged(\r\n      undefined,\r\n      () => {\r\n        this._onConnectorExecutionOrderChanged();\r\n      },\r\n      this._connectorExecOrder,\r\n      'input',\r\n      200,\r\n    );\r\n  }\r\n\r\n  _transitionComponentsAccordingElement(from, to) {\r\n    let module = '';\r\n    const typeFrom = from.elementType;\r\n    switch (typeFrom) {\r\n      case Config.START_EVENT:\r\n      case Config.INTERMEDIATE_EVENT: {\r\n        module = 2;\r\n        break;\r\n      }\r\n      case Config.TASK:\r\n      case Config.SUBPROCESS: {\r\n        module = 1;\r\n        if (to.elementType === Config.INTERMEDIATE_EVENT) module = 2;\r\n        break;\r\n      }\r\n      case Config.GATEWAY: {\r\n        module = 2;\r\n        if (from.type === 'exclusive' || from.type === 'inclusive') module = 3;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    return module;\r\n  }\r\n\r\n  _haveGatewayMultipleConnectors(id) {\r\n    const connectors = getElementsOfType(Config.CONNECTOR, this.editor.elements);\r\n    const transitions = connectors.filter((conn) => {\r\n      return conn.type === Config.CONNECTOR_TYPE_TRANSITION;\r\n    });\r\n    let count = 0;\r\n    transitions.forEach((transition) => {\r\n      if (parseInt(transition.from, 10) === parseInt(id, 10)) count++;\r\n    });\r\n    return count > 1;\r\n  }\r\n\r\n  _showModuleTransition(module, from) {\r\n    this._changeVisibility(this._wrapConnectorType, true);\r\n    this._changeVisibility(this._wrapConnectorApia, true);\r\n    this._changeVisibility(this._wrapConnectorDoc, true);\r\n    this._changeVisibility(this._connectorExpCondition.wrapper, false);\r\n    this._changeVisibility(this._wrapConnectorDirection, false);\r\n    this._changeVisibility(this._wrapConnectorExecOrder, false);\r\n    switch (module) {\r\n      case 1: {\r\n        this._connectorTypeSelect.disabled = false;\r\n        this._connectorApiaSelect.disabled = false;\r\n        this.connectorTypeSelect = 'none';\r\n        this.connectorApiaSelect = 'N';\r\n        break;\r\n      }\r\n      case 2: {\r\n        this._connectorTypeSelect.disabled = true;\r\n        this._connectorApiaSelect.disabled = false;\r\n        this.connectorTypeSelect = 'none';\r\n        this.connectorApiaSelect = 'N';\r\n        this._connectorTypeSelect.disabled = true;\r\n        break;\r\n      }\r\n      case 3: {\r\n        this._connectorTypeSelect.disabled = true;\r\n        this._connectorApiaSelect.disabled = false;\r\n        this.connectorApiaSelect = 'N';\r\n        this._changeVisibility(this._connectorExpCondition.wrapper, true);\r\n        if (\r\n          from.type === 'exclusive'\r\n          && this._haveGatewayMultipleConnectors(from.id)\r\n          && Config.ENV !== 'Offline'\r\n        ) {\r\n          this._changeVisibility(this._wrapConnectorExecOrder, true);\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  show(el) {\r\n    const elementFrom = getProcessElementByID(el.from, this.editor.elements);\r\n    const elementTo = getProcessElementByID(el.to, this.editor.elements);\r\n\r\n    this.connectorNameInput = el.connectorName || '';\r\n    this.documentationInput = el.documentation;\r\n\r\n    if (el.type === Config.CONNECTOR_TYPE_TRANSITION) {\r\n      const module = this._transitionComponentsAccordingElement(elementFrom, elementTo);\r\n      this._showModuleTransition(module, elementFrom);\r\n      this.connectorTypeSelect = module !== 3 ? el.kind || 'none' : 'expression';\r\n      this.connectorExpCondition = el.expression || '';\r\n      this.connectorApiaSelect = el.connectorClass || 'N';\r\n      const executionOrder = (el.executionOrder !== undefined) ? el.executionOrder : '';\r\n      this.connectorExecOrder = executionOrder;\r\n      if (module === 1 && el.kind === 'expression') {\r\n        this._changeVisibility(this._connectorExpCondition.wrapper, true);\r\n      }\r\n    } else {\r\n      this.connectorDirectionSelect = el.direction || '';\r\n      const isInputOrOutput = this._isDataInputOutput(el.from, el.to);\r\n      this._connectorDirectionSelect.disabled = isInputOrOutput;\r\n      this._changeVisibility(this._wrapConnectorType, false);\r\n      this._changeVisibility(this._wrapConnectorApia, false);\r\n      this._changeVisibility(this._wrapConnectorDirection, true);\r\n      this._changeVisibility(this._wrapConnectorDoc, true);\r\n      this._changeVisibility(this._connectorExpCondition.wrapper, false);\r\n      this._changeVisibility(this._wrapConnectorExecOrder, false);\r\n    }\r\n    this._changeVisibility(this._panel, true);\r\n  }\r\n\r\n  _isDataInputOutput(fromId, toId) {\r\n    const from = getProcessElementByID(fromId, this.editor.elements);\r\n    const to = getProcessElementByID(toId, this.editor.elements);\r\n    return (\r\n      from.elementType === Config.DATA_INPUT\r\n      || from.elementType === Config.DATA_OUTPUT\r\n      || to.elementType === Config.DATA_INPUT\r\n      || to.elementType === Config.DATA_OUTPUT\r\n    );\r\n  }\r\n\r\n  _onConnectorNameChanged() {\r\n    if (this.element) {\r\n      const { elementType, connectorName } = this.element;\r\n      const actualName = elementType === Config.CONNECTOR ? connectorName : undefined;\r\n      if (actualName !== this.connectorNameInput && elementType === Config.CONNECTOR) {\r\n        this.element.connectorName = this.connectorNameInput;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onConnectorTypeSelectChanged() {\r\n    const condition = this.connectorTypeSelect === 'expression';\r\n    this.element.kind = this.connectorTypeSelect;\r\n    if (!condition && this.element.expression) delete this.element.properties.expression;\r\n    this._changeVisibility(this._connectorExpCondition.wrapper, condition);\r\n    this._changeVisibility(this._wrapConnectorDoc, condition);\r\n  }\r\n\r\n  _onConnectorExpressionCondChanged(condition) {\r\n    this.element.expression = condition;\r\n  }\r\n\r\n  _onConnectorApiaSelectChanged() {\r\n    this.element.connectorClass = this.connectorApiaSelect;\r\n  }\r\n\r\n  _onConnectorDirectionSelectChanged() {\r\n    this.element.direction = this.connectorDirectionSelect;\r\n  }\r\n\r\n  _onConnectorExecutionOrderChanged() {\r\n    if (this.element) {\r\n      const actual = this.element.executionOrder;\r\n      if (this.connectorExecOrder !== '') {\r\n        const isValid = validatePositiveInteger(this.connectorExecOrder, 0);\r\n        this.connectorExecOrder = !isValid ? '0' : parseInt(this.connectorExecOrder, 10);\r\n      } else {\r\n        this.connectorExecOrder = '';\r\n      }\r\n      if (actual !== this.connectorExecOrder) {\r\n        this.element.executionOrder = parseInt(this.connectorExecOrder, 10);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\n\r\nexport default class PropertiesPanel extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this._sidebar = document.querySelector('.main__sidepanel');\r\n    this._sidebarHandle = document.querySelector('#sidebar_handle');\r\n    this._btnToggleVisible = document.querySelector('#sidebar_toggle');\r\n\r\n    const style = window.getComputedStyle(document.documentElement);\r\n    // get sidebar width value from stylesheet\r\n    this._sidebarMinWidth = style.getPropertyValue('--sidebar-width');\r\n    this._newSideBarWidth = this._sidebarMinWidth;\r\n\r\n    this._onSidebarHandleMouseUp = this._onSidebarHandleMouseUp.bind(this);\r\n    this._onSidebarHandleMouseMove = this._onSidebarHandleMouseMove.bind(this);\r\n\r\n    // user changeable panel's width\r\n    this._sidebarHandle.addEventListener('mousedown', () => {\r\n      document.addEventListener('mouseup', this._onSidebarHandleMouseUp);\r\n      document.addEventListener('mousemove', this._onSidebarHandleMouseMove);\r\n    });\r\n\r\n    window.addEventListener('resize', () => {\r\n      const mq = window.matchMedia('(max-width: 992px)');\r\n      if (mq.matches) {\r\n        // display full width\r\n        this._sidebar.setAttribute('style', ' width:100%');\r\n      } else {\r\n        // display default size\r\n        this._sidebar.setAttribute('style', `width:${this._newSideBarWidth}px`);\r\n      }\r\n    });\r\n\r\n    // toggle sidebar visibility\r\n    this._btnToggleVisible.addEventListener(\r\n      'click',\r\n      () => {\r\n        const state = this._sidebar.getAttribute('data-state');\r\n        this._newSideBarWidth = parseInt(this._newSideBarWidth, 10);\r\n        if (state === 'off' || state === '') {\r\n          document.documentElement.style.setProperty(\r\n            '--sidebar-current-width',\r\n            `-${this._newSideBarWidth}px`,\r\n          );\r\n          this._sidebar.setAttribute('data-state', 'on');\r\n        } else {\r\n          document.documentElement.style.setProperty(\r\n            '--sidebar-current-width',\r\n            '0px',\r\n          );\r\n          this._sidebar.setAttribute('data-state', 'off');\r\n        }\r\n        this.emit('resize');\r\n      },\r\n      false,\r\n    );\r\n  }\r\n\r\n  _onSidebarHandleMouseUp() {\r\n    document.removeEventListener('mousemove', this._onSidebarHandleMouseMove);\r\n    document.removeEventListener('mouseup', this._onSidebarHandleMouseUp);\r\n  }\r\n\r\n  _onSidebarHandleMouseMove(evt) {\r\n    const docWidth = document.documentElement.offsetWidth;\r\n    this._newSideBarWidth = docWidth - evt.clientX;\r\n    if (this._newSideBarWidth < parseInt(this._sidebarMinWidth, 10)) {\r\n      this._newSideBarWidth = parseInt(this._sidebarMinWidth, 10);\r\n    } else if (this._newSideBarWidth >= docWidth / 2) {\r\n      this._newSideBarWidth = docWidth / 2;\r\n    }\r\n    this._sidebar.setAttribute('style', `width:${this._newSideBarWidth}px`);\r\n    this._sidebar.style.width = `width:${this._newSideBarWidth}px`;\r\n    this._sidebarHandle.setAttribute(\r\n      'style',\r\n      `right:${this._newSideBarWidth}px`,\r\n    );\r\n    this._btnToggleVisible.setAttribute(\r\n      'style',\r\n      `right:${this._newSideBarWidth}px`,\r\n    );\r\n  }\r\n}\r\n","import Config from 'config';\r\n\r\nimport TaskPanel from './taskPanel';\r\nimport GatewayPanel from './gatewayPanel';\r\nimport GroupPanel from './groupPanel';\r\nimport TextPanel from './textPanel';\r\nimport PoolLanePanel from './poolLanePanel';\r\nimport EventPanel from './eventPanel';\r\nimport DataPanel from './dataPanel';\r\nimport SubProcessPanel from './subprocessPanel';\r\nimport WorkflowPanel from './workflowPanel';\r\nimport ConnectorPanel from './connectorPanel';\r\nimport PropertiesPanel from './propertiesPanel';\r\n\r\nexport default class Panels extends PropertiesPanel {\r\n  constructor(editor) {\r\n    super();\r\n    this._taskPanel = new TaskPanel(editor);\r\n    this._subprocessPanel = new SubProcessPanel(editor);\r\n    this._gatewayPanel = new GatewayPanel(editor);\r\n    this._eventPanel = new EventPanel(editor);\r\n    this._groupPanel = new GroupPanel(editor);\r\n    this._textPanel = new TextPanel(editor);\r\n    this._dataPanel = new DataPanel(editor);\r\n    this._poolLanePanel = new PoolLanePanel(editor);\r\n    this._workflowPanel = new WorkflowPanel(editor);\r\n    this._connectorPanel = new ConnectorPanel(editor);\r\n  }\r\n\r\n  show(panelName, element, undo = false) {\r\n    switch (panelName) {\r\n      case Config.TASK:\r\n        this._taskPanel.show(element);\r\n        break;\r\n      case Config.SUBPROCESS:\r\n        this._subprocessPanel.show(element);\r\n        break;\r\n      case Config.GATEWAY:\r\n        this._gatewayPanel.show(element);\r\n        break;\r\n      case Config.START_EVENT:\r\n        this._eventPanel.show(element);\r\n        break;\r\n      case Config.INTERMEDIATE_EVENT:\r\n        this._eventPanel.show(element);\r\n        break;\r\n      case Config.END_EVENT:\r\n        this._eventPanel.show(element);\r\n        break;\r\n      case Config.GROUP:\r\n        this._groupPanel.show(element);\r\n        break;\r\n      case Config.TEXT:\r\n        this._textPanel.show(element);\r\n        break;\r\n      case Config.DATA_STORE:\r\n        this._dataPanel.show(element);\r\n        break;\r\n      case Config.DATA_OBJECT:\r\n        this._dataPanel.show(element);\r\n        break;\r\n      case Config.DATA_INPUT:\r\n        this._dataPanel.show(element);\r\n        break;\r\n      case Config.DATA_OUTPUT:\r\n        this._dataPanel.show(element);\r\n        break;\r\n      case Config.POOL:\r\n        this._poolLanePanel.show(element);\r\n        break;\r\n      case Config.LANE:\r\n        this._poolLanePanel.show(element);\r\n        break;\r\n      case Config.CONNECTOR:\r\n        this._connectorPanel.show(element);\r\n        break;\r\n      case Config.WORKFLOW:\r\n        /* console.log({\r\n          NOT_VISIBLE: !this._workflowPanel.isVisible,\r\n          UNDO_ACTION: undo,\r\n        }); */\r\n        if (!this._workflowPanel.isVisible || undo) {\r\n          this._workflowPanel.show(element);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  hide(panelName) {\r\n    switch (panelName) {\r\n      case Config.TASK:\r\n        this._taskPanel.hide();\r\n        break;\r\n      case Config.SUBPROCESS:\r\n        this._subprocessPanel.hide();\r\n        break;\r\n      case Config.GATEWAY:\r\n        this._gatewayPanel.hide();\r\n        break;\r\n      case Config.START_EVENT:\r\n        this._eventPanel.hide();\r\n        break;\r\n      case Config.INTERMEDIATE_EVENT:\r\n        this._eventPanel.hide();\r\n        break;\r\n      case Config.END_EVENT:\r\n        this._eventPanel.hide();\r\n        break;\r\n      case Config.GROUP:\r\n        this._groupPanel.hide();\r\n        break;\r\n      case Config.TEXT:\r\n        this._textPanel.hide();\r\n        break;\r\n      case Config.DATA_STORE:\r\n        this._dataPanel.hide();\r\n        break;\r\n      case Config.DATA_INPUT:\r\n        this._dataPanel.hide();\r\n        break;\r\n      case Config.DATA_OUTPUT:\r\n        this._dataPanel.hide();\r\n        break;\r\n      case Config.DATA_OBJECT:\r\n        this._dataPanel.hide();\r\n        break;\r\n      case Config.POOL:\r\n        this._poolLanePanel.hide();\r\n        break;\r\n      case Config.LANE:\r\n        this._poolLanePanel.hide();\r\n        break;\r\n      case Config.CONNECTOR:\r\n        this._connectorPanel.hide();\r\n        break;\r\n      case Config.WORKFLOW:\r\n        this._workflowPanel.hide();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { escape, unescape } from 'html-escaper';\r\nimport Config from 'config';\r\n\r\nexport default class Extractor {\r\n  constructor(elements) {\r\n    this.elements = elements;\r\n  }\r\n\r\n  get types() {\r\n    return {\r\n      FORM: 'form',\r\n      ATTRIBUTE: 'attribute',\r\n      DOCUMENTATION: 'documentation',\r\n      EVENT: 'event',\r\n    };\r\n  }\r\n\r\n  // toEscapeXml(xml) {\r\n  //   let escapeXml = '';\r\n  //   for (let index = 0; index < xml.length; index++) {\r\n  //     const character = xml.charAt(index);\r\n  //     let escapeChar;\r\n  //     switch (character) {\r\n  //       case '<': escapeChar = '&lt;';\r\n  //         break;\r\n  //       case '>': escapeChar = '&gt;';\r\n  //         break;\r\n  //       case '\"': escapeChar = '&quot;';\r\n  //         break;\r\n  //       default: escapeChar = character;\r\n  //         break;\r\n  //     }\r\n  //     escapeXml += escapeChar;\r\n  //   }\r\n  //   return escapeXml;\r\n  // }\r\n\r\n  readExtract(parser) {\r\n    this.parser = parser;\r\n    this.elements.forEach((element) => {\r\n      const { properties, elementType } = element;\r\n      if (\r\n        properties.documentation\r\n        && (elementType === Config.TASK || elementType === Config.WORKFLOW)\r\n      ) {\r\n        const { documentation } = properties;\r\n        const xml = unescape(documentation.text || '');\r\n        this._extractInfo(xml, element);\r\n      }\r\n    });\r\n  }\r\n\r\n  writeExtract(builder, element) {\r\n    this.builder = builder;\r\n    const { forms, events, documentation } = element.properties;\r\n    return {\r\n      documentation: this._buildDocumentation(documentation),\r\n      forms:\r\n        element.elementType === Config.WORKFLOW\r\n          ? this._buildWorkflowForms(forms)\r\n          : this._buildTaskForms(forms),\r\n      events: this._buildEvents(events),\r\n    };\r\n  }\r\n\r\n  _buildDocumentation(documentation) {\r\n    let result;\r\n    const Types = this.types;\r\n    if (documentation) {\r\n      const { text } = documentation;\r\n      const documentationEle = this.builder.create(Types.DOCUMENTATION, {\r\n        enconding: 'utf-8',\r\n        headless: true,\r\n      });\r\n      documentationEle.text(text || '');\r\n      // result = this.toEscapeXml(documentationEle.end({ pretty: true }));\r\n      result = escape(documentationEle.end({ pretty: true }));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _buildTaskForms(forms) {\r\n    let result = '';\r\n    const Types = this.types;\r\n    if (forms) {\r\n      const formsEle = this.builder.create('forms', {\r\n        enconding: 'utf-8',\r\n        headless: true,\r\n      });\r\n      forms.forEach((stepFrm) => {\r\n        const { step, EForms, PForms } = stepFrm;\r\n        if (EForms && PForms) {\r\n          const joinForms = EForms.concat(PForms);\r\n          joinForms.forEach((form) => {\r\n            const { id, order, type } = form;\r\n            const attributes = {\r\n              frmId: id,\r\n              frmType: type,\r\n              frmStepId: step,\r\n              frmOrder: order,\r\n            };\r\n            formsEle.ele(Types.FORM, attributes);\r\n          });\r\n        }\r\n      });\r\n      // result = this.toEscapeXml(formsEle.end({ pretty: true }));\r\n      result = escape(formsEle.end({ pretty: true }));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _buildWorkflowForms(forms) {\r\n    let result = '';\r\n    if (forms) {\r\n      const formsEle = this.builder.create('forms', {\r\n        enconding: 'utf-8',\r\n        headless: true,\r\n      });\r\n      forms.forEach((form) => {\r\n        const { name, title, id } = form;\r\n        const attributes = {\r\n          frmId: id,\r\n          frmName: name || title || '',\r\n          frmTitle: title || name || '',\r\n        };\r\n        const formEle = formsEle.ele('form', attributes);\r\n        this._buildAttributesWorkflowForm(formEle, form.attributes);\r\n        this._buildEvents(form.events, formEle);\r\n      });\r\n      // result = this.toEscapeXml(formsEle.end({ pretty: true }));\r\n      result = escape(formsEle.end({ pretty: true }));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _buildAttributesWorkflowForm(formEle, attributes) {\r\n    if (attributes) {\r\n      const Types = this.types;\r\n      attributes.forEach((attribute) => {\r\n        const {\r\n          name, label, dataType, fieldType, grid, regex,\r\n        } = attribute;\r\n        const attrs = {\r\n          attName: name || label || '',\r\n          attLabel: label || name || '',\r\n          attTooltip: '',\r\n          fieldtype: fieldType,\r\n          datatype: dataType,\r\n          grid: grid || '',\r\n          regExp: regex || '',\r\n        };\r\n        formEle.ele(Types.ATTRIBUTE, attrs);\r\n      });\r\n    }\r\n    return formEle;\r\n  }\r\n\r\n  _buildEvents(events, element = undefined) {\r\n    let eventsEle;\r\n    const Types = this.types;\r\n    if (events) {\r\n      eventsEle = element\r\n        ? element.ele('events')\r\n        : (eventsEle = this.builder.create('events', {\r\n          enconding: 'utf-8',\r\n          headless: true,\r\n        }));\r\n      events.forEach((event) => {\r\n        const {\r\n          name, busClaName, busClaDesc, order,\r\n        } = event;\r\n        const attributes = {\r\n          evtName: name,\r\n          busClaName: busClaName || busClaDesc || '',\r\n          busClaDesc: busClaDesc || busClaName || '',\r\n          evtExecOrder: order,\r\n        };\r\n        eventsEle.ele(Types.EVENT, attributes);\r\n      });\r\n    }\r\n    return element || eventsEle;\r\n  }\r\n\r\n  _extractInfo(xml, element) {\r\n    const { documentation } = element.properties;\r\n    const Types = this.types;\r\n    let flagForm = false;\r\n    let flagDoc = false;\r\n\r\n    this.parser.onopentag = (tag) => {\r\n      const { name, attributes } = tag;\r\n      switch (name) {\r\n        case Types.FORM:\r\n          this._addFormProperties(element, attributes);\r\n          flagForm = true;\r\n          break;\r\n        case Types.ATTRIBUTE:\r\n          this._addAttributeProperties(element, attributes);\r\n          break;\r\n        case Types.EVENT:\r\n          this._addEventProperties(element, attributes, flagForm);\r\n          break;\r\n        case Types.DOCUMENTATION:\r\n          flagDoc = true;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    this.parser.ontext = (text) => {\r\n      const textValue = text.trim();\r\n      const { name } = this.parser.tag;\r\n      if (name === Types.DOCUMENTATION) {\r\n        documentation.text = textValue || '';\r\n      }\r\n    };\r\n\r\n    this.parser.onclosetag = (name) => {\r\n      if (name === Types.FORM) flagForm = false;\r\n    };\r\n\r\n    this.parser.onerror = () => {\r\n      this.parser.error = null;\r\n      this.parser.resume();\r\n    };\r\n\r\n    this.parser.write(xml).close();\r\n    if (documentation.text === '' || !flagDoc) delete element.properties.documentation;\r\n  }\r\n\r\n  static extractUnmodifiedInfo(value, parser) {\r\n    let textDoc = '';\r\n    let flagDocumentation = false;\r\n    let otherDirtyTags = false;\r\n    const xml = unescape(value);\r\n    parser.onopentag = ({ name }) => {\r\n      if (name === 'forms' || name === 'events') {\r\n        otherDirtyTags = true;\r\n      }\r\n      if (name === 'documentation') {\r\n        flagDocumentation = true;\r\n      }\r\n    };\r\n    parser.ontext = (text) => {\r\n      textDoc = flagDocumentation ? text.trim() : '';\r\n    };\r\n    parser.onclosetag = (name) => {\r\n      if (name === 'documentation') flagDocumentation = false;\r\n    };\r\n    parser.onerror = () => {\r\n      parser.error = null;\r\n      parser.resume();\r\n    };\r\n    parser.write(xml).close();\r\n    return { textDoc, otherTags: otherDirtyTags };\r\n  }\r\n\r\n  _addFormProperties(element, attributes) {\r\n    const { properties, elementType } = element;\r\n    if (!properties.forms) properties.forms = [];\r\n    const { forms } = properties;\r\n    const { frmId } = attributes;\r\n\r\n    if (elementType === Config.WORKFLOW) {\r\n      this._addWorkflowFormProperties(forms, parseInt(frmId, 10), attributes);\r\n    } else {\r\n      this._addTaskFormProperties(forms, parseInt(frmId, 10), attributes);\r\n    }\r\n    // forms.push(form);\r\n  }\r\n\r\n  _addWorkflowFormProperties(forms, id, attributes) {\r\n    const { frmName, frmTitle } = attributes;\r\n    const form = {\r\n      id,\r\n      name: frmName,\r\n      title: frmTitle,\r\n    };\r\n    forms.push(form);\r\n  }\r\n\r\n  _addTaskFormProperties(forms, id, attributes) {\r\n    const { frmType, frmStepId, frmOrder } = attributes;\r\n    let step = forms.find(\r\n      (formStep) => formStep.step === parseInt(frmStepId, 10),\r\n    );\r\n\r\n    if (!step) {\r\n      step = {\r\n        // id: forms.length + 1,\r\n        id: forms.length,\r\n        step: parseInt(frmStepId, 10),\r\n        name: 'Step',\r\n        EForms: [],\r\n        PForms: [],\r\n        entity: '0',\r\n        process: '0',\r\n      };\r\n      forms.push(step);\r\n    }\r\n    const typeForms = frmType === 'E' ? step.EForms || [] : step.PForms || [];\r\n    typeForms.push({ id, order: parseInt(frmOrder, 10), type: frmType });\r\n    const type = frmType === 'E' ? 'entity' : 'process';\r\n    step[type] = typeForms.length.toString();\r\n  }\r\n\r\n  _addAttributeProperties(element, tagAttrs) {\r\n    const { forms } = element.properties;\r\n    const lastForm = forms.pop();\r\n    if (!lastForm.attributes) lastForm.attributes = [];\r\n    const { attributes } = lastForm;\r\n    const {\r\n      attName, attLabel, fieldtype, datatype, regExp, grid,\r\n    } = tagAttrs;\r\n    attributes.push({\r\n      id: attributes.length + 1,\r\n      name: attName,\r\n      label: attLabel,\r\n      fieldType: fieldtype,\r\n      dataType: datatype,\r\n      regex: regExp,\r\n      grid,\r\n    });\r\n    forms.push(lastForm);\r\n  }\r\n\r\n  _addEventProperties(element, attributes, flagForm) {\r\n    const { properties } = element;\r\n    const {\r\n      evtName, busClaName, busClaDesc, evtExecOrder,\r\n    } = attributes;\r\n    const event = {\r\n      name: evtName,\r\n      busClaName,\r\n      busClaDesc,\r\n      order: parseInt(evtExecOrder, 10),\r\n    };\r\n    const { forms } = properties;\r\n    let lastForm = {};\r\n    if (flagForm) lastForm = forms.pop();\r\n    if (flagForm && !lastForm.events) lastForm.events = [];\r\n    if (!flagForm && !properties.events) properties.events = [];\r\n    const events = flagForm ? lastForm.events : properties.events;\r\n    events.push({ id: events.length + 1, ...event });\r\n    if (flagForm) forms.push(lastForm);\r\n  }\r\n}\r\n","// -- Import declarations -- //\r\nimport EventEmitter from 'eventemitter3';\r\nimport sax from 'sax';\r\nimport builder from 'xmlbuilder';\r\nimport Config from 'config';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport format from 'date-format';\r\nimport dayjs from 'dayjs';\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport Extractor from './extractor';\r\nimport { getElementsOfType, getConnectorsByFromTo } from './utils/util';\r\n\r\n// -- Class parser declarations -- //\r\n\r\nexport default class Parser extends EventEmitter {\r\n  constructor(xml = '', editor) {\r\n    super();\r\n    this.xml = xml;\r\n    this.parser = sax.parser({\r\n      normalize: true,\r\n      strict: false,\r\n      trim: true,\r\n    });\r\n    this.editor = editor;\r\n    this.builder = builder;\r\n    this.tagsTypes = {\r\n      Task: 'Task',\r\n      Event: 'Event',\r\n      Start: 'Start',\r\n      Intermediate: 'Intermediate',\r\n      End: 'End',\r\n      Gateway: 'Gateway',\r\n      Connector: 'Connector',\r\n      Pool: 'Pool',\r\n      Lane: 'Lane',\r\n      Subprocess: 'Subprocess',\r\n      DataObject: 'DataObject',\r\n      DataStore: 'DataStore',\r\n      DataInput: 'DataInput',\r\n      DataOutput: 'DataOutput',\r\n      Group: 'Group',\r\n      TextAnnotation: 'TextAnnotation',\r\n      Artifact: 'Artifact',\r\n      Activity: 'Activity',\r\n      DataInputOutput: 'DataInputOutput',\r\n      Workflow: 'Workflow',\r\n    };\r\n    this.xpdl = Config.ENV !== 'Offline' ? '' : 'xpdl:';\r\n    // this.xpdl = 'xpdl:';\r\n    this._id = 0;\r\n  }\r\n\r\n  set id(value) {\r\n    this._id = value;\r\n  }\r\n\r\n  _toIntegerId(id) {\r\n    return parseInt(id, 10);\r\n  }\r\n\r\n  _getConnectorByIdContains(elements, id) {\r\n    const connectors = elements.filter((element) => {\r\n      return element.elementType === Config.CONNECTOR;\r\n    });\r\n    const filtered = connectors.filter((connector) => {\r\n      return connector.from === id || connector.to === id;\r\n    });\r\n    return filtered;\r\n  }\r\n\r\n  _checkBoundaryEvents(elements, element, newId) {\r\n    const eventsAttached = elements.filter((evt) => {\r\n      return (\r\n        evt.elementType === Config.INTERMEDIATE_EVENT\r\n        && evt.isAttached\r\n        && evt.properties.target === element.id\r\n      );\r\n    });\r\n    if (eventsAttached.length > 0) {\r\n      eventsAttached.forEach((boundary) => {\r\n        boundary.properties.target = newId;\r\n      });\r\n    }\r\n  }\r\n\r\n  _checkTaskSchedule(element, elements, newId) {\r\n    if (element.elementType === Config.TASK) {\r\n      const tasks = getElementsOfType(Config.TASK, elements);\r\n      tasks.forEach((task) => {\r\n        if (task.scheduleTask && !task.scheduleSubprocessName) {\r\n          const { schedule } = task.properties;\r\n          const equalId = parseInt(element.id, 10) === parseInt(schedule.task, 10);\r\n          if (equalId) {\r\n            schedule.task = newId;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _attachConnectors(elements) {\r\n    elements.forEach((element) => {\r\n      if (element.elementType !== Config.WORKFLOW && element.elementType !== Config.CONNECTOR) {\r\n        element.properties.connectors = {\r\n          connectorsFrom: getConnectorsByFromTo(element, elements, 'from'),\r\n          connectorsTo: getConnectorsByFromTo(element, elements, 'to'),\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  _updateConnectors(element, newId) {\r\n    const { connectorsFrom, connectorsTo } = element.properties.connectors;\r\n    this._updateIdEachProperties('from', newId, connectorsFrom);\r\n    this._updateIdEachProperties('to', newId, connectorsTo);\r\n    console.log(element.properties);\r\n  }\r\n\r\n  _updateIdEachProperties(prop, newId, connectors) {\r\n    connectors.forEach((connector) => {\r\n      connector.properties[prop] = newId;\r\n      console.log(connector.properties);\r\n    });\r\n  }\r\n\r\n  _elementsIdRemapping(elements) {\r\n    // First attach connectors fro each elements\r\n    this._attachConnectors(elements);\r\n    console.log(elements);\r\n    let newId = Config.START_ID_REMAPPING;\r\n    let shortId = uniqueId();\r\n    const workflow = elements.find((w) => w.elementType === Config.WORKFLOW);\r\n    if (workflow) {\r\n      const prop = workflow.properties;\r\n      prop.packageId = shortId++;\r\n      prop.defaultPool.id = shortId++;\r\n      if (Config.ENV === 'Offline') {\r\n        prop.id = shortId++;\r\n        prop.defaultPool.processId = prop.id;\r\n      }\r\n      if (prop.documentation) prop.documentation.id = shortId++;\r\n    }\r\n    elements.forEach((element) => {\r\n      const { elementType, properties } = element;\r\n      if (elementType !== Config.WORKFLOW) {\r\n        const condition = elementType !== Config.POOL\r\n          && elementType !== Config.LANE\r\n          && elementType !== Config.DATA_INPUT\r\n          && elementType !== Config.DATA_OUTPUT\r\n          && elementType !== Config.DATA_OBJECT\r\n          && elementType !== Config.DATA_STORE\r\n          && elementType !== Config.GROUP\r\n          && elementType !== Config.TEXT\r\n          && elementType !== Config.CONNECTOR;\r\n\r\n        const { documentation } = properties;\r\n        if (documentation) {\r\n          documentation.id = shortId++;\r\n        }\r\n        // A connector don't have a connectors\r\n        if (elementType !== Config.CONNECTOR) {\r\n          this._updateConnectors(element, condition ? newId : shortId);\r\n        }\r\n        // Task is a only element that has an boundary events\r\n        if (elementType === Config.TASK) {\r\n          this._checkBoundaryEvents(elements, element, newId);\r\n        }\r\n        element.id = condition ? newId : shortId;\r\n        if (condition) {\r\n          newId++;\r\n        } else {\r\n          shortId++;\r\n        }\r\n      }\r\n    });\r\n    return [elements, shortId];\r\n  }\r\n\r\n  _existAnyParticipant(elements) {\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (this._isTask(element) && element.properties.groups) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _existAnyArtifact(elements) {\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (this._isArtifact(element)) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _existAnySubprocessEmbedded(elements) {\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (this._isSubprocess(element) && element.properties.type === 'embedded') return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _existAnyAssociation(elements) {\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      const { elementType } = element;\r\n      if (\r\n        elementType === Config.CONNECTOR\r\n        && element.properties.type === Config.CONNECTOR_TYPE_ASSOCIATION\r\n      ) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  buildXmlProcessMap() {\r\n    const [elementList, shortId] = this._elementsIdRemapping(cloneDeep(this.editor.elements));\r\n    let dataStoreId = shortId;\r\n    const root = this._getPackageElement();\r\n    let participants;\r\n    if (this._existAnyParticipant(elementList)) {\r\n      participants = this._getParticipantsElement(root);\r\n    }\r\n    const pools = this._getPoolsElement(root);\r\n    let associations;\r\n    let artifacts;\r\n    if (this._existAnyArtifact(elementList)) {\r\n      artifacts = this._getArtifactsElement(root);\r\n    }\r\n    if (this._existAnyAssociation(elementList)) {\r\n      associations = this._getAssociationsElement(root);\r\n    }\r\n    const datastores = this._getDataStoresElement(root);\r\n    const workflows = this._getWorkflowProcessesElement(root);\r\n    // Add deafult pool\r\n    const defaultPool = this._createPoolElement(pools, undefined, elementList);\r\n    this._createNodeGraphicsInfosElement(defaultPool, undefined);\r\n\r\n    // list of participants to avoid reduction of the associated element //\r\n    const participantsList = [];\r\n\r\n    const workflowProcess = this._getWorkflowProcessElement(workflows);\r\n    this._getProcessHeaderElement(workflowProcess);\r\n    let activitySets;\r\n    if (this._existAnySubprocessEmbedded(elementList)) {\r\n      activitySets = this._getActivitySetsElement(workflowProcess);\r\n    }\r\n    const activities = this._getActivitiesElement(workflowProcess);\r\n    const dataInputOutputs = this._getDataInputOutputs(workflowProcess, elementList);\r\n    const dataStoreReferences = this._getDataStoresReferencesElement(workflowProcess, elementList);\r\n    const transitions = this._getTransitionsElement(workflowProcess);\r\n    this._createtWorkflowProcessElement(workflowProcess, root, elementList);\r\n    const reusableProcess = [];\r\n\r\n    // identify first task\r\n    this._identifyFirstTask(elementList);\r\n\r\n    elementList.forEach((value) => {\r\n      let type = value.elementType;\r\n      if (this._isArtifact(value)) {\r\n        type = this.tagsTypes.Artifact;\r\n      }\r\n      if (this._isActivity(value)) {\r\n        type = this.tagsTypes.Activity;\r\n      }\r\n      if (this._isDataInput(value) || this._isDataOutput(value)) {\r\n        type = this.tagsTypes.DataInputOutput;\r\n      }\r\n      switch (type) {\r\n        case this.tagsTypes.Pool: {\r\n          const pool = this._createPoolElement(pools, value, elementList);\r\n          this._getLanesElement(pool, elementList);\r\n          this._createDocumentationElement(pool, value);\r\n          this._createNodeGraphicsInfosElement(pool, value);\r\n          break;\r\n        }\r\n        case this.tagsTypes.Artifact: {\r\n          const artifact = this._createArtifactAcoordingToType(artifacts, value);\r\n          this._createDocumentationElement(artifact, value);\r\n          this._createNodeGraphicsInfosElement(artifact, value);\r\n          break;\r\n        }\r\n        case this.tagsTypes.DataStore: {\r\n          const { datastore, newId } = this._createDataStoreElement(\r\n            datastores,\r\n            value,\r\n            dataStoreId++,\r\n          );\r\n          this._createDocumentationElement(datastore, value);\r\n          this._createDataStoreReference(dataStoreReferences, value, newId);\r\n          break;\r\n        }\r\n        case this.tagsTypes.Activity: {\r\n          const activity = this._createActivityAcoordingToType(\r\n            activities,\r\n            activitySets,\r\n            value,\r\n            participants,\r\n            participantsList,\r\n            reusableProcess,\r\n          );\r\n          this._createDocumentationElement(activity, value);\r\n          this._createNodeGraphicsInfosElement(activity, value);\r\n          break;\r\n        }\r\n        case this.tagsTypes.Connector: {\r\n          const connector = this._createConnectorAcoordingToType(associations, transitions, value);\r\n          this._createDocumentationElement(connector, value);\r\n          this._createConnectorGraphicsInfosElement(connector, value);\r\n          break;\r\n        }\r\n        case this.tagsTypes.DataInputOutput: {\r\n          const dataInputOuput = this._createDataInputOrOutputElement(dataInputOutputs, value);\r\n          this._createDocumentationElement(dataInputOuput, value);\r\n          this._createNodeGraphicsInfosElement(dataInputOuput, value);\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    // If exist any reusable process -> print more workflowprocess tag for each subprocess\r\n    if (reusableProcess.length > 0) {\r\n      reusableProcess.forEach((reusable) => {\r\n        const wReusableProcess = this._getWorkflowProcessElement(workflows);\r\n        const { subprocessId, name } = reusable;\r\n        wReusableProcess.att('Id', subprocessId);\r\n        wReusableProcess.att('Name', name);\r\n        this._getProcessHeaderElement(wReusableProcess);\r\n      });\r\n    }\r\n\r\n    return root.end({ pretty: true });\r\n  }\r\n\r\n  _identifyFirstTask(elementList) {\r\n    let startID = '';\r\n    const firstTasks = [];\r\n    elementList.forEach((value) => {\r\n      if (value._elementType === 'StartEvent') {\r\n        startID = value.id;\r\n      }\r\n    });\r\n\r\n    elementList.forEach((value) => {\r\n      if (value._elementType === 'Task') {\r\n        value._properties.connectors.connectorsTo.forEach((conn) => {\r\n          if (conn._fromEl && conn._fromEl.id === startID) {\r\n            console.log('tarea inicial');\r\n            value._properties.inFirsTask = true;\r\n            firstTasks.push(value.id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    elementList.forEach((value) => {\r\n      if (value._elementType === 'IntermediateEvent') {\r\n        const count = firstTasks.find((obj) => obj === value.target);\r\n        if (count) {\r\n          value._properties.inFirsTask = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _existsDataStores(elementList) {\r\n    const exists = elementList.filter((element) => {\r\n      return this._isDataStore(element);\r\n    });\r\n    return exists.length !== 0;\r\n  }\r\n\r\n  _getDataStoresReferencesElement(workflowProcess, elementList) {\r\n    if (this._existsDataStores(elementList)) {\r\n      return workflowProcess.ele(`${this.xpdl}DataStoreReferences`);\r\n    }\r\n    return workflowProcess;\r\n  }\r\n\r\n  _getLanesElement(pool, elementList) {\r\n    const lanes = this._getLaneList(elementList);\r\n    if (lanes !== undefined && lanes.length !== 0) {\r\n      const lanesElement = pool.ele('xpdl:Lanes');\r\n      lanes.forEach((value) => {\r\n        const lane = lanesElement.ele('xpdl:Lane', {\r\n          Id: value.properties.id,\r\n        });\r\n        if (Config.ENV !== 'Offline') lane.att('apia:ProEleDesignXML', this._getProEleDesignXML(value));\r\n        if (value.properties.name !== '') {\r\n          lane.att('Name', value.properties.name);\r\n        }\r\n        this._createDocumentationElement(lane, value);\r\n        this._createNodeGraphicsInfosElement(lane, value);\r\n      });\r\n    }\r\n    return pool;\r\n  }\r\n\r\n  _getDataInputOutputs(workflowProcess, elementList) {\r\n    if (this._existsDataStores(elementList)) {\r\n      return workflowProcess.ele(`${this.xpdl}DataInputOutputs`);\r\n    }\r\n    return workflowProcess;\r\n  }\r\n\r\n  _getTransitionsElement(workflowProcess) {\r\n    return workflowProcess.ele(`${this.xpdl}Transitions`);\r\n  }\r\n\r\n  _getAssociationsElement(root) {\r\n    return root.ele('xpdl:Associations');\r\n  }\r\n\r\n  getTransitionsElement(workflowProcess) {\r\n    return workflowProcess.ele('Transitions');\r\n  }\r\n\r\n  _getReferences() {\r\n    const ref = {\r\n      xmlns: 'http://www.statum.biz/2009/APIA.XPDL2.1',\r\n      xpdl: 'http://www.wfmc.org/2008/XPDL2.1',\r\n      apia: 'http://www.statum.biz/2009/APIA.XPDL2.1',\r\n      newVersion: 'http://www.apia.com/2020/VERSION',\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  _getProcessHeaderElement(workflow) {\r\n    return workflow.ele(`${this.xpdl}ProcessHeader`);\r\n  }\r\n\r\n  _getActivitySetsElement(workflow) {\r\n    return workflow.ele(`${this.xpdl}ActivitySets`);\r\n  }\r\n\r\n  _getPackageHeaderElement(packageEle) {\r\n    const date = new Date();\r\n    // const nameSpace = Config.ENV === 'Offline' ? this.xpdl : 'xpd:';\r\n    const header = packageEle.ele(`${this.xpdl}PackageHeader`);\r\n    header.ele(`${this.xpdl}XPDLVersion`, {}, '2.1');\r\n    header.ele(`${this.xpdl}Vendor`, {}, 'STATUM');\r\n    header.ele(`${this.xpdl}Created`, {}, date.toLocaleString());\r\n  }\r\n\r\n  _getPackageElement() {\r\n    const pack = this.builder.create(\r\n      `${this.xpdl}Package`,\r\n      {\r\n        enconding: 'UTF-8',\r\n        headless: true,\r\n      },\r\n      { noDoubleEncoding: true },\r\n    );\r\n    if (Config.ENV !== 'Offline') {\r\n      pack.att('xmlns', this._getReferences().xmlns);\r\n    } else {\r\n      this._getPackageHeaderElement(pack);\r\n    }\r\n    pack.att('xmlns:xpdl', this._getReferences().xpdl);\r\n    // To identify the new version of Facilis and draw the corresponding elements\r\n    pack.att('xmlns:edition', this._getReferences().newVersion);\r\n    // pack.att(\r\n    //   `xmlns:${Config.ENV === 'Offline' ? 'xpdl' : 'xpd'}`,\r\n    //   this._getReferences().xpdl,\r\n    // );\r\n    return pack;\r\n  }\r\n\r\n  _getParticipantsElement(root) {\r\n    return root.ele(`${this.xpdl}Participants`);\r\n  }\r\n\r\n  _getPoolsElement(root) {\r\n    // let strPools = 'Pools';\r\n    // if (Config.ENV !== 'Offline') {\r\n    //  strPools = 'xpdl:Pools';\r\n    // }\r\n    // return root.ele(`${this.xpdl}Pools`);\r\n    const strPools = 'xpdl:Pools'; // always is xpdl:Pools\r\n    return root.ele(strPools);\r\n  }\r\n\r\n  _getArtifactsElement(root) {\r\n    return root.ele(`${this.xpdl}Artifacts`);\r\n  }\r\n\r\n  _getProEleDesignXML(element) {\r\n    const xCoordinate = parseInt(this._getCoordinates(element).x, 10);\r\n    const yCoordinate = parseInt(this._getCoordinates(element).y, 10);\r\n    return `DESIGN y=${xCoordinate} x=${yCoordinate}`;\r\n  }\r\n\r\n  _getDataStoresElement(root) {\r\n    return root.ele(`${this.xpdl}DataStores`);\r\n  }\r\n\r\n  _getWorkflowProcessesElement(root) {\r\n    return root.ele(`${this.xpdl}WorkflowProcesses`);\r\n  }\r\n\r\n  _getActivitiesElement(workflow) {\r\n    return workflow.ele(`${this.xpdl}Activities`);\r\n  }\r\n\r\n  _getWorkflowProcessElement(workflows) {\r\n    return workflows.ele(`${this.xpdl}WorkflowProcess`);\r\n  }\r\n\r\n  _getImplementationElement(node) {\r\n    return node.ele(`${this.xpdl}Implementation`);\r\n  }\r\n\r\n  _getTaskTypeElement(task, element) {\r\n    const type = element.properties.taskType;\r\n    const tag = type.charAt(0).toUpperCase() + type.slice(1);\r\n    let taskType;\r\n    if (type !== 'none') {\r\n      taskType = task.ele(`${this.xpdl}Task${tag}`);\r\n      const tskTypeCondition = type === 'service' || type === 'receive' || type === 'send' || type === 'script';\r\n      if (tskTypeCondition && Config.ENV !== 'Offline') {\r\n        taskType.att('Implementation', 'WebService');\r\n      }\r\n      if (type === 'script' && Config.ENV !== 'Offline') {\r\n        taskType.ele(`${this.xpdl}${tag}`);\r\n      }\r\n    }\r\n    return taskType;\r\n  }\r\n\r\n  _getCoordinates(element = undefined) {\r\n    const coordinates = {};\r\n    if (element === undefined) {\r\n      coordinates.x = 0;\r\n      coordinates.y = 0;\r\n    } else {\r\n      coordinates.x = element.x;\r\n      coordinates.y = element.y;\r\n    }\r\n    return coordinates;\r\n  }\r\n\r\n  _getSize(element) {\r\n    let size = { width: 0, height: 0 };\r\n    if (element !== undefined) {\r\n      if (element.properties.size !== undefined) {\r\n        ({ size } = element.properties);\r\n      }\r\n    }\r\n    return size;\r\n  }\r\n\r\n  _getArtifactType(element) {\r\n    if (element.elementType === this.tagsTypes.TextAnnotation) {\r\n      return 'Annotation';\r\n    }\r\n    return element.elementType;\r\n  }\r\n\r\n  _getApiaExtensionsElement(node) {\r\n    return node.ele('ApiaExtensions');\r\n  }\r\n\r\n  _isDataStore(element) {\r\n    return element.elementType === this.tagsTypes.DataStore;\r\n  }\r\n\r\n  _isArtifact(element) {\r\n    return this._isDataObject(element) || this._isTextAnnotation(element) || this._isGroup(element);\r\n  }\r\n\r\n  _isActivity(element) {\r\n    return (\r\n      this._isEvent(element)\r\n      || this._isTask(element)\r\n      || this._isGateway(element)\r\n      || this._isSubprocess(element)\r\n    );\r\n  }\r\n\r\n  _isEvent(element) {\r\n    const type = element.elementType;\r\n    return (\r\n      type === `${this.tagsTypes.Start}Event`\r\n      || type === `${this.tagsTypes.End}Event`\r\n      || type === `${this.tagsTypes.Intermediate}Event`\r\n    );\r\n  }\r\n\r\n  _isLane(element) {\r\n    return element.elementType === this.tagsTypes.Lane;\r\n  }\r\n\r\n  _isTask(element) {\r\n    return element.elementType === this.tagsTypes.Task;\r\n  }\r\n\r\n  _isGateway(element) {\r\n    return element.elementType === this.tagsTypes.Gateway;\r\n  }\r\n\r\n  _isSubprocess(element) {\r\n    return element.elementType === this.tagsTypes.Subprocess;\r\n  }\r\n\r\n  _isDataObject(element) {\r\n    return element.elementType === this.tagsTypes.DataObject;\r\n  }\r\n\r\n  _isTextAnnotation(element) {\r\n    return element.elementType === 'TextAnnotation';\r\n  }\r\n\r\n  _isGroup(element) {\r\n    return element.elementType === this.tagsTypes.Group;\r\n  }\r\n\r\n  _isDataInput(element) {\r\n    return element.elementType === this.tagsTypes.DataInput;\r\n  }\r\n\r\n  _isDataOutput(element) {\r\n    return element.elementType === this.tagsTypes.DataOutput;\r\n  }\r\n\r\n  _fillInputOutputsList(elementList) {\r\n    const inputOutputs = elementList.filter((value) => {\r\n      return this._isDataInput(value) || this._isDataOutput(value);\r\n    });\r\n    return inputOutputs;\r\n  }\r\n\r\n  _filterWorkflowProcess(elementList) {\r\n    const workflow = elementList.find((value) => {\r\n      return value.elementType === this.tagsTypes.Workflow;\r\n    });\r\n    return workflow;\r\n  }\r\n\r\n  _createDataStoreReference(dataStoreReferences, element, newId) {\r\n    const props = element.properties;\r\n    const dataStoreRef = dataStoreReferences.ele('DataStoreReference', {\r\n      Id: props.id,\r\n      DataStoreRef: newId,\r\n      State: props.state,\r\n    });\r\n    this._createNodeGraphicsInfosElement(dataStoreRef, element);\r\n    return dataStoreRef;\r\n  }\r\n\r\n  _createDataInputOrOutputElement(dataInputOutputs, element) {\r\n    const props = element.properties;\r\n    const tag = this._isDataInput(element) ? `${this.xpdl}DataInput` : `${this.xpdl}DataOutput`;\r\n    const dataInputOuput = dataInputOutputs.ele(tag, {\r\n      Id: props.id,\r\n      Name: props.name,\r\n      IsCollection: props.collection,\r\n    });\r\n    if (Config.ENV !== 'Offline') {\r\n      dataInputOuput.att('apia:ProEleDesignXML', this._getProEleDesignXML(element));\r\n    }\r\n    if (props.state !== '') {\r\n      dataInputOuput.att('State', props.state);\r\n    }\r\n    return dataInputOuput;\r\n  }\r\n\r\n  _createCoordinateElement(node, point) {\r\n    return node.ele('xpdl:Coordinates', {\r\n      YCoordinate: point.y,\r\n      XCoordinate: point.x,\r\n    });\r\n  }\r\n\r\n  _createConnectorGraphicsInfosElement(connector, element) {\r\n    const { points } = element.properties || [];\r\n    if (points) {\r\n      const graphicsInfo = connector\r\n        .ele('xpdl:ConnectorGraphicsInfos')\r\n        .ele('xpdl:ConnectorGraphicsInfo');\r\n      points.forEach((value) => {\r\n        this._createCoordinateElement(graphicsInfo, value);\r\n      });\r\n    }\r\n    return connector;\r\n  }\r\n\r\n  _createExpressionConditionFragment(connector, props) {\r\n    if (props.expression !== '') {\r\n      const condition = connector.ele(`${this.xpdl}Condition`, {\r\n        type: 'CONDITION',\r\n      });\r\n      const expression = condition.ele(`${this.xpdl}Expression`);\r\n      // const expressionText = escape(props.expression);\r\n      expression.text(props.expression);\r\n    }\r\n    return connector;\r\n  }\r\n\r\n  _createConnectorAcoordingToType(associations, transitions, element) {\r\n    const props = element.properties;\r\n    const { type } = props;\r\n    let connector = null;\r\n    const typeClass = Config.ENV === 'Offline' ? 'Type' : 'apia:Type';\r\n    if (type === 'transition') {\r\n      connector = transitions.ele(`${this.xpdl}Transition`, {\r\n        Id: props.id,\r\n        From: props.from,\r\n        To: props.to,\r\n      });\r\n      connector.att(typeClass, props.class);\r\n      if (props.kind === 'expression' && props.expression) {\r\n        this._createExpressionConditionFragment(connector, props);\r\n      }\r\n    } else {\r\n      const direction = props.direction.charAt(0).toUpperCase() + props.direction.slice(1);\r\n      connector = associations.ele('xpdl:Association', {\r\n        Id: props.id,\r\n        Target: props.to,\r\n        Source: props.from,\r\n        AssociationDirection:\r\n          // direction === 'Directional' && Config.ENV === 'Offline' ? 'From' : direction,\r\n          direction === 'Directional' ? 'From' : direction,\r\n      });\r\n    }\r\n    if (props.name !== '') connector.att('Name', props.name);\r\n    if (props.executionOrder) connector.att('apia:ExecutionOrder', props.executionOrder);\r\n    return connector;\r\n  }\r\n\r\n  _createRoleRefElement(task, element) {\r\n    if (element.properties.role !== undefined && element.properties.role.id !== undefined) {\r\n      return task.ele(`${this.xpdl}RoleRef`, {\r\n        'apia:RoleId': element.properties.role.id,\r\n        'apia:RoleName': element.properties.role.name,\r\n      });\r\n    }\r\n    return task;\r\n  }\r\n\r\n  _createPoolElement(root, element = undefined, elementsList = []) {\r\n    const props = element !== undefined ? element.properties : {};\r\n    const [workflow] = getElementsOfType(Config.WORKFLOW, elementsList);\r\n    const { id } = workflow.properties.defaultPool;\r\n\r\n    // let poolStr = 'Pool';\r\n    // if (Config.ENV !== 'Offline') {\r\n    //  poolStr = 'xpdl:Pool';\r\n    // }\r\n    const poolStr = 'xpdl:Pool';\r\n\r\n    // const pool = root.ele(`${this.xpdl}Pool`, {\r\n    const pool = root.ele(poolStr, {\r\n      Id: element ? props.id : id,\r\n      BoundaryVisible: !(element === undefined),\r\n      Orientation: 'HORIZONTAL',\r\n    });\r\n    pool.att('Process', workflow.properties.id);\r\n\r\n    if (Config.ENV !== 'Offline') {\r\n      pool.att('apia:ProEleDesignXML', this._getProEleDesignXML(element));\r\n      pool.att('xmlns:apia', this._getReferences().apia);\r\n    }\r\n    if (element === undefined) {\r\n      pool.att('MainPool', true);\r\n    } else {\r\n      pool.att('Name', props.name);\r\n    }\r\n    return pool;\r\n  }\r\n\r\n  _createtWorkflowProcessElement(workflow, root, elementList) {\r\n    elementList.forEach((value) => {\r\n      if (value.elementType === 'Workflow') {\r\n        workflow.att('Id', value.properties.id);\r\n        if (Config.ENV !== 'Offline') {\r\n          workflow.att('apia:ProAction', value.properties.proAction);\r\n          workflow.att('xmlns:apia', this._getReferences().apia);\r\n          const { proId, versionId } = value.properties;\r\n          if (proId) workflow.att('apia:ProId', proId);\r\n          if (versionId) workflow.att('apia:ProVerId', versionId);\r\n        }\r\n        if (Config.ENV === 'Offline' && value.properties.name) {\r\n          workflow.att('Name', value.properties.name);\r\n        }\r\n        if (Config.ENV !== 'Offline') this._createApiaProcEventsElement(workflow, value);\r\n        this._createDocumentationElement(workflow, value);\r\n        root.att('Id', value.properties.packageId);\r\n      }\r\n    });\r\n    return workflow;\r\n  }\r\n\r\n  _createArtifactElement(artifacts, element) {\r\n    const artifact = artifacts.ele(`${this.xpdl}Artifact`, {\r\n      Id: element.properties.id,\r\n      ArtifactType: this._getArtifactType(element),\r\n    });\r\n    if (Config.ENV !== 'Offline') {\r\n      artifact.att('apia:ProEleDesignXML', this._getProEleDesignXML(element));\r\n      artifact.att('xmlns:apia', this._getReferences().apia);\r\n    }\r\n    return artifact;\r\n  }\r\n\r\n  _createArtifactAcoordingToType(artifacts, element) {\r\n    const artifact = this._createArtifactElement(artifacts, element);\r\n    const artifactType = element.elementType;\r\n    switch (artifactType) {\r\n      case this.tagsTypes.DataObject: {\r\n        this._createDataObjectElement(artifact, element);\r\n        artifact.att('Name', element.properties.name);\r\n        break;\r\n      }\r\n      case this.tagsTypes.Group: {\r\n        artifact.att('Group', element.properties.name);\r\n        artifact.att('Name', element.properties.name);\r\n        break;\r\n      }\r\n      case this.tagsTypes.TextAnnotation: {\r\n        artifact.att('TextAnnotation', element.properties.text);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    return artifact;\r\n  }\r\n\r\n  _createDataObjectElement(artifact, element) {\r\n    const dataObject = artifact.ele(`${this.xpdl}DataObject`, {\r\n      Id: element.properties.id,\r\n      Name: element.properties.name,\r\n      IsCollection: element.properties.collection,\r\n    });\r\n    if (element.properties.state) dataObject.att('State', element.properties.state);\r\n    return dataObject;\r\n  }\r\n\r\n  _createDocumentationElement(node, element) {\r\n    const documentationObj = element.properties.documentation || {};\r\n    const { elementType } = element;\r\n    const condition = Config.ENV === 'Offline' && (elementType === Config.WORKFLOW || elementType === Config.TASK);\r\n    const props = element.properties;\r\n    if (\r\n      (documentationObj.text !== '' && documentationObj.text)\r\n      || (condition && (props.forms !== undefined || props.events !== undefined))\r\n    ) {\r\n      const documentationEle = node\r\n        .ele(`${this.xpdl}Object`, {\r\n          Id: documentationObj.id || this.editor.idIndex++,\r\n        })\r\n        .ele(`${this.xpdl}Documentation`);\r\n      if (\r\n        Config.ENV === 'Offline'\r\n        && (elementType === Config.WORKFLOW || elementType === Config.TASK)\r\n      ) {\r\n        const extractor = new Extractor([]);\r\n        const { documentation, forms, events } = extractor.writeExtract(this.builder, element);\r\n        documentationEle.text(`${documentation || ''}${forms || ''}${events || ''}`);\r\n      } else if (documentationObj.text && documentationObj.text !== '') {\r\n        documentationEle.text(documentationObj.text);\r\n      }\r\n      return documentationEle;\r\n    }\r\n    return node;\r\n  }\r\n\r\n  _createNodeGraphicsInfosElement(node, element) {\r\n    const coordinate = this._getCoordinates(element);\r\n    const size = this._getSize(element);\r\n    const nodeGraphicInfos = node.ele('xpdl:NodeGraphicsInfos');\r\n    const graphicInfo = nodeGraphicInfos.ele('xpdl:NodeGraphicsInfo', {\r\n      Height: size.height || (element ? element.height - 10 : 0),\r\n      Width: size.width || (element ? element.width - 10 : 0),\r\n    });\r\n    if (element) {\r\n      const { elementType, properties } = element;\r\n      if (\r\n        (elementType === Config.TASK || elementType === Config.SUBPROCESS)\r\n        && element.properties.color\r\n        && ((element.properties.color !== Config.DEFAULT_SUBP_COLOR\r\n          && elementType === Config.SUBPROCESS)\r\n          || (element.properties.color !== Config.DEFAULT_TASK_COLOR && elementType === Config.TASK))\r\n      ) {\r\n        graphicInfo.att('FillColor', properties.color);\r\n      }\r\n    }\r\n    this._createCoordinateElement(graphicInfo, coordinate);\r\n    return nodeGraphicInfos;\r\n  }\r\n\r\n  _createDataStoreElement(datastores, element, newId) {\r\n    const { name, capacity, unlimit } = element.properties;\r\n    const datastore = datastores.ele(`${this.xpdl}DataStore`, {\r\n      Id: newId,\r\n      Name: name,\r\n      IsUnlimited: unlimit,\r\n    });\r\n    if (capacity) {\r\n      datastore.att('Capacity', capacity);\r\n    }\r\n    return { datastore, newId };\r\n  }\r\n\r\n  _createApiaProcEventsBusClaParBindingsElement(apiaProEvent, bindings) {\r\n    const busClaParBindings = apiaProEvent.ele('BusClaParBindings');\r\n    bindings.forEach((binding) => {\r\n      const bindingValue = binding.busClaParBndValue || '';\r\n      const bindingAttr = binding.attId || -1;\r\n      if (bindingValue !== '' || bindingAttr !== -1) {\r\n        const busClaParBinding = busClaParBindings.ele('BusClaParBinding', {\r\n          BusClaParId: binding.busClaParId,\r\n          BusClaParName: binding.busClaParName,\r\n          BusClaParType: binding.busClaParType,\r\n          BusClaParBndValue: binding.busClaParBndValue,\r\n          // BusClaParBndType: binding.busClaParBndType, //BusClaParBndValue\r\n        });\r\n        if (binding.busClaParBndType === 'V') {\r\n          let binValue = binding.busClaParBndValue || '';\r\n          if (binding.busClaParType === 'D' && binValue !== '') {\r\n            const arrDte = binValue.split('-');\r\n            const dte = new Date(arrDte[0], arrDte[1] - 1, arrDte[2]);\r\n            binValue = format.asString(Config.DATE_FORMAT, dte);\r\n          }\r\n          busClaParBinding.att('BusClaParBndType', 'V');\r\n          busClaParBinding.att('BusClaParBndValue', binValue);\r\n        } else {\r\n          busClaParBinding.att('AttId', binding.attId);\r\n          busClaParBinding.att('AttTooltip', binding.attTooltip);\r\n          busClaParBinding.att('AttName', binding.attName);\r\n          busClaParBinding.att('BusClaParBndType', binding.busClaParBndType);\r\n        }\r\n      }\r\n    });\r\n    return busClaParBindings;\r\n  }\r\n\r\n  _createApiaProcEventsElement(workflow, element) {\r\n    const { events } = element;\r\n    if (events !== undefined && events.length !== 0) {\r\n      const apiaProEvents = workflow.ele('ApiaProEvents');\r\n      events.forEach((value) => {\r\n        const apiaProEvent = apiaProEvents.ele('ApiaProEvent', {\r\n          EvtId: value.eventId,\r\n          BusClaId: value.busClaId,\r\n          EvtName: value.name,\r\n          BusClaName: value.busClaName,\r\n          ProEvtBusClaExecOrder: value.order,\r\n        });\r\n        if (value.condition && value.condition !== '') apiaProEvent.att('SkipCond', value.condition);\r\n        const bindings = value.bindings || [];\r\n        if (value.bindings.length > 0) {\r\n          this._createApiaProcEventsBusClaParBindingsElement(apiaProEvent, bindings);\r\n        }\r\n        return apiaProEvents;\r\n      });\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _refactorNumberDate(number) {\r\n    return number < 10 ? `0${number}` : number;\r\n  }\r\n\r\n  // _toDateString(date) {\r\n  //   const year = date.getFullYear();\r\n  //   const month = this._refactorNumberDate(date.getMonth());\r\n  //   const day = this._refactorNumberDate(date.getDay());\r\n  //   const hours = this._refactorNumberDate(date.getHours());\r\n  //   const minutes = this._refactorNumberDate(date.getMinutes());\r\n  //   const seconds = this._refactorNumberDate(date.getSeconds());\r\n  //   return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\r\n  // }\r\n\r\n  _createEventAcoordingToType(activity, element) {\r\n    const event = activity.ele(`${this.xpdl}Event`);\r\n    const { type, isAttached, target } = element.properties;\r\n    const typeEvent = event.ele(`${this.xpdl}${element.elementType}`);\r\n    if (element.elementType === 'EndEvent') {\r\n      typeEvent.att('Result', type.charAt(0).toUpperCase() + type.slice(1));\r\n    } else {\r\n      typeEvent.att('Trigger', type.charAt(0).toUpperCase() + type.slice(1));\r\n    }\r\n    if (element.properties.implementation !== undefined) {\r\n      typeEvent.att('Implementation', element.properties.implementation);\r\n    }\r\n    if (isAttached && target) {\r\n      if (Config.ENV !== 'Offline') typeEvent.att('apia:IsAttached', isAttached);\r\n      typeEvent.att('Target', target);\r\n    }\r\n\r\n    if (\r\n      !element.properties.message\r\n      && element.elementType === 'EndEvent'\r\n      && element.properties.events\r\n      && element.properties.events.length > 1\r\n      && type === 'message'\r\n    ) {\r\n      element.properties.message = { catchThrow: 'throw' };\r\n    }\r\n\r\n    if (Config.ENV !== 'Offline' && (element.properties[type] || type === 'multiple')) {\r\n      if (type === 'timer' || type === 'multiple') {\r\n        console.log(type);\r\n        const attr = {\r\n          'xmlns:apia': this._getReferences().apia,\r\n          'apia:TimerAttType': 'P',\r\n        };\r\n        if (element.properties.timer) {\r\n          if (element.properties.timer.attribute) {\r\n            const { attribute } = element.properties.timer;\r\n            attr['apia:TimerAttId'] = attribute.id;\r\n            attr['apia:TimerAttName'] = attribute.name;\r\n            attr['apia:TimerAttType'] = attribute.type.toUpperCase().charAt(0);\r\n          }\r\n          const date = element.properties.timer.date || {};\r\n          if (\r\n            date.start\r\n            && (element.elementType === Config.START_EVENT\r\n              || element.elementType === Config.INTERMEDIATE_EVENT)\r\n          ) {\r\n            const { start } = element.properties.timer.date;\r\n            attr.TimeDate = format.asString('yyyy/MM/dd hh:mm:ss', start);\r\n          }\r\n          if (element.properties.timer.frequency) {\r\n            const { unit, value } = element.properties.timer.frequency;\r\n            attr['apia:TimeUnit'] = unit;\r\n            attr.TimeCycle = value;\r\n          }\r\n          if (element.elementType === Config.START_EVENT && date.end) {\r\n            const { end } = element.properties.timer.date;\r\n            attr['apia:EndDate'] = format.asString('yyyy/MM/dd hh:mm:ss', end);\r\n          }\r\n          if (attr['apia:EndDate'] || attr.TimeDate) {\r\n            attr['apia:TimeUnit'] = 'Milliseconds';\r\n          }\r\n          typeEvent.ele(`${this.xpdl}TriggerTimer`, attr);\r\n        }\r\n      }\r\n      if (type === 'message' || type === 'multiple') {\r\n        const message = typeEvent.ele(`${this.xpdl}TriggerResultMessage`);\r\n        if (element.properties.message.catchThrow) {\r\n          message.att('CatchThrow', element.properties.message.catchThrow.toUpperCase());\r\n        }\r\n        if (Config.ENV !== 'Offline') {\r\n          message.ele('ApiaExtensions');\r\n          this._createWebServiceMappingElement(message, element);\r\n          this._createApiaEventsElement(event, element);\r\n        }\r\n      }\r\n    }\r\n    this._createTransitionsRefElement(activity, element);\r\n    return event;\r\n  }\r\n\r\n  _getAllTransitionConnectors() {\r\n    const { elements } = this.editor;\r\n    const connectors = [];\r\n    for (let index = 0; index < elements.length; index++) {\r\n      const element = elements[index];\r\n      if (element.elementType === Config.CONNECTOR) {\r\n        if (element.type === Config.CONNECTOR_TYPE_TRANSITION) {\r\n          connectors.push(element);\r\n        }\r\n      }\r\n    }\r\n    return connectors;\r\n  }\r\n\r\n  _isIdealElementToHaveTransitionRef(element) {\r\n    const type = element.elementType;\r\n    return (\r\n      type === Config.TASK\r\n      || type === Config.START_EVENT\r\n      || type === Config.END_EVENT\r\n      || type === Config.INTERMEDIATE_EVENT\r\n      || type === Config.SUBPROCESS\r\n      || type === Config.GATEWAY\r\n    );\r\n  }\r\n\r\n  _getTransitionArrayFromElements(element) {\r\n    const transitions = [];\r\n    const connectors = this._getAllTransitionConnectors();\r\n    if (this._isIdealElementToHaveTransitionRef(element)) {\r\n      connectors.forEach((connector) => {\r\n        if (connector.from === element.id) {\r\n          transitions.push(connector.id);\r\n        }\r\n      });\r\n    }\r\n    if (transitions.length < 2) return [];\r\n    return transitions;\r\n  }\r\n\r\n  _createTransitionsRefElement(node, element) {\r\n    const transitions = this._getTransitionArrayFromElements(element);\r\n    // const { type } = element.properties;\r\n    if (transitions.length > 1) {\r\n      const splitType = 'Parallel';\r\n      // if (type !== undefined) splitType = type.charAt(0).toUpperCase() + type.slice(1);\r\n      // if (this._isEvent(element)) splitType = 'Paralell';\r\n      if (transitions !== undefined) {\r\n        const transitionRefs = node\r\n          .ele(`${this.xpdl}TransitionRestrictions`)\r\n          .ele(`${this.xpdl}TransitionRestriction`)\r\n          .ele(`${this.xpdl}Split`, {\r\n            Type: splitType,\r\n          })\r\n          .ele(`${this.xpdl}TransitionRefs`);\r\n        transitions.forEach((value) => {\r\n          transitionRefs.ele(`${this.xpdl}TransitionRef`, {\r\n            Id: value,\r\n          });\r\n        });\r\n        return transitionRefs;\r\n      }\r\n    }\r\n    return node;\r\n  }\r\n\r\n  _createWebServiceMappingElement(message, element) {\r\n    const messageProps = element.properties.message;\r\n    if (\r\n      messageProps.webService !== undefined\r\n      && (messageProps.attrEnt !== undefined || messageProps.attrProc !== undefined)\r\n      && (messageProps.attrEnt !== [] || messageProps.attrProc !== [])\r\n    ) {\r\n      const tagType = element._elementType === 'IntermediateEvent' && !element._properties.inFirsTask\r\n        ? 'WEBSERVICE_TSK'\r\n        : 'WEBSERVICE_PRO';\r\n      const tagTypeAttribute = element._elementType === 'IntermediateEvent' && !element._properties.inFirsTask\r\n        ? 'WS_ATTRIBUTE_TSK'\r\n        : 'WS_ATTRIBUTE_PRO';\r\n      const webServiceMapping = message.ele('WebServiceMapping');\r\n      const webServicePro = webServiceMapping.ele(tagType, {\r\n        ws_method_name: messageProps.webService,\r\n      });\r\n      messageProps.attrProc = messageProps.attrProc || [];\r\n      messageProps.attrEnt = messageProps.attrEnt || [];\r\n      const both = messageProps.attrEnt.concat(messageProps.attrProc);\r\n      both.forEach((value) => {\r\n        webServicePro.ele(tagTypeAttribute, {\r\n          name: value.name,\r\n          attribute_uk: value.uk ? 'T' : 'F',\r\n          multivalued: value.multivalued ? 'T' : 'F',\r\n          attribute_id: value.id,\r\n          attribute_type: value.type,\r\n        });\r\n      });\r\n      return webServicePro;\r\n    }\r\n    return message;\r\n  }\r\n\r\n  _createActivityElement(activities, element) {\r\n    const {\r\n      name, id, proId, versionId, proEleId,\r\n    } = element.properties.activity;\r\n    const nameValue = name !== '' && name !== undefined ? name : element.properties.name;\r\n    const activity = activities.ele(`${this.xpdl}Activity`, {\r\n      Id: id,\r\n    });\r\n    const isConectedApia = Config.ENV !== 'Offline';\r\n    if (nameValue !== '') activity.att('Name', nameValue);\r\n    if (isConectedApia) activity.att('apia:ProEleDesignXML', this._getProEleDesignXML(element));\r\n    if (proEleId && isConectedApia && element.elementType === Config.TASK) {\r\n      activity.att('apia:ProEleId', proEleId);\r\n    }\r\n    if (proId && isConectedApia) activity.att('apia:ProId', proId);\r\n    if (versionId && isConectedApia) activity.att('apia:ProVerId', versionId);\r\n    return activity;\r\n  }\r\n\r\n  _createGatewayAcoordingToType(activity, element) {\r\n    const { type } = element.properties;\r\n    const gateway = activity.ele(`${this.xpdl}Route`, {\r\n      GatewayType: type.charAt(0).toUpperCase() + type.slice(1),\r\n      MarkerVisible: element.properties.visible || true,\r\n    });\r\n    const execution = element.properties.executionType;\r\n    if (execution && Config.ENV !== 'Offline') {\r\n      gateway.att('apia:ExecutionType', execution.replace(/^./, execution[0].toUpperCase()));\r\n    }\r\n    if (type === 'exclusive') gateway.att('ExlusiveType', 'Data');\r\n    this._createTransitionsRefElement(activity, element);\r\n    return gateway;\r\n  }\r\n\r\n  _createSubprocessAcoordingToType(activity, activitySets, element, reusableProcess) {\r\n    const { type } = element.properties;\r\n    let tagType = '';\r\n    let props = {};\r\n    if (type === 'embedded') {\r\n      tagType = `${this.xpdl}BlockActivity`;\r\n      props = {\r\n        ActivitySetId: element.properties.activitySetId,\r\n      };\r\n      activitySets.ele(`${this.xpdl}ActivitySet`, {\r\n        Id: props.ActivitySetId,\r\n        Name: element.properties.name,\r\n      });\r\n      activity.ele(tagType, props);\r\n    } else {\r\n      tagType = `${this.xpdl}SubFlow`;\r\n      const { reusable, subprocessId, name } = element.properties;\r\n      reusableProcess.push({ subprocessId, name });\r\n      props = {\r\n        Id: subprocessId,\r\n        Name: name,\r\n      };\r\n      if (reusable && Config.ENV !== 'Offline') {\r\n        const sync = reusable.execution === 'synchronized' ? 'SYNCHR' : 'ASYNCHR';\r\n        props = {\r\n          ...props,\r\n          'apia:ProEleAttBusEntId': reusable.entityId,\r\n          'apia:ProEleAttBusEntName': reusable.entityAttrName,\r\n          'apia:ApiaExecution': reusable.skipFirst ? `${sync}_SKIP` : sync,\r\n        };\r\n        if (reusable.skipFirst) props['apia:SkipFirstTask'] = reusable.skipFirst;\r\n      }\r\n      const subflow = this._getImplementationElement(activity).ele(tagType, props);\r\n      this._createFormRefsElement(subflow, element);\r\n    }\r\n    this._createTransitionsRefElement(activity, element);\r\n    this._createLoopElement(activity, element);\r\n    return activity;\r\n  }\r\n\r\n  _createForm(node, forms, element, step) {\r\n    forms.forEach((value) => {\r\n      const formRef = node.ele('FormRef', {\r\n        ProEleFrmStepId: step,\r\n      });\r\n\r\n      formRef.att('ProEleFrmOrder', value.order);\r\n      formRef.att('FrmType', value.formType);\r\n      formRef.att('FrmName', value.name);\r\n      formRef.att('FrmId', value.id);\r\n      if (element.elementType === this.tagsTypes.Task) {\r\n        formRef.att('ProEleFrmReadOnly', value.readOnly);\r\n        formRef.att('ProEleFrmMultiply', value.multiply);\r\n      }\r\n      const condition = value.condition || '';\r\n      const conditionDoc = value.conditionDoc || '';\r\n      if (conditionDoc !== '') formRef.att('ConditionDoc', value.conditionDoc);\r\n      if (condition !== '') formRef.att('ProEleFrmEvalCond', value.condition);\r\n    });\r\n    return node;\r\n  }\r\n\r\n  _createFormRefsElement(node, element) {\r\n    const props = element.properties;\r\n    let { forms } = props || [];\r\n    if (this._isSubprocess(element) && props.reusable) {\r\n      forms = props.reusable.forms;\r\n    }\r\n    if (forms !== undefined) {\r\n      const formRefs = node.ele(`${this.xpdl}FormsRef`);\r\n      let count = 1;\r\n      forms.forEach((value) => {\r\n        if (this._isSubprocess(element)) {\r\n          const formRef = formRefs.ele(`${this.xpdl}FormRef`, {\r\n            ProEleFrmStepId: count++,\r\n          });\r\n          formRef.att('ProEleFrmOrder', value.order);\r\n          formRef.att('FrmType', value.formType);\r\n          formRef.att('FrmName', value.name);\r\n          formRef.att('FrmId', value.id);\r\n        } else {\r\n          const entityForms = value.EForms || [];\r\n          const processForms = value.PForms || [];\r\n          const formsJoin = entityForms.concat(processForms);\r\n          // console.log(formsJoin);\r\n          this._createForm(formRefs, formsJoin, element, count);\r\n          count++;\r\n        }\r\n      });\r\n    }\r\n    return node;\r\n  }\r\n\r\n  _getDefaultApiaEvent() {\r\n    return {\r\n      eventId: 11,\r\n      busClaId: 102,\r\n      WS: false,\r\n      order: 0,\r\n      name: 'ONREADY',\r\n      busClaName: 'BPMNAutoComplete',\r\n    };\r\n  }\r\n\r\n  _createApiaEventsElement(node, element) {\r\n    const props = element.properties;\r\n    let events = props.events || [];\r\n    const { outputMessageRef, taskType } = props || {};\r\n    if (taskType === 'script' && events.length === 0) {\r\n      events.push(this._getDefaultApiaEvent());\r\n    }\r\n    if (outputMessageRef) events = events.concat(outputMessageRef);\r\n    if (events !== undefined) {\r\n      const apiaEvents = node.ele('ApiaEvents');\r\n      events.forEach((value) => {\r\n        const attr = {\r\n          EvtId: value.eventId,\r\n          BusClaId: value.busClaId,\r\n          BusClaName: value.busClaName,\r\n          EvtName: value.name,\r\n          ProEleEvtBusClaExecOrder: value.order,\r\n        };\r\n        if (value.condition !== '') {\r\n          attr.SkipCond = value.condition;\r\n        }\r\n        if (value.WS) attr.WS = value.WS;\r\n        const eventEl = apiaEvents.ele('ApiaEvent', attr);\r\n        const { bindings } = value || [];\r\n        if (bindings !== undefined) {\r\n          const bindingsEl = eventEl.ele('BusClaParBindings');\r\n          bindings.forEach((bin) => {\r\n            const binValue = bin.busClaParBndValue || '';\r\n            const binAttr = bin.attId || -1;\r\n            if (binValue !== '' || binAttr !== -1) {\r\n              let bindingAttr = {\r\n                BusClaParName: bin.busClaParName,\r\n                BusClaParId: bin.busClaParId,\r\n                BusClaParType: bin.busClaParType,\r\n                AttTooltip: bin.attTooltip,\r\n                BusClaParBndValue: bin.busClaParBndValue,\r\n                BusClaParBndType: bin.busClaParBndType,\r\n                AttName: bin.attName,\r\n                AttId: bin.attId,\r\n              };\r\n              if (bindingAttr.BusClaParType === 'D' && binValue !== '') {\r\n                const arrDte = binValue.split('-');\r\n                const dte = new Date(arrDte[0], arrDte[1] - 1, arrDte[2]);\r\n                bindingAttr.BusClaParBndValue = format.asString(Config.DATE_FORMAT, dte);\r\n              }\r\n              const isEntity = bindingAttr.busClaParBndType === 'E';\r\n              const isProcess = bindingAttr.busClaParBndType === 'P';\r\n              if ((isProcess || isEntity) && bindingAttr.AttId === -1) {\r\n                bindingAttr = {\r\n                  ...this._deleteAttrProperties(bindingAttr),\r\n                  BusClaParBndType: 'V',\r\n                  BusClaParBndValue: '',\r\n                };\r\n              }\r\n              bindingsEl.ele('BusClaParBinding', bindingAttr);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return node;\r\n  }\r\n\r\n  _deleteAttrProperties(binding) {\r\n    delete binding.AttTooltip;\r\n    delete binding.AttName;\r\n    delete binding.AttId;\r\n    return binding;\r\n  }\r\n\r\n  _createLoopElement(activity, element) {\r\n    const props = element.properties;\r\n    const { loopType } = props;\r\n    if (loopType === 'multiinstance' || loopType === 'standard') {\r\n      const loopName = 'Loop';\r\n      const loop = activity.ele(`${this.xpdl}${loopName}`);\r\n      let tagType = '';\r\n      if (props.loopType === 'standard') {\r\n        tagType = 'Standard';\r\n\r\n        if (!props.standard) {\r\n          props.standard = {};\r\n        }\r\n        const standard = loop.ele(`${this.xpdl}${loopName}${tagType}`, {\r\n          TestTime: props.standard.testTime || 'After',\r\n        });\r\n        if (props.standard.condition !== '') standard.att('LoopCondition', props.standard.condition);\r\n        if (props.standard.conditionDoc !== '') standard.att('apia:ConditionDoc', props.standard.conditionDoc);\r\n      } else if (props.loopType === 'multiinstance') {\r\n        tagType = 'MultiInstance';\r\n        const multiInstance = loop.ele(`${this.xpdl}${loopName}${tagType}`);\r\n        multiInstance.att('MI_FlowCondition', 'All');\r\n        multiInstance.att('MI_Ordering', 'Parallel');\r\n        const multi = props.multiInstance || {};\r\n        if (multi.attribute !== '' && Config.ENV !== 'Offline') {\r\n          multiInstance.att('apia:MultiplierAttName', multi.attribute);\r\n          multiInstance.att('apia:MultiplierAttId', multi.attributeId);\r\n        }\r\n        if (props.multiplyCount || multi.value) multiInstance.att('MI_Condition', props.multiplyCount || multi.value);\r\n      }\r\n      loop.att('LoopType', tagType);\r\n    }\r\n    return activity;\r\n  }\r\n\r\n  _participantExist(participant, participantsList) {\r\n    return participantsList.find((element) => element.id === participant.id);\r\n  }\r\n\r\n  _getDefaultPerformer() {\r\n    return {\r\n      id: 2,\r\n      name: 'busClass',\r\n    };\r\n  }\r\n\r\n  createPerformersElement(activity, element, participants, participantsList) {\r\n    const props = element.properties;\r\n    const { taskType } = props;\r\n    const tskTypeCondition = taskType === 'service'\r\n      || taskType === 'receive'\r\n      || taskType === 'send'\r\n      || taskType === 'script';\r\n    if (props.groups !== undefined || (tskTypeCondition && Config.ENV !== 'Offline')) {\r\n      const performers = activity.ele(`${this.xpdl}Performers`);\r\n      const groups = props.groups || [];\r\n      if (tskTypeCondition && groups.length === 0 && Config.ENV !== 'Offline') {\r\n        groups.push(this._getDefaultPerformer());\r\n      }\r\n      groups.forEach((value) => {\r\n        let attrs;\r\n        if (Config.ENV !== 'Offline') {\r\n          attrs = {\r\n            'apia:PerfId': value.id,\r\n            'apia:PerfName': value.name,\r\n          };\r\n        }\r\n        if (value.conditionDoc) attrs['apia:ConditionDoc'] = value.conditionDoc;\r\n        if (value.condition) attrs['apia:ProElePerfEvalCond'] = value.condition;\r\n        if (Config.ENV !== 'Offline') {\r\n          performers.ele(`${this.xpdl}Performer`, attrs);\r\n        } else {\r\n          performers.ele(`${this.xpdl}Performer`, value.id);\r\n        }\r\n        if (value.name !== 'busClass' && !this._participantExist(value, participantsList)) {\r\n          participantsList.push(value);\r\n          const participantType = `${this.xpdl}ParticipantType`;\r\n          participants\r\n            .ele(`${this.xpdl}Participant`, {\r\n              Id: value.id,\r\n              Name: value.name,\r\n            })\r\n            .ele(participantType, { Type: 'ROLE' });\r\n        }\r\n      });\r\n    }\r\n    return activity;\r\n  }\r\n\r\n  _createApiaTaskStates(task, element) {\r\n    const { states } = element.properties || [];\r\n    if (states !== undefined) {\r\n      const apiaStates = task.ele('ApiaTskStates');\r\n      states.forEach((value) => {\r\n        const tag = apiaStates.ele('ApiaTskState', {\r\n          EvtName: value.event,\r\n          EntStaId: value.idName,\r\n          EvtId: value.idEvent,\r\n          StaName: value.name,\r\n        });\r\n        if (value.condition !== '') {\r\n          tag.att('ProEleBusEntStaEvalCond', value.condition);\r\n        }\r\n        if (value.conditionDoc !== '') {\r\n          tag.att('ConditionDoc', value.conditionDoc);\r\n        }\r\n      });\r\n    }\r\n    return task;\r\n  }\r\n\r\n  _createTaskAcoordingToType(activity, element, participants, participantsList) {\r\n    const props = element.properties;\r\n    const implementation = this._getImplementationElement(activity);\r\n    const offline = Config.ENV === 'Offline';\r\n    const task = offline\r\n      ? implementation.ele(`${this.xpdl}Task`)\r\n      : implementation.ele(`${this.xpdl}Task`, {\r\n        'apia:TskId': props.taskId,\r\n        'apia:TskTitle': props.title,\r\n        'apia:TskName': props.name,\r\n        'apia:highlight_comments': props.comments,\r\n      });\r\n    if (props.condition !== '' && !offline) {\r\n      task.att('apia:SkipTskCond', props.condition);\r\n      task.att('apia:SkipTsk', true);\r\n    } else if (props.condition === '' && !offline) {\r\n      task.att('apia:SkipTsk', false);\r\n    }\r\n    if (props.schedule && !offline) {\r\n      const { schedule } = props;\r\n      if (schedule.task !== '' && schedule.id !== '' && schedule.type !== '') {\r\n        task.att('apia:ActiveTskId', schedule.task);\r\n        task.att('apia:TskSchId', schedule.id);\r\n        task.att('apia:AsignType', schedule.type);\r\n\r\n        if (schedule.subprocess !== '') task.att('apia:ActivePrcId', schedule.subprocess);\r\n        if (schedule.subprocessName !== '') task.att('apia:ActivePrcName', schedule.subprocessName);\r\n      }\r\n    }\r\n    const taskTypeEl = this._getTaskTypeElement(task, element);\r\n    if (!offline) {\r\n      const { taskType } = element.properties;\r\n      if (taskType !== 'none') {\r\n        this._getApiaExtensionsElement(taskTypeEl);\r\n        this._createWebServiceMappingTaskElement(taskTypeEl, element);\r\n      }\r\n      this._createRoleRefElement(task, element);\r\n      this._createFormRefsElement(task, element);\r\n      this._createApiaTaskStates(task, element);\r\n      this._createTransitionsRefElement(activity, element);\r\n      this._createApiaEventsElement(activity, element);\r\n    }\r\n    this.createPerformersElement(activity, element, participants, participantsList);\r\n    this._createLoopElement(activity, element);\r\n    // completar para otros elementos que aparezcan\r\n    return activity;\r\n  }\r\n\r\n  _createWebServiceMappingTaskElement(task, element) {\r\n    const { inputMessageRef } = element.properties;\r\n    if (inputMessageRef) {\r\n      const wsTagName = element._properties.inFirsTask ? 'WEBSERVICE_PRO' : 'WEBSERVICE_TSK';\r\n\r\n      const webServiceTsk = task.ele('WebServiceMapping').ele(wsTagName, {\r\n        ws_method_name: inputMessageRef.wsMethodName,\r\n      });\r\n      this._createWebServiceAttributeTaskElement(webServiceTsk, inputMessageRef);\r\n    }\r\n    return task;\r\n  }\r\n\r\n  _createWebServiceAttributeTaskElement(webServiceTask, inputMessageRef) {\r\n    const { attrEnt, attrProc } = inputMessageRef;\r\n    if (attrEnt || attrProc) {\r\n      let attrs = [];\r\n      if (attrEnt) attrs = attrs.concat(attrEnt);\r\n      if (attrProc) attrs = attrs.concat(attrProc);\r\n      console.log(attrEnt, attrProc);\r\n      const wsAttTagName = webServiceTask.name === 'WEBSERVICE_PRO' ? 'WS_ATTRIBUTE_PRO' : 'WS_ATTRIBUTE_TSK';\r\n      for (let index = 0; index < attrs.length; index++) {\r\n        webServiceTask.ele(wsAttTagName, {\r\n          attribute_id: attrs[index].id,\r\n          name: attrs[index].name,\r\n          multivalued: attrs[index].multivalued ? 'T' : 'F',\r\n          attribute_type: attrs[index].type,\r\n          attribute_uk: attrs[index].uk ? 'T' : 'F',\r\n        });\r\n      }\r\n    }\r\n    return webServiceTask;\r\n  }\r\n\r\n  _createActivityAcoordingToType(\r\n    activities,\r\n    activitySets,\r\n    element,\r\n    participants,\r\n    participantsList,\r\n    reusableProcess,\r\n  ) {\r\n    const activity = this._createActivityElement(activities, element);\r\n    if (this._isEvent(element)) {\r\n      this._createEventAcoordingToType(activity, element);\r\n    }\r\n    if (this._isGateway(element)) {\r\n      this._createGatewayAcoordingToType(activity, element);\r\n    }\r\n    if (this._isSubprocess(element)) {\r\n      this._createSubprocessAcoordingToType(activity, activitySets, element, reusableProcess);\r\n    }\r\n    if (this._isTask(element)) {\r\n      this._createTaskAcoordingToType(activity, element, participants, participantsList);\r\n    }\r\n    return activity;\r\n  }\r\n\r\n  // Methods that return properties read from the nodes of the xpdl\r\n\r\n  _filterTagName(tag) {\r\n    let tagName = tag.split(':');\r\n    if (tagName.length > 1) {\r\n      [, tagName] = tagName;\r\n    } else {\r\n      [tagName] = tagName;\r\n    }\r\n    return tagName.toLowerCase();\r\n  }\r\n\r\n  _addActivityProperties(attributes) {\r\n    const activity = {\r\n      id: this._toIntegerId(attributes.Id),\r\n      name: unescape(attributes.Name || ''),\r\n    };\r\n    if (attributes['apia:ProEleId']) {\r\n      activity.proEleId = this._toIntegerId(attributes['apia:ProEleId']);\r\n    }\r\n    if (attributes['apia:ProId']) {\r\n      activity.proId = this._toIntegerId(attributes['apia:ProId']);\r\n    }\r\n    if (attributes['apia:ProVerId']) {\r\n      activity.versionId = this._toIntegerId(attributes['apia:ProVerId']);\r\n    }\r\n    return activity;\r\n  }\r\n\r\n  _addTaskProperties(attributes, properties) {\r\n    properties.taskId = this._toIntegerId(attributes['apia:TskId']) || properties.activity.id || '';\r\n    properties.id = properties.activity.id;\r\n    properties.taskType = 'none';\r\n    properties.name = unescape(attributes['apia:TskName'] || '') || properties.activity.name || '';\r\n    properties.title = unescape(attributes['apia:TskTitle'] || '') || properties.activity.name || '';\r\n    properties.comments = JSON.parse(attributes['apia:highlight_comments'] || false);\r\n    properties.condition = unescape(attributes['apia:SkipTskCond'] || '');\r\n    properties.loopType = 'none';\r\n    return properties;\r\n  }\r\n\r\n  _addScheduleTaskProperties(attributes, properties) {\r\n    if (attributes['apia:TskSchId'] !== undefined) {\r\n      const schedule = {\r\n        id: this._toIntegerId(attributes['apia:TskSchId']) || '',\r\n        type: attributes['apia:AsignType'] || '',\r\n        subprocess: this._toIntegerId(attributes['apia:ActivePrcId']) || '',\r\n        subprocessName: attributes['apia:ActivePrcName'] || '',\r\n        task: this._toIntegerId(attributes['apia:ActiveTskId']) || '',\r\n      };\r\n      properties.schedule = schedule;\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addRoleTaskProperties(attributes, properties) {\r\n    const role = {\r\n      id: this._toIntegerId(attributes['apia:RoleId']),\r\n      name: unescape(attributes['apia:RoleName'] || ''),\r\n    };\r\n    properties.role = role;\r\n    return properties;\r\n  }\r\n\r\n  _addGroupTaskproperties(attributes, properties) {\r\n    let textPerf = false;\r\n    if (attributes['apia:PerfId'] && attributes['apia:PerfName']) {\r\n      const group = {\r\n        id: this._toIntegerId(attributes['apia:PerfId']),\r\n        name: unescape(attributes['apia:PerfName'] || ''),\r\n      };\r\n      if (attributes['apia:ConditionDoc']) {\r\n        group.conditionDoc = unescape(attributes['apia:ConditionDoc'] || '');\r\n      }\r\n      if (attributes['apia:ProElePerfEvalCond']) {\r\n        group.condition = unescape(attributes['apia:ProElePerfEvalCond'] || '');\r\n      }\r\n      properties.groups = this._addArrayProperties(group, properties.groups);\r\n    } else {\r\n      textPerf = true;\r\n    }\r\n    return { properties, textPerf };\r\n  }\r\n\r\n  _getStepIndex(stepId, steps) {\r\n    let exist = 0;\r\n    if (steps.length > 0) {\r\n      exist = steps.findIndex((value) => {\r\n        return parseInt(value.id, 10) === parseInt(stepId, 10);\r\n      });\r\n    }\r\n    return exist;\r\n  }\r\n\r\n  _addFormsProperties(attributes, build, properties) {\r\n    let stepIndex = this._getStepIndex(attributes.ProEleFrmStepId, properties.forms || []);\r\n    const form = {\r\n      id: this._toIntegerId(attributes.FrmId),\r\n      name: unescape(attributes.FrmName || ''),\r\n      // step: attributes.ProEleFrmStepId,\r\n      order: parseInt(attributes.ProEleFrmOrder, 10),\r\n      // formType: attributes.FrmType,\r\n    };\r\n\r\n    if (attributes.ConditionDoc !== undefined) form.conditionDoc = unescape(attributes.ConditionDoc || '');\r\n    if (build !== this.tagsTypes.Subprocess) {\r\n      form.formType = attributes.FrmType;\r\n      form.readOnly = JSON.parse(attributes.ProEleFrmReadOnly || 'false');\r\n      form.multiply = JSON.parse(attributes.ProEleFrmMultiply || 'false');\r\n      form.condition = unescape(attributes.ProEleFrmEvalCond || '');\r\n      const step = { id: this._toIntegerId(attributes.ProEleFrmStepId) };\r\n      if (stepIndex === -1) {\r\n        stepIndex = properties.forms.length;\r\n        properties.forms = this._addArrayProperties(step, properties.forms);\r\n      } else if (stepIndex === 0 && !properties.forms) {\r\n        properties.forms = this._addArrayProperties(step, properties.forms);\r\n      }\r\n      properties.forms[stepIndex][`${attributes.FrmType}Forms`] = this._addArrayProperties(\r\n        form,\r\n        properties.forms[stepIndex][`${attributes.FrmType}Forms`],\r\n      );\r\n      // properties.forms = this._addArrayProperties(form, properties.forms);\r\n    } else if (properties.reusable !== undefined) {\r\n      form.step = parseInt(attributes.ProEleFrmStepId, 10);\r\n      form.formType = attributes.FrmType;\r\n      properties.reusable.forms = this._addArrayProperties(form, properties.reusable.forms);\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addEventsProperties(attributes, properties, tagToBuild, webServiceCtrl) {\r\n    const events = properties.events || [];\r\n    let count;\r\n    if (JSON.parse(attributes.WS || 'false') && tagToBuild === this.tagsTypes.Task) {\r\n      count = !properties.outputMessageRef ? 1 : properties.outputMessageRef.length + 1;\r\n    } else {\r\n      count = events.length + 1;\r\n    }\r\n    const event = {\r\n      id: count,\r\n      eventId: this._toIntegerId(attributes.EvtId),\r\n      condition: attributes.SkipCond || '',\r\n      busClaId: this._toIntegerId(attributes.BusClaId),\r\n      busClaName: attributes.BusClaName,\r\n      name: attributes.EvtName,\r\n      order: this._toIntegerId(attributes.ProEleEvtBusClaExecOrder),\r\n      WS: JSON.parse(attributes.WS || 'false'),\r\n      bindings: [],\r\n    };\r\n    event.haveCond = event.condition && event.condition !== '' ? 'Yes' : 'No';\r\n    const taskType = properties.taskType || '';\r\n    const conditionTask = taskType === 'user' || taskType === 'recive' || taskType === 'send' || taskType === 'service';\r\n    if (event.WS && tagToBuild === this.tagsTypes.Task && conditionTask) {\r\n      properties.outputMessageRef = this._addArrayProperties(event, properties.outputMessageRef);\r\n      webServiceCtrl = 'outputMessageRef';\r\n    } else {\r\n      properties.events = this._addArrayProperties(event, properties.events);\r\n      webServiceCtrl = 'events';\r\n    }\r\n    // const eventType = {\r\n    //   StartEvent: 'StartEvent',\r\n    //   EndEvent: 'EndEvent',\r\n    //   IntermediateEvent: 'IntermediateEvent',\r\n    // };\r\n    // const conditionEvt = (tagToBuild === eventType.StartEvent)\r\n    //     || (tagToBuild === eventType.EndEvent)\r\n    //     || (tagToBuild === eventType.EndEvent);\r\n    // if (event.WS && conditionEvt) {\r\n    //   properties.service = {};\r\n    //   properties.service.outMessage = {};\r\n    //   properties.service.outMessage.webService = this._addArrayProperties(event,\r\n    //     properties.service.outMessage.webService);\r\n    // }\r\n    return { properties, webServiceCtrl };\r\n  }\r\n\r\n  _addBusinessClassProperties(attributes, properties, type) {\r\n    const events = properties[type];\r\n    if (events !== undefined) {\r\n      const event = events.pop();\r\n      const binding = {\r\n        busClaParName: attributes.BusClaParName,\r\n        busClaParId: this._toIntegerId(attributes.BusClaParId),\r\n        busClaParType: attributes.BusClaParType,\r\n        busClaParBndType: attributes.BusClaParBndType,\r\n      };\r\n      if (binding.busClaParBndType === 'V') {\r\n        let dateValue = attributes.BusClaParBndValue;\r\n        if (binding.busClaParType === 'D') {\r\n          if (attributes.BusClaParBndValue === '') dateValue = Date.now();\r\n\r\n          dayjs.extend(customParseFormat);\r\n          binding.busClaParBndValue = dayjs(dateValue, Config.DATE_FORMAT.toUpperCase()).format(\r\n            'YYYY-MM-DD',\r\n          );\r\n        } else {\r\n          binding.busClaParBndValue = attributes.BusClaParBndValue;\r\n        }\r\n      }\r\n      if (binding.busClaParBndType === 'E' || binding.busClaParBndType === 'P') {\r\n        binding.attId = this._toIntegerId(attributes.AttId);\r\n        binding.attTooltip = attributes.AttTooltip;\r\n        binding.attName = attributes.AttName;\r\n      }\r\n      event.bindings = this._addArrayProperties(binding, event.bindings);\r\n      properties[type] = this._addArrayProperties(event, properties[type]);\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addLoopTypeProperties(attributes, properties) {\r\n    properties.loopType = attributes.LoopType !== undefined ? attributes.LoopType.toLowerCase() : 'none';\r\n    return properties;\r\n  }\r\n\r\n  _addMultiInstanceLoopProperties(attributes, properties) {\r\n    let hasAttribute = false;\r\n    let hasValue = false;\r\n\r\n    if (attributes['apia:MultiplierAttName'] && attributes['apia:MultiplierAttId']) {\r\n      properties.multiInstance = {\r\n        type: 'attribute',\r\n        attribute: attributes['apia:MultiplierAttName'],\r\n        attributeId: this._toIntegerId(attributes['apia:MultiplierAttId']),\r\n        condition: attributes.MI_FlowCondition,\r\n        ordering: attributes.MI_Ordering,\r\n      };\r\n      hasAttribute = true;\r\n    }\r\n    if (attributes.MI_Condition && Config.ENV === 'Offline') {\r\n      properties.multiplyCount = parseInt(attributes.MI_Condition, 10);\r\n      hasValue = true;\r\n    }\r\n    if (Config.ENV !== 'Offline' && attributes.MI_Condition) {\r\n      properties.multiInstance = {\r\n        type: 'value',\r\n        value: parseInt(attributes.MI_Condition, 10),\r\n      };\r\n      hasValue = true;\r\n    }\r\n\r\n    if (!hasValue && !hasAttribute) {\r\n      properties.multiInstance = {\r\n        type: 'value',\r\n        value: parseInt(attributes.MI_Condition, 10),\r\n      };\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  _addStandardLoopProperties(attributes, properties) {\r\n    properties.standard = {\r\n      condition: attributes.LoopCondition || '',\r\n      conditionDoc: attributes['apia:ConditionDoc'] || '',\r\n      testTime: attributes.TestTime,\r\n    };\r\n    return properties;\r\n  }\r\n\r\n  _addStateTaskProperties(attributes, properties) {\r\n    const states = properties.states || [];\r\n    const count = states.length + 1;\r\n    const state = {\r\n      id: count,\r\n      condition: attributes.ProEleBusEntStaEvalCond,\r\n      idEvent: this._toIntegerId(attributes.EvtId),\r\n      event: attributes.EvtName,\r\n      idName: this._toIntegerId(attributes.EntStaId),\r\n      name: attributes.StaName,\r\n      conditionDoc: attributes.ConditionDoc,\r\n    };\r\n    properties.states = this._addArrayProperties(state, properties.states);\r\n    return properties;\r\n  }\r\n\r\n  _addEventTypeProperties(attributes, properties) {\r\n    let type = attributes.Trigger || attributes.Result || 'none';\r\n    type = type.toLowerCase();\r\n    properties.type = type;\r\n    if (attributes.Target) {\r\n      properties.target = this._toIntegerId(attributes.Target);\r\n      properties.isAttached = true;\r\n    }\r\n    if (attributes['apia:IsAttached']) properties.isAttached = JSON.parse(attributes['apia:IsAttached']);\r\n    return properties;\r\n  }\r\n\r\n  _addEventImplementationProperties(attributes, properties) {\r\n    if (attributes.Implementation !== undefined) {\r\n      properties.implementation = attributes.Implementation;\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addTriggerResultMessageProperties(attributes, properties) {\r\n    if (attributes.CatchThrow !== undefined) {\r\n      properties.message = {};\r\n      properties.message.catchThrow = attributes.CatchThrow.toLowerCase();\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addTriggerTimerProperties(attributes, properties) {\r\n    const timer = {};\r\n    if (attributes.TimeDate) {\r\n      if (!timer.date) timer.date = {};\r\n      timer.date.start = new Date(attributes.TimeDate);\r\n    }\r\n    if (attributes['apia:EndDate']) {\r\n      if (!timer.date) timer.date = {};\r\n      timer.date.end = new Date(attributes['apia:EndDate']);\r\n    }\r\n    if (attributes['apia:TimeUnit'] && attributes.TimeCycle) {\r\n      timer.frequency = {\r\n        // el flash tenia un bug y mandaba milliseconds cuando era minutos\r\n        unit:\r\n          attributes['apia:TimeUnit'] === 'Milliseconds' ? 'Minutes' : attributes['apia:TimeUnit'],\r\n        value: attributes.TimeCycle || 0,\r\n      };\r\n    }\r\n    if (attributes['apia:TimerAttId'] && attributes['apia:TimerAttName']) {\r\n      timer.attribute = {\r\n        id: this._toIntegerId(attributes['apia:TimerAttId']),\r\n        name: attributes['apia:TimerAttName'],\r\n        type: attributes['apia:TimerAttType'] === 'P' ? 'process' : 'entity',\r\n      };\r\n    }\r\n    return { ...properties, timer };\r\n  }\r\n\r\n  _addWebServiceAttributeProcessOrTaskProperties(attributes, properties, clasification) {\r\n    const wsAttribute = {\r\n      id: this._toIntegerId(attributes.attribute_id),\r\n      name: attributes.name,\r\n      multivalued: attributes.multivalued === 'T',\r\n      type: attributes.attribute_type,\r\n      uk: attributes.attribute_uk === 'T',\r\n    };\r\n    if (wsAttribute.type === 'E') {\r\n      properties[clasification].attrEnt = this._addArrayProperties(\r\n        wsAttribute,\r\n        properties[clasification].attrEnt,\r\n      );\r\n    } else {\r\n      properties[clasification].attrProc = this._addArrayProperties(\r\n        wsAttribute,\r\n        properties[clasification].attrProc,\r\n      );\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addRouteGatewayProperties(attributes, properties) {\r\n    properties.id = properties.activity.id;\r\n    properties.type = attributes.GatewayType !== undefined ? attributes.GatewayType.toLowerCase() : 'none';\r\n    properties.name = properties.activity.name || '';\r\n    if (attributes.MarkerVisible) properties.visible = JSON.parse(attributes.MarkerVisible);\r\n    if (attributes['apia:ExecutionType'] !== undefined) {\r\n      properties.executionType = attributes['apia:ExecutionType'].toLowerCase();\r\n    }\r\n    if (attributes.ExclusiveType !== undefined) {\r\n      properties.exclusiveType = attributes.ExclusiveType;\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addTransitionReferenceProperties(attributes, properties) {\r\n    properties.transitions = this._addArrayProperties(\r\n      // parseInt(attributes.Id, 10),\r\n      this._toIntegerId(attributes.Id),\r\n      properties.transitions,\r\n    );\r\n    return properties;\r\n  }\r\n\r\n  _addTransitionOrAssociationProperties(attributes, connectorType) {\r\n    // console.log(connectorType);\r\n    const connector = {\r\n      id: this._toIntegerId(attributes.Id),\r\n      type: connectorType,\r\n      name: unescape(attributes.Name || ''),\r\n      from: this._toIntegerId(attributes.From) || this._toIntegerId(attributes.Source),\r\n      to: this._toIntegerId(attributes.To) || this._toIntegerId(attributes.Target),\r\n    };\r\n    if (attributes['apia:ExecutionOrder']) {\r\n      connector.executionOrder = this._toIntegerId(attributes['apia:ExecutionOrder']);\r\n    }\r\n    if (connectorType === 'transition') connector.class = attributes['apia:Type'] || attributes.Type;\r\n    if (connectorType === 'association') {\r\n      const direction = attributes.AssociationDirection.toLowerCase() === 'from'\r\n        ? 'directional'\r\n        : attributes.AssociationDirection.toLowerCase();\r\n      connector.direction = direction || 'none';\r\n    }\r\n    return connector;\r\n  }\r\n\r\n  _addBlockActivitySubprocessProperties(attributes, properties) {\r\n    properties.id = properties.activity.id;\r\n    properties.activitySetId = this._toIntegerId(attributes.ActivitySetId);\r\n    properties.name = properties.activity.name;\r\n    properties.type = 'embedded';\r\n    properties.loopType = 'none';\r\n    return properties;\r\n  }\r\n\r\n  _addSubflowSubprocessProperties(attributes, properties) {\r\n    properties.id = properties.activity.id;\r\n    properties.subprocessId = this._toIntegerId(attributes.Id);\r\n    properties.name = unescape(attributes.Name || '');\r\n    properties.type = 'reusable';\r\n    properties.loopType = 'none';\r\n    if (attributes['apia:ApiaExecution']) {\r\n      if (!properties.reusable) properties.reusable = {};\r\n      properties.reusable.execution = attributes['apia:ApiaExecution'] === 'SYNCHR_SKIP'\r\n        || attributes['apia:ApiaExecution'] === 'SYNCHR'\r\n        ? 'synchronized'\r\n        : 'not_synchronized';\r\n    }\r\n    if (attributes['apia:SkipFirstTask']) {\r\n      properties.reusable.skipFirst = JSON.parse(attributes['apia:SkipFirstTask']);\r\n    }\r\n    if (attributes['apia:ProEleAttBusEntId']) {\r\n      properties.reusable.entityId = this._toIntegerId(attributes['apia:ProEleAttBusEntId']);\r\n      properties.reusable.entityAttrName = attributes['apia:ProEleAttBusEntName'];\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addArtifactProperties(attributes, properties) {\r\n    properties = {\r\n      id: this._toIntegerId(attributes.Id),\r\n      type: attributes.ArtifactType,\r\n    };\r\n    properties.type = properties.type.toLowerCase();\r\n    if (properties.type === 'group') {\r\n      properties.name = unescape(attributes.Name || '');\r\n    }\r\n    if (properties.type === 'annotation') {\r\n      properties.text = unescape(attributes.TextAnnotation || '');\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _defineArtifactToBuildAcoordingToType(properties) {\r\n    let build;\r\n    if (properties.type === 'group') {\r\n      build = this.tagsTypes.Group;\r\n    }\r\n    if (properties.type === 'annotation') {\r\n      build = this.tagsTypes.TextAnnotation;\r\n    }\r\n    return build;\r\n  }\r\n\r\n  _addPoolProperties(attributes) {\r\n    if (JSON.parse(attributes.BoundaryVisible)) {\r\n      return {\r\n        id: this._toIntegerId(attributes.Id),\r\n        name: attributes.Name || '',\r\n        processId: this._toIntegerId(attributes.Process),\r\n        visible: JSON.parse(attributes.BoundaryVisible),\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  _addDefaultPoolProperties(attributes) {\r\n    if (!JSON.parse(attributes.BoundaryVisible)) {\r\n      return {\r\n        id: this._toIntegerId(attributes.Id),\r\n        processId: this._toIntegerId(attributes.Process),\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  _addLanesProperties(attributes, lanesList) {\r\n    const lane = {\r\n      id: this._toIntegerId(attributes.Id),\r\n      name: unescape(attributes.Name || ''),\r\n    };\r\n    lanesList.push(lane);\r\n    return lanesList;\r\n  }\r\n\r\n  _addDataStoreProperties(attributes, dataStoreList) {\r\n    const dataStore = {\r\n      referenceId: this._toIntegerId(attributes.Id),\r\n      name: unescape(attributes.Name || ''),\r\n    };\r\n    if (attributes.IsUnlimited) dataStore.unlimit = JSON.parse(attributes.IsUnlimited);\r\n    if (attributes.Capacity) dataStore.capacity = attributes.Capacity;\r\n    dataStoreList.push(dataStore);\r\n    return dataStoreList;\r\n  }\r\n\r\n  _addDataObjectInputOutputProperties(attributes, properties) {\r\n    properties.id = this._toIntegerId(attributes.Id);\r\n    properties.name = unescape(attributes.Name || '');\r\n    properties.state = unescape(attributes.State || '');\r\n    properties.collection = attributes.IsCollection ? JSON.parse(attributes.IsCollection) : false;\r\n    return properties;\r\n  }\r\n\r\n  _addDataStoreReferenceProperties(attributes, dataStoreList) {\r\n    const properties = dataStoreList.find((element) => {\r\n      return parseInt(element.referenceId, 10) === parseInt(attributes.DataStoreRef, 10);\r\n    });\r\n    if (properties) {\r\n      properties.id = this._toIntegerId(attributes.Id);\r\n      delete properties.referenceId;\r\n    }\r\n    if (attributes.State) properties.state = unescape(attributes.State || '');\r\n    return properties;\r\n  }\r\n\r\n  _addDataStoreDocumentationProperties(attributes, build, dataStoreList) {\r\n    if (build === this.tagsTypes.DataStore) {\r\n      const dataStore = dataStoreList.pop();\r\n      dataStore.documentation = { id: this._toIntegerId(attributes.Id) };\r\n      dataStoreList.push(dataStore);\r\n    }\r\n    return dataStoreList;\r\n  }\r\n\r\n  _addObjectDocumentationProperties(attributes, build, properties) {\r\n    if (build !== this.tagsTypes.DataStore) {\r\n      properties.documentation = { id: this._toIntegerId(attributes.Id) };\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addCoordinateProperties(attributes, build, points, ratio, laneFlag) {\r\n    if (build !== '' && !laneFlag) {\r\n      const point = {\r\n        x: parseInt(attributes.XCoordinate, 10) * ratio,\r\n        y: parseInt(attributes.YCoordinate, 10) * ratio,\r\n      };\r\n      points.push(point);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  _addApiaProEventsProperties(attributes, properties) {\r\n    const event = {\r\n      id: !properties.events ? 1 : properties.events.length + 1,\r\n      eventId: this._toIntegerId(attributes.EvtId),\r\n      condition: attributes.SkipCond || '',\r\n      busClaId: this._toIntegerId(attributes.BusClaId),\r\n      busClaName: attributes.BusClaName,\r\n      name: attributes.EvtName,\r\n      order: attributes.ProEvtBusClaExecOrder,\r\n      bindings: [],\r\n    };\r\n    event.haveCond = event.condition && event.condition !== '' ? 'Yes' : 'No';\r\n    properties.events = this._addArrayProperties(event, properties.events);\r\n    return { properties, webServiceCtrl: 'events' };\r\n  }\r\n\r\n  _isContaintSizeProperties(build) {\r\n    return (\r\n      build === this.tagsTypes.Group\r\n      || build === this.tagsTypes.TextAnnotation\r\n      || build === this.tagsTypes.Pool\r\n    );\r\n  }\r\n\r\n  _addLanesSizeProperties(attributes, build, lanesList, ratio) {\r\n    if (build === this.tagsTypes.Pool) {\r\n      if (lanesList.length !== 0 && lanesList[lanesList.length - 1].size === undefined) {\r\n        lanesList[lanesList.length - 1].size = {\r\n          width: parseInt(attributes.Width, 10) * ratio,\r\n          height: parseInt(attributes.Height, 10) * ratio,\r\n        };\r\n      }\r\n    }\r\n    return lanesList;\r\n  }\r\n\r\n  _addLanesCoordinatesProperties(attributes, build, lanesList, ratio) {\r\n    if (\r\n      build === this.tagsTypes.Pool\r\n      && lanesList.length > 0\r\n      && lanesList[lanesList.length - 1].x === undefined\r\n      && lanesList[lanesList.length - 1].y === undefined\r\n    ) {\r\n      lanesList[lanesList.length - 1].x = parseInt(attributes.XCoordinate, 10) * ratio;\r\n      lanesList[lanesList.length - 1].y = parseInt(attributes.YCoordinate, 10) * ratio;\r\n    }\r\n    return lanesList;\r\n  }\r\n\r\n  _addNodeGraphicsInfoProperties(attributes, build, properties, ratio) {\r\n    if (this._isContaintSizeProperties(build)) {\r\n      const size = {\r\n        width: parseInt(attributes.Width, 10) * ratio,\r\n        height: parseInt(attributes.Height, 10) * ratio,\r\n      };\r\n      properties.size = size;\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _buildLanesElement(lanesList, poolProps) {\r\n    lanesList.forEach((value, index) => {\r\n      if (index > 0) {\r\n        const previous = lanesList[index - 1];\r\n        const coord = this._checkCoordinateLane({ x: value.x, y: value.y }, previous);\r\n        value.x = coord.x;\r\n        value.y = coord.y;\r\n      }\r\n      const poolWidth = poolProps.size.width;\r\n      if (poolWidth - 30 !== value.size.width) {\r\n        value.size.width = poolWidth - 30;\r\n      }\r\n      this.editor.createElement('Lane', value.x, value.y, value, false);\r\n      // console.log(`■ -Lane -» Coordenadas:[x:${value.x} y:${value.y}]`, value);\r\n    });\r\n  }\r\n\r\n  _addWorkflowProperties(attributes, properties) {\r\n    properties.id = this._toIntegerId(attributes.Id);\r\n    properties.proAction = attributes['apia:ProAction'] || 'C';\r\n    if (Config.ENV === 'Offline') properties.name = attributes.Name || 'Default_Process';\r\n    if (attributes['apia:ProId']) {\r\n      properties.proId = this._toIntegerId(attributes['apia:ProId']);\r\n    }\r\n    if (attributes['apia:ProVerId']) {\r\n      properties.versionId = this._toIntegerId(attributes['apia:ProVerId']);\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addConnectorsPointsProperties(points, properties) {\r\n    properties.points = [];\r\n    properties.points = points;\r\n    return properties;\r\n  }\r\n\r\n  _addPackageProperties(attributes) {\r\n    const { elements } = this.editor;\r\n    const workflow = elements.find((element) => element.elementType === 'Workflow');\r\n    workflow.properties.packageId = this._toIntegerId(attributes.Id);\r\n  }\r\n\r\n  _addLaneDocumentationProperties(text, lanesList) {\r\n    if (lanesList.length > 0) {\r\n      lanesList[lanesList.length - 1].documentation.text = text;\r\n    }\r\n    return lanesList;\r\n  }\r\n\r\n  _addLaneObjectProperties(attributes, flag, lanesList) {\r\n    if (flag && lanesList.length > 0) {\r\n      lanesList[lanesList.length - 1].documentation = {\r\n        id: this._toIntegerId(attributes.Id),\r\n      };\r\n    }\r\n    return lanesList;\r\n  }\r\n\r\n  _addColorProperties(attributes, build, properties) {\r\n    if (\r\n      (build === this.tagsTypes.Task || build === this.tagsTypes.Subprocess)\r\n      && attributes.FillColor\r\n    ) {\r\n      properties.color = attributes.FillColor || '';\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _addParticipantProperties(attributes, participants) {\r\n    const id = Number.parseInt(attributes.Id, 10);\r\n    const participant = {\r\n      id: Number.isNaN(id) ? attributes.Id : id,\r\n      name: unescape(attributes.Name || ''),\r\n    };\r\n    participants.push(participant);\r\n    return participants;\r\n  }\r\n\r\n  _addParticipantTypeProperties(attributes, participants, ratio) {\r\n    const participant = participants.pop();\r\n    const type = attributes.Type.split(':');\r\n    participant.type = type.length === 1 ? type[0] : type[1];\r\n    participants.push(participant);\r\n    if (attributes['xmlns:edition']) ratio = 1;\r\n    return { participants, ratio };\r\n  }\r\n\r\n  _addPerformerTextProperties(text, participants, properties) {\r\n    const findParticipant = participants.find((value) => {\r\n      const id = Number.parseInt(value.id, 10);\r\n      if (Number.isNaN(id)) return value.id.toUpperCase() === text.toUpperCase();\r\n      return id === Number.parseInt(text, 10);\r\n    });\r\n    if (findParticipant) {\r\n      const { id, name } = findParticipant;\r\n      properties.groups = this._addArrayProperties(\r\n        {\r\n          id,\r\n          name,\r\n        },\r\n        properties.groups,\r\n      );\r\n    }\r\n    return properties;\r\n  }\r\n\r\n  _canHaveGroup(type) {\r\n    return type === 'manual' || type === 'user' || type === 'none';\r\n  }\r\n\r\n  // -- Build the process map from an input xml file -- //\r\n  buildProcessMap() {\r\n    // -- variables declarations -- //\r\n    let tagPoints = [];\r\n    let tagName = '';\r\n    let tagToBuild = '';\r\n    let tagProperties = {};\r\n    let dataStoreList = [];\r\n    let wsChecking = [];\r\n    let lanesList = [];\r\n    let laneFlag = false;\r\n    let workflowDoc = {};\r\n    let defaultPool = {};\r\n    let participants = [];\r\n    let performerText = false;\r\n    let ratio = 2;\r\n    let associations = [];\r\n    let transitions = [];\r\n\r\n    // -- Starting to launch events -- //\r\n    // this.parser.oncdata = (cdata) => {\r\n    //   ratio = cdata.trim() === `VERSION-${Config.VERSION}` ? 1 : ratio;\r\n    // };\r\n    // -- For each label that open news properties of elements are adds -- //\r\n    this.parser.onopentag = (tag) => {\r\n      // -- Split and filter the tag name -- //\r\n      tagName = this._filterTagName(tag.name);\r\n      // console.log(tagName);\r\n      // -- Extract only the attributes of the current tag -- //\r\n      const attr = tag.attributes;\r\n\r\n      switch (tagName) {\r\n        case 'package':\r\n          if (attr['xmlns:edition']) ratio = 1;\r\n          console.log('RATIO', ratio);\r\n          break;\r\n        case 'activity': {\r\n          tagProperties.activity = this._addActivityProperties(attr);\r\n          break;\r\n        }\r\n        case 'task': {\r\n          tagToBuild = this.tagsTypes.Task;\r\n          tagProperties = this._addTaskProperties(attr, tagProperties);\r\n          tagProperties = this._addScheduleTaskProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'taskuser': {\r\n          tagProperties.taskType = 'user';\r\n          break;\r\n        }\r\n        case 'taskservice': {\r\n          tagProperties.taskType = 'service';\r\n          break;\r\n        }\r\n        case 'tasksend': {\r\n          tagProperties.taskType = 'send';\r\n          break;\r\n        }\r\n        case 'taskreceive': {\r\n          tagProperties.taskType = 'receive';\r\n          break;\r\n        }\r\n        case 'taskmanual': {\r\n          tagProperties.taskType = 'manual';\r\n          break;\r\n        }\r\n        case 'taskscript': {\r\n          tagProperties.taskType = 'script';\r\n          break;\r\n        }\r\n        case 'taskbusinessrule': {\r\n          tagProperties.taskType = 'businessRule';\r\n          break;\r\n        }\r\n        case 'roleref': {\r\n          tagProperties = this._addRoleTaskProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'performer': {\r\n          if (Config.ENV !== 'Offline' && this._canHaveGroup(tagProperties.taskType)) {\r\n            const { properties, textPerf } = this._addGroupTaskproperties(\r\n              attr,\r\n              tagProperties,\r\n              performerText,\r\n            );\r\n            tagProperties = properties;\r\n            performerText = textPerf;\r\n          } else {\r\n            performerText = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'formref': {\r\n          tagProperties = this._addFormsProperties(attr, tagToBuild, tagProperties);\r\n          break;\r\n        }\r\n        case 'apiaevent': {\r\n          const { properties, webServiceCtrl } = this._addEventsProperties(\r\n            attr,\r\n            tagProperties,\r\n            tagToBuild,\r\n            wsChecking,\r\n          );\r\n          tagProperties = properties;\r\n          wsChecking = webServiceCtrl;\r\n          break;\r\n        }\r\n        case 'busclaparbinding': {\r\n          tagProperties = this._addBusinessClassProperties(attr, tagProperties, wsChecking);\r\n          break;\r\n        }\r\n        case 'loop': {\r\n          tagProperties = this._addLoopTypeProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'loopmultiinstance': {\r\n          tagProperties = this._addMultiInstanceLoopProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'loopstandard': {\r\n          tagProperties = this._addStandardLoopProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'apiatskstate': {\r\n          tagProperties = this._addStateTaskProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'event': {\r\n          tagToBuild = this.tagsTypes.Event;\r\n          tagProperties.id = tagProperties.activity.id;\r\n          break;\r\n        }\r\n        case 'startevent': {\r\n          tagToBuild = `${this.tagsTypes.Start}${tagToBuild}`;\r\n          tagProperties = this._addEventTypeProperties(attr, tagProperties);\r\n          tagProperties = this._addEventImplementationProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'intermediateevent': {\r\n          tagToBuild = `${this.tagsTypes.Intermediate}${tagToBuild}`;\r\n          tagProperties = this._addEventTypeProperties(attr, tagProperties);\r\n          tagProperties = this._addEventImplementationProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'endevent': {\r\n          tagToBuild = `${this.tagsTypes.End}${tagToBuild}`;\r\n          tagProperties = this._addEventTypeProperties(attr, tagProperties);\r\n          tagProperties = this._addEventImplementationProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'triggerresultmessage': {\r\n          tagProperties = this._addTriggerResultMessageProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'triggertimer': {\r\n          tagProperties.timer = {};\r\n          tagProperties = this._addTriggerTimerProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'webservice_pro': {\r\n          if (!tagProperties.message) {\r\n            tagProperties.inputMessageRef = {\r\n              wsMethodName: attr.ws_method_name || '',\r\n            };\r\n            tagProperties.clasification = 'inputMessageRef';\r\n          } else {\r\n            tagProperties.message.webService = attr.ws_method_name || '';\r\n            tagProperties.clasification = 'message';\r\n          }\r\n\r\n          break;\r\n        }\r\n        case 'ws_attribute_pro': {\r\n          tagProperties = this._addWebServiceAttributeProcessOrTaskProperties(\r\n            attr,\r\n            tagProperties,\r\n            tagProperties.clasification,\r\n          );\r\n          break;\r\n        }\r\n        case 'webservice_tsk': {\r\n          const clasification = tagToBuild === `${this.tagsTypes.Intermediate}Event` ? 'message' : 'inputMessageRef';\r\n          if (clasification === 'message') {\r\n            tagProperties.message.webService = attr.ws_method_name || '';\r\n          } else {\r\n            tagProperties[clasification] = {\r\n              wsMethodName: attr.ws_method_name || '',\r\n            };\r\n          }\r\n          break;\r\n        }\r\n        case 'ws_attribute_tsk': {\r\n          const clasification = tagToBuild === `${this.tagsTypes.Intermediate}Event` ? 'message' : 'inputMessageRef';\r\n          tagProperties = this._addWebServiceAttributeProcessOrTaskProperties(\r\n            attr,\r\n            tagProperties,\r\n            clasification,\r\n          );\r\n          break;\r\n        }\r\n        case 'route': {\r\n          tagToBuild = this.tagsTypes.Gateway;\r\n          tagProperties = this._addRouteGatewayProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'transition': {\r\n          tagToBuild = this.tagsTypes.Connector;\r\n          tagProperties = this._addTransitionOrAssociationProperties(attr, tagName);\r\n          break;\r\n        }\r\n        case 'condition': {\r\n          if (tagToBuild === this.tagsTypes.Connector) tagProperties.kind = 'expression';\r\n          break;\r\n        }\r\n        case 'association': {\r\n          tagToBuild = this.tagsTypes.Connector;\r\n          tagProperties = this._addTransitionOrAssociationProperties(attr, tagName);\r\n          break;\r\n        }\r\n        case 'blockactivity': {\r\n          tagToBuild = this.tagsTypes.Subprocess;\r\n          tagProperties = this._addBlockActivitySubprocessProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'subflow': {\r\n          tagToBuild = this.tagsTypes.Subprocess;\r\n          tagProperties = this._addSubflowSubprocessProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'artifact': {\r\n          tagProperties = this._addArtifactProperties(attr, tagProperties);\r\n          tagToBuild = this._defineArtifactToBuildAcoordingToType(tagProperties);\r\n          break;\r\n        }\r\n        case 'pool': {\r\n          tagProperties = this._addPoolProperties(attr);\r\n          tagToBuild = tagProperties.visible !== undefined ? this.tagsTypes.Pool : '';\r\n          defaultPool = this._addDefaultPoolProperties(attr);\r\n          break;\r\n        }\r\n        case 'pools': {\r\n          /**\r\n           * For the first time it is loaded in \"Apia\" it can\r\n           * read the new version attribute\r\n           */\r\n          if (attr['xmlns:edition']) ratio = 1;\r\n          break;\r\n        }\r\n        case 'lane': {\r\n          lanesList = this._addLanesProperties(attr, lanesList);\r\n          laneFlag = true;\r\n          break;\r\n        }\r\n        case 'datastore': {\r\n          tagToBuild = this.tagsTypes.DataStore;\r\n          dataStoreList = this._addDataStoreProperties(attr, dataStoreList);\r\n          break;\r\n        }\r\n        case 'datastorereference': {\r\n          tagToBuild = this.tagsTypes.DataStore;\r\n          tagProperties = this._addDataStoreReferenceProperties(attr, dataStoreList);\r\n          break;\r\n        }\r\n        case 'dataobject': {\r\n          tagToBuild = this.tagsTypes.DataObject;\r\n          tagProperties = this._addDataObjectInputOutputProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'datainput': {\r\n          tagToBuild = this.tagsTypes.DataInput;\r\n          tagProperties = this._addDataObjectInputOutputProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'dataoutput': {\r\n          tagToBuild = this.tagsTypes.DataOutput;\r\n          tagProperties = this._addDataObjectInputOutputProperties(attr, tagProperties);\r\n          break;\r\n        }\r\n        case 'object': {\r\n          tagProperties = this._addObjectDocumentationProperties(attr, tagToBuild, tagProperties);\r\n          dataStoreList = this._addDataStoreDocumentationProperties(\r\n            attr,\r\n            tagToBuild,\r\n            dataStoreList,\r\n          );\r\n          lanesList = this._addLaneObjectProperties(attr, laneFlag, lanesList);\r\n          break;\r\n        }\r\n        case 'participant': {\r\n          participants = this._addParticipantProperties(attr, participants);\r\n          break;\r\n        }\r\n        case 'participanttype': {\r\n          const props = this._addParticipantTypeProperties(attr, participants, ratio);\r\n          participants = props.participants;\r\n          ratio = props.ratio;\r\n          break;\r\n        }\r\n        case 'nodegraphicsinfo': {\r\n          tagProperties = this._addNodeGraphicsInfoProperties(\r\n            attr,\r\n            tagToBuild,\r\n            tagProperties,\r\n            ratio,\r\n          );\r\n          lanesList = this._addLanesSizeProperties(attr, tagToBuild, lanesList, ratio);\r\n          tagProperties = this._addColorProperties(attr, tagToBuild, tagProperties);\r\n          break;\r\n        }\r\n        case 'coordinates': {\r\n          tagPoints = this._addCoordinateProperties(attr, tagToBuild, tagPoints, ratio, laneFlag);\r\n          lanesList = this._addLanesCoordinatesProperties(\r\n            attr,\r\n            tagToBuild,\r\n            lanesList,\r\n            ratio,\r\n            tagPoints,\r\n          );\r\n          break;\r\n        }\r\n        case 'apiaproevent': {\r\n          const { properties, webServiceCtrl } = this._addApiaProEventsProperties(\r\n            attr,\r\n            tagProperties,\r\n          );\r\n          tagProperties = properties;\r\n          wsChecking = webServiceCtrl;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    this.parser.oncdata = (text) => {\r\n      const textValue = text.trim();\r\n      if (tagToBuild === this.tagsTypes.Connector && tagProperties.kind === 'expression') {\r\n        tagProperties.expression = textValue;\r\n      }\r\n    };\r\n\r\n    // -- For capture the documentation text in the associated text node -- //\r\n    this.parser.ontext = (text) => {\r\n      const { tag } = this.parser;\r\n      const textValue = text.trim();\r\n      tagName = this._filterTagName(tag ? tag.name : '');\r\n      if (tagName === 'documentation' && textValue !== '') {\r\n        if (tagProperties.documentation !== undefined) {\r\n          tagProperties.documentation.text = textValue;\r\n          if (tagToBuild === '') {\r\n            workflowDoc = tagProperties.documentation;\r\n            if (Config.ENV !== 'Offline') workflowDoc = this._extractRealDocumentationInfo(workflowDoc);\r\n          }\r\n          if (tagToBuild === Config.TASK && Config.ENV !== 'Offline') {\r\n            tagProperties.documentation = this._extractRealDocumentationInfo(\r\n              tagProperties.documentation || {},\r\n            );\r\n          }\r\n        }\r\n        // When the documentation is add to datastore list //\r\n        if (tagToBuild === this.tagsTypes.DataStore) {\r\n          const elem = dataStoreList.pop();\r\n          elem.documentation.text = textValue;\r\n          dataStoreList.push(elem);\r\n          tagToBuild = '';\r\n        }\r\n        // When the documentation is add to lane list //\r\n        if (laneFlag) {\r\n          this._addLaneDocumentationProperties(textValue, lanesList);\r\n        }\r\n      }\r\n      if (performerText) {\r\n        tagProperties = this._addPerformerTextProperties(textValue, participants, tagProperties);\r\n        performerText = false;\r\n      }\r\n      if (\r\n        tagName === 'expression'\r\n        && tagToBuild === this.tagsTypes.Connector\r\n        && tagProperties.kind === 'expression'\r\n      ) {\r\n        tagProperties.expression = textValue;\r\n      }\r\n    };\r\n\r\n    // -- For each label that closes a new graphic element is constructed -- //\r\n    this.parser.onclosetag = (name) => {\r\n      const { tag } = this.parser;\r\n      const attr = tag.attributes;\r\n      tagName = this._filterTagName(name);\r\n\r\n      // -- Compare if the current tag is a valid tag to build -- //\r\n      if (this._isElementToBuild(tagName) && tagToBuild !== '') {\r\n        // -- Compare if the current tag is a connector tag to build -- //\r\n        if (tagName === 'transition' || tagName === 'association') {\r\n          tagProperties = this._addConnectorsPointsProperties(tagPoints, tagProperties);\r\n          if (tagName === 'association') {\r\n            associations.push(tagProperties);\r\n          } else {\r\n            transitions.push(tagProperties);\r\n          }\r\n          // console.log(\r\n          //   `■ - ${tagToBuild}(${tagProperties.type}) -» ${tagPoints.length} punto(s):`,\r\n          //   tagProperties,\r\n          // );\r\n        }\r\n        // -- In this case however is another element graphic to build -- //\r\n        if (tagToBuild !== this.tagsTypes.Connector) {\r\n          const point = tagPoints.pop();\r\n          const xCoord = parseInt(point.x, 10);\r\n          const yCoord = parseInt(point.y, 10);\r\n          if (tagToBuild === this.tagsTypes.Pool) {\r\n            this._buildLanesElement(lanesList, tagProperties);\r\n          }\r\n          // console.log(\r\n          //   `■ - ${tagToBuild} -» Coordenadas:[x:${xCoord} y:${yCoord}]`, '\\n',\r\n          //   tagProperties,\r\n          // );\r\n          this.editor.createElement(tagToBuild, xCoord, yCoord, tagProperties, false);\r\n        }\r\n        // -- Always clean these variables -- //\r\n        tagProperties = {};\r\n        tagToBuild = '';\r\n        tagPoints = [];\r\n      }\r\n      // Reset the lane flag when de lane element is finish\r\n      if (tagName === 'lane') laneFlag = false;\r\n\r\n      if (tagName === 'workflowprocess') {\r\n        tagProperties = this._addWorkflowProperties(attr, tagProperties);\r\n        tagProperties.defaultPool = defaultPool;\r\n        if (workflowDoc !== {}) tagProperties.documentation = workflowDoc;\r\n        const [existWorkflow] = getElementsOfType(Config.WORKFLOW, this.editor.elements);\r\n        if (!existWorkflow) {\r\n          this.editor.createElement('Workflow', 0, 0, tagProperties, false);\r\n          console.log('tags', tagProperties);\r\n          // console.log('■ - WorkflowProcess', tagProperties);\r\n          console.log(1);\r\n          this._createAllConnectors([...associations, ...transitions]);\r\n          associations = [];\r\n          transitions = [];\r\n        }\r\n        tagProperties = {};\r\n        workflowDoc = {};\r\n      }\r\n\r\n      if (tagName === 'package') {\r\n        this._addPackageProperties(attr);\r\n      }\r\n      // if (tagName === 'performer') performerText = false;\r\n      this.parser.onerror = (e) => {\r\n        this.parser.error = null;\r\n        this.parser.resume();\r\n        this.emit('xpdl-error', e);\r\n      };\r\n    };\r\n    this.parser.write(this.xml).close();\r\n\r\n    if (Config.ENV === 'Offline') {\r\n      const extractor = new Extractor(this.editor.elements);\r\n      extractor.readExtract(this.parser);\r\n    }\r\n\r\n    this.emit('xpdl-parsed');\r\n  }\r\n\r\n  _extractRealDocumentationInfo(documentation) {\r\n    const extractParser = sax.parser(true, {\r\n      normalize: true,\r\n      trim: true,\r\n    });\r\n    const { textDoc, otherTags } = Extractor.extractUnmodifiedInfo(\r\n      documentation.text || '',\r\n      extractParser,\r\n    );\r\n    if (otherTags) documentation.text = '';\r\n    if (textDoc !== '') {\r\n      documentation.text = textDoc;\r\n    }\r\n    return documentation;\r\n  }\r\n\r\n  _createAllConnectors(connectors) {\r\n    connectors.forEach((connector) => {\r\n      this.editor.createElement(Config.CONNECTOR, 0, 0, connector, false, false);\r\n    });\r\n  }\r\n\r\n  // -- Check if the tag is a valid tag to build -- //\r\n  _isElementToBuild(tagName) {\r\n    if (\r\n      tagName === 'activity'\r\n      || tagName === 'pool'\r\n      || tagName === 'association'\r\n      || tagName === 'artifact'\r\n      || tagName === 'datainput'\r\n      || tagName === 'dataoutput'\r\n      || tagName === 'datastorereference'\r\n      || tagName === 'transition'\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // -- Method that adds elements to an array of properties -- //\r\n  _addArrayProperties(property, propertyList) {\r\n    if (propertyList === undefined) {\r\n      propertyList = [];\r\n    }\r\n    propertyList.push(property);\r\n    return propertyList;\r\n  }\r\n\r\n  _getLaneList(elementsList) {\r\n    const lanes = elementsList.filter((value) => this._isLane(value));\r\n    return lanes;\r\n  }\r\n\r\n  // Check the Coordinate and fixed if the point is incorrect\r\n  _checkCoordinateLane(currentCoord, previousLane) {\r\n    if (previousLane !== undefined) {\r\n      const height = parseInt(previousLane.size.height, 10);\r\n      const y = parseInt(previousLane.y, 10);\r\n      const realCoordY = height + y || undefined;\r\n      if (currentCoord.y !== realCoordY) {\r\n        // console.log(currentCoord, realCoordY);\r\n        return { x: currentCoord.x, y: realCoordY };\r\n      }\r\n    }\r\n    return currentCoord;\r\n  }\r\n}\r\n","import throttle from 'lodash/throttle';\r\nimport * as Snap from 'snapsvg-cjs';\r\nimport EventEmitter from 'eventemitter3';\r\nimport Config from 'config';\r\nimport Graph from 'graph-data-structure';\r\n\r\nimport PanZoomManager from './editor/panZoomManager';\r\nimport HistoryManager from './editor/historyManager';\r\nimport PoolManager from './editor/poolManager';\r\nimport LaneManager from './editor/laneManager';\r\nimport AlignManager from './editor/alignManager';\r\nimport ClipboardManager from './editor/clipboardManager';\r\nimport GridManager from './editor/gridManager';\r\nimport LassoManager from './editor/lassoManager';\r\nimport KeyManager from './editor/keyManager';\r\nimport ConnectorManager from './editor/connectorManager';\r\nimport BoundaryEventsManager from './editor/boundaryEventsManager';\r\nimport ElementFactory from './editor/elementFactory';\r\n// eslint-disable-next-line import/extensions\r\nimport DocManager from './editor/docManager-APP_TARGET';\r\nimport {\r\n  numberOfSelectedElements,\r\n  getSelected,\r\n  getProcessElementByID,\r\n  getElementsOfType,\r\n  getLastYElBounds,\r\n} from './utils/util';\r\n\r\n// eslint-disable-next-line import/extensions\r\nimport Panels from './ui/panels/panels-APP_TARGET';\r\nimport Parser from './parser';\r\n\r\nexport default class Editor extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this._paper = Snap('#app');\r\n    this._paper.mousedown(this._onPaperClick, this);\r\n\r\n    this._keyManager = new KeyManager(this);\r\n    this._gridManager = new GridManager(this, Config.GRID_SIZE);\r\n    this._historyManager = new HistoryManager(this);\r\n    const btnRedo = document.querySelector('#redo_btn');\r\n    const btUndo = document.querySelector('#undo_btn');\r\n\r\n    this._historyManager.on('undo', (isAvailable) => {\r\n      if (!isAvailable) {\r\n        btUndo.setAttribute('data-state', 'disabled');\r\n      } else {\r\n        btUndo.setAttribute('data-state', 'enabled');\r\n      }\r\n    });\r\n\r\n    this._historyManager.on('redo', (isAvailable) => {\r\n      if (!isAvailable) {\r\n        btnRedo.setAttribute('data-state', 'disabled');\r\n      } else {\r\n        btnRedo.setAttribute('data-state', 'enabled');\r\n      }\r\n    });\r\n\r\n    this._panZoomManager = new PanZoomManager(this, true);\r\n    this._panZoomManager.on('zoomed', () => {\r\n      // reposition context menu on selected\r\n      this._repositionCtxMenu();\r\n    });\r\n    this._panZoomManager.on('panned', () => {\r\n      // reposition context menu on selected\r\n      this._repositionCtxMenu();\r\n    });\r\n    this._poolManager = new PoolManager(this);\r\n    this._laneManager = new LaneManager(this);\r\n    this._alignManager = new AlignManager(this, this._historyManager);\r\n    this._clipboardManager = new ClipboardManager(this, this._historyManager);\r\n    this._lassoManager = new LassoManager(this);\r\n    this._connectorManager = new ConnectorManager(this, this._historyManager);\r\n    this._boundaryEventsManager = new BoundaryEventsManager(this);\r\n    this._boundaryEventsManager.on('boundary_attached', (el) => {\r\n      if (this.elementSelected) {\r\n        if (this.elementSelected.elementType === Config.INTERMEDIATE_EVENT) {\r\n          this._panels.show(Config.INTERMEDIATE_EVENT, el);\r\n        }\r\n      }\r\n    });\r\n    this._elementFactory = new ElementFactory(this);\r\n    this._docManager = new DocManager(this);\r\n    this._panels = new Panels(this);\r\n    this._panels.on('resize', () => {\r\n      // panel open/close\r\n    });\r\n    this._parser = null;\r\n\r\n    this._elements = [];\r\n    this._connections = [];\r\n    this._graph = Graph();\r\n    this._idIndex = 1;\r\n    this._elementSelected = null;\r\n    this._firstSelectedElementFromMultiple = null;\r\n    this._currentlySelectedNumber = 0;\r\n    this._isSnapToGridOn = true;\r\n    this._selectedElementFirstMove = false;\r\n    this._elementsSelectedToMove = [];\r\n    this._mode = Config.HAND_MODE;\r\n    this._workflow = null;\r\n    // markers go in defs\r\n    this._startMarker = null;\r\n    this._endMarker = null;\r\n    this._expressionMarker = null;\r\n    this._wizardMarker = null;\r\n    this._fileName = null;\r\n    this._THROTTLE_CONNECTORS_MS = 150;\r\n\r\n    // create viewport layer\r\n    this._viewport = this._paper.group();\r\n    this._viewport.attr({\r\n      class: 'viewPort',\r\n    });\r\n\r\n    // create menu layer\r\n    this._ctxMenuLayer = this._paper.group();\r\n    this._ctxMenuLayer.attr({\r\n      class: 'ctxmenu',\r\n      id: 'ctxMenuLayer',\r\n    });\r\n\r\n    this.throttledUpdateConnectors = throttle(\r\n      this.updateElementConnectors,\r\n      this._THROTTLE_CONNECTORS_MS,\r\n    );\r\n  }\r\n\r\n  set idIndex(value) {\r\n    this._idIndex = value;\r\n  }\r\n\r\n  get idIndex() {\r\n    return this._idIndex;\r\n  }\r\n\r\n  set fileName(value) {\r\n    this._fileName = value;\r\n  }\r\n\r\n  get fileName() {\r\n    return this._fileName;\r\n  }\r\n\r\n  setTitle(version, filename) {\r\n    // set the titlebar for facilis to recognize filename\r\n    if (Config.ENV === 'Offline') {\r\n      document.title = `Apia Facilis ${version} - ${filename}`;\r\n    }\r\n  }\r\n\r\n  buildEmptyProcess(version = '', filename = '', proAction = 'C') {\r\n    this.setTitle(version, filename);\r\n    // reset ids\r\n    /**\r\n     *  because is need to have a margin to\r\n     *  differentiate the IDs of the activities\r\n     *  start in \"1000\"\r\n     */\r\n    this.idIndex = 1000;\r\n    // creates empty map\r\n    this._clearEditorElements();\r\n    this._historyManager.init();\r\n    this._panZoomManager.init();\r\n    this._gridManager.init();\r\n    this.createDefMarkers();\r\n    this._parser = null;\r\n    // create workflow element only\r\n    if (!this.workflow) {\r\n      const processId = this.idIndex++;\r\n      const properties = {\r\n        id: processId,\r\n        proAction,\r\n        defaultPool: {\r\n          id: this.idIndex++,\r\n          processId,\r\n        },\r\n        packageId: this.idIndex++,\r\n      };\r\n      this._workflow = this.createElement(Config.WORKFLOW, 0, 0, properties, false, false);\r\n    }\r\n    this._panels.show(Config.WORKFLOW, this.workflow);\r\n  }\r\n\r\n  buildProcess(xpdl, version = '', filename = '') {\r\n    this.setTitle(version, filename);\r\n    // builds the map from the xpdl\r\n    this._clearEditorElements();\r\n    this._historyManager.init();\r\n    this._panZoomManager.init();\r\n    this._gridManager.init();\r\n    this.createDefMarkers();\r\n    this._parser = new Parser(xpdl, this);\r\n    this._parser.on('xpdl-error', (error) => {\r\n      console.error('Error Parsing XPDL', error);\r\n    });\r\n    this._parser.on('xpdl-parsed', () => {\r\n      // console.log('XPDL parsed');\r\n      // insert first the workflow\r\n      if (this.elements.length > 1) {\r\n        const [workflow] = getElementsOfType(Config.WORKFLOW, this.elements);\r\n        const newElements = [];\r\n        newElements.push(workflow);\r\n        this.elements.forEach((element) => {\r\n          if (element.elementType !== Config.WORKFLOW) {\r\n            newElements.push(element);\r\n          }\r\n        });\r\n        this.elements = newElements;\r\n      }\r\n      // show workflow panel by default\r\n      this._panels.show(Config.WORKFLOW, this.workflow, Config.ENV === 'Offline');\r\n    });\r\n    // get the Process Map\r\n    this._parser.buildProcessMap();\r\n  }\r\n\r\n  buildXMLProcess() {\r\n    // returns the xpdl map\r\n    this._parser = new Parser('', this);\r\n    return this._parser.buildXmlProcessMap();\r\n  }\r\n\r\n  set mode(value) {\r\n    if (value === Config.HAND_MODE) {\r\n      this._lassoManager.enableLasso(false);\r\n      this._connectorManager.enableConnection(false);\r\n      this._panZoomManager.enablePanning(true);\r\n    } else if (value === Config.LASSO_MODE) {\r\n      this._panZoomManager.enablePanning(false);\r\n      this._connectorManager.enableConnection(false);\r\n      this._lassoManager.enableLasso(true);\r\n    } else if (value === Config.CONNECTOR_MODE) {\r\n      this._lassoManager.enableLasso(false);\r\n      this._panZoomManager.enablePanning(false);\r\n      this._connectorManager.enableConnection(true);\r\n    }\r\n    this._mode = value;\r\n  }\r\n\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n\r\n  get workflow() {\r\n    return this._workflow;\r\n  }\r\n\r\n  set workflow(value) {\r\n    this._workflow = value;\r\n  }\r\n\r\n  get elements() {\r\n    return this._elements;\r\n  }\r\n\r\n  set elements(value) {\r\n    this._elements = value;\r\n  }\r\n\r\n  get elementSelected() {\r\n    return this._elementSelected;\r\n  }\r\n\r\n  createElement(type, x, y, properties, saveHistory, isFromToolbar) {\r\n    if (properties && parseInt(properties.id, 10) > this.idIndex) {\r\n      this.idIndex = parseInt(properties.id, 10);\r\n    } else if (!properties) {\r\n      this.idIndex++;\r\n    }\r\n\r\n    if (saveHistory === undefined) {\r\n      saveHistory = true;\r\n    }\r\n    const element = this._elementFactory.createElement(\r\n      type,\r\n      this.idIndex,\r\n      x,\r\n      y,\r\n      this._viewport,\r\n      properties,\r\n      true,\r\n    );\r\n\r\n    if (!element) return;\r\n\r\n    // graph used to tabulate between elements\r\n    if (element.elementType === Config.CONNECTOR) {\r\n      const fromEl = getProcessElementByID(element.properties.from, this.elements);\r\n      const toEl = getProcessElementByID(element.properties.to, this.elements);\r\n\r\n      if (fromEl && toEl) {\r\n        let fw = 5;\r\n        if (fromEl.elementType === Config.START_EVENT) {\r\n          fw = 10;\r\n        } else if (toEl.elementType === Config.END_EVENT) {\r\n          fw = 1;\r\n        }\r\n        this._graph.addNode(element.properties.from);\r\n        this._graph.addNode(element.properties.to);\r\n        this._graph.addEdge(element.properties.from, element.properties.to, fw);\r\n      } else {\r\n        console.log(\r\n          `element not found: from: ${element.properties.from} To: ${element.properties.to}`,\r\n        );\r\n      }\r\n    }\r\n\r\n    element.on('element_mouse_down', (event) => {\r\n      this._currentlySelectedNumber = numberOfSelectedElements(this._elements);\r\n      if (!event.shiftKey && this._currentlySelectedNumber === 0) {\r\n        element.selected = true;\r\n        this._currentlySelectedNumber = 1;\r\n      }\r\n      if (!event.shiftKey && !element.selected && this._currentlySelectedNumber >= 1) {\r\n        // select single element\r\n        this.unSelectAllElements();\r\n        element.selected = true;\r\n        this._currentlySelectedNumber = 1;\r\n      }\r\n      if (event.shiftKey && this._currentlySelectedNumber >= 0) {\r\n        // shift select or unselect multiple, skip lanes\r\n        if (this.mode !== Config.CONNECTOR_MODE) {\r\n          if (element.selected) {\r\n            element.selected = false;\r\n            this._currentlySelectedNumber--;\r\n          } else {\r\n            element.selected = true;\r\n            this._currentlySelectedNumber++;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    element.on('element_move_start', () => {\r\n      // Move multiple selection\r\n      if (this._currentlySelectedNumber > 1 && element.selected) {\r\n        this._moveStartMultipleSelection(element);\r\n      } else if (this._currentlySelectedNumber === 1 && element.selected) {\r\n        // if pool move children also\r\n        this._poolManager.moveStart(element);\r\n        // check if any boundary events are attached\r\n        this._boundaryEventsManager.moveStart(element);\r\n      }\r\n      // connect line if on connect mode\r\n      this._connectorManager.connect(element);\r\n      this._selectedElementFirstMove = true;\r\n    });\r\n\r\n    element.on('element_moving', () => {\r\n      if (this._selectedElementFirstMove === true) {\r\n        element._contextMenu.hide();\r\n        this._historyManager.save();\r\n      }\r\n      this._selectedElementFirstMove = false;\r\n\r\n      if (this._currentlySelectedNumber === 1) {\r\n        // move pool and contents\r\n        this._poolManager.moving(element);\r\n        // move any attached boundary events\r\n        this._boundaryEventsManager.moving(element);\r\n      }\r\n      // Move multiple selection\r\n      if (this._currentlySelectedNumber > 1 && element.selected) {\r\n        this._moveMultipleSelection(element);\r\n      }\r\n      // update any connectors for this element\r\n      // throttled version\r\n      this.throttledUpdateConnectors(element);\r\n      // live version\r\n      // this.updateElementConnectors(element);\r\n    });\r\n\r\n    element.on('element_move_end', () => {\r\n      if (this._currentlySelectedNumber > 1 && element.selected) {\r\n        this._moveEndMultipleSelection(element);\r\n        element._contextMenu.hide();\r\n      } else if (this._currentlySelectedNumber === 1) {\r\n        this._poolManager.moveEnd(element);\r\n        // move end any boundary events\r\n        this._boundaryEventsManager.moveEnd(element);\r\n        if (this._mode === Config.CONNECTOR_MODE) {\r\n          element._contextMenu.hide();\r\n        } else {\r\n          element._contextMenu.show();\r\n        }\r\n      }\r\n    });\r\n\r\n    element.on('element_no_move_end', () => {\r\n      // element was dropped back to initial place\r\n      if (this._currentlySelectedNumber === 1 && element.selected) {\r\n        this._poolManager.noMoveEnd(element);\r\n        this._boundaryEventsManager.noMoveEnd(element);\r\n        if (this._mode === Config.CONNECTOR_MODE) {\r\n          element._contextMenu.hide();\r\n        } else {\r\n          element._contextMenu.show();\r\n        }\r\n      }\r\n    });\r\n\r\n    element.on('element_snap_to_grid', () => {\r\n      // fires on snap to grid function called\r\n      this.updateElementConnectors(element);\r\n    });\r\n\r\n    element.on('element_deleted', () => {\r\n      if (element.elementType === Config.LANE) {\r\n        this._laneManager.onLaneDeleted(element);\r\n      }\r\n      if (element.elementType === Config.POOL) {\r\n        this._poolManager.onElementDelete(element);\r\n      }\r\n      this._elementSelected = null;\r\n      this._panels.hide(element.elementType);\r\n      this._panels.show(Config.WORKFLOW, this.workflow);\r\n      this._connectorManager.reset();\r\n    });\r\n\r\n    element.on('element_on_remove_button_clicked', () => {\r\n      this._deleteElement(element);\r\n    });\r\n\r\n    element.on('element_onpropertychange', () => {\r\n      this._historyManager.save();\r\n    });\r\n\r\n    element.on('connector_point_move_start', () => {\r\n      this._historyManager.save();\r\n      element._contextMenu.hide();\r\n    });\r\n\r\n    element.on('connector_point_move_end', () => {\r\n      if (numberOfSelectedElements(this._elements) === 1) {\r\n        element._contextMenu.show();\r\n      }\r\n    });\r\n\r\n    element.on('connector_point_no_move_end', () => {\r\n      if (numberOfSelectedElements(this._elements) === 1) {\r\n        element._contextMenu.show();\r\n      }\r\n    });\r\n\r\n    element.on('connector_point_new', () => {\r\n      this._historyManager.save();\r\n    });\r\n\r\n    element.on('connector_point_deleted', () => {\r\n      this._historyManager.save();\r\n    });\r\n\r\n    element.on('element_selected', () => {\r\n      if (numberOfSelectedElements(this._elements) === 1) {\r\n        this._elementSelected = element;\r\n        this._firstSelectedElementFromMultiple = element;\r\n        this._panels.show(element.elementType, element);\r\n        this._panels.hide(Config.WORKFLOW);\r\n        if (this._mode !== Config.CONNECTOR_MODE) {\r\n          element._contextMenu.show();\r\n        }\r\n      } else if (numberOfSelectedElements(this._elements) > 1) {\r\n        // multiple selected\r\n        if (this._firstSelectedElementFromMultiple) {\r\n          this._panels.hide(this._firstSelectedElementFromMultiple.elementType);\r\n        }\r\n        this._panels.hide(Config.WORKFLOW);\r\n        // hide context menu when multiple selected\r\n        const selectedArray = getSelected(this._elements);\r\n        for (let h = 0, len = selectedArray.length; h < len; ++h) {\r\n          if (selectedArray[h].elementType !== Config.WORKFLOW) {\r\n            selectedArray[h]._contextMenu.hide();\r\n          }\r\n        }\r\n      } else if (numberOfSelectedElements(this._elements) === 0) {\r\n        // none selected\r\n        this._panels.hide(this._firstSelectedElementFromMultiple.elementType);\r\n        this._panels.show(Config.WORKFLOW, this.workflow);\r\n      }\r\n    });\r\n\r\n    element.on('element_unselected', () => {\r\n      element._contextMenu.hide();\r\n      this._elementSelected = null;\r\n      this._panels.hide(element.elementType);\r\n    });\r\n\r\n    element.on('lane_resize_start', () => {\r\n      this._historyManager.save();\r\n      this._laneManager.resizeStart(element);\r\n    });\r\n\r\n    element.on('lane_resizing', (height) => {\r\n      this._laneManager.resize(element, height);\r\n    });\r\n\r\n    element.on('lane_resize_end', () => {\r\n      this._laneManager.resizeEnd(element);\r\n      if (this._mode !== Config.CONNECTOR_MODE) {\r\n        element._contextMenu.show();\r\n      }\r\n    });\r\n\r\n    element.on('element_resize_start', () => {\r\n      this._historyManager.save();\r\n      if (element.elementType === Config.POOL) {\r\n        this._poolManager.onResizeStart();\r\n      }\r\n      if (element.elementType === Config.TEXT || element.elementType === Config.GROUP) {\r\n        element.onResizingStart();\r\n      }\r\n    });\r\n\r\n    element.on('element_resizing', (width, height) => {\r\n      if (element.elementType === Config.POOL) {\r\n        this._poolManager.onResize(element, width, height);\r\n      }\r\n      if (element.elementType === Config.TEXT || element.elementType === Config.GROUP) {\r\n        element.onResizing(width, height);\r\n        this.updateElementConnectors(element);\r\n      }\r\n    });\r\n\r\n    element.on('element_resize_end', () => {\r\n      if (element.elementType === Config.POOL) {\r\n        if (this._mode !== Config.CONNECTOR_MODE) {\r\n          element._contextMenu.show();\r\n        }\r\n        this._poolManager.onResizeEnd();\r\n        this.updateElementConnectors(element);\r\n      }\r\n      if (element.elementType === Config.TEXT || element.elementType === Config.GROUP) {\r\n        if (this._mode !== Config.CONNECTOR_MODE) {\r\n          element._contextMenu.show();\r\n        }\r\n        element.onResizeEnd();\r\n      }\r\n    });\r\n\r\n    element.on('element_on_connect_button', () => {\r\n      // connect context button pressed\r\n      element._contextMenu.hide();\r\n      this._connectorManager.connectOneTime(element);\r\n    });\r\n\r\n    element.on('element_on_open_subprocess', () => {\r\n      this._openSubprocess(element);\r\n      if (Config.ENV !== 'Offline') this._openProcessInNewTab(element);\r\n    });\r\n\r\n    element.on('process_name_changed', () => {\r\n      this.fileName = this.workflow.name;\r\n    });\r\n\r\n    element.on('element_on_append', (elementType) => {\r\n      let newElement;\r\n      let posX = 0;\r\n      let extraY = 0;\r\n      let centerY = 0;\r\n      const RIGHT_OFFSET = 70; // to fit grid\r\n      const bounds = element.selectionBox.node.getBoundingClientRect();\r\n      const bottomRight = this._viewport.getInverseScreenPoint(bounds.right, bounds.bottom);\r\n      const leftTop = this._viewport.getInverseScreenPoint(bounds.left, bounds.top);\r\n      const maxYEl = getLastYElBounds(element, this.elements);\r\n\r\n      if (maxYEl) {\r\n        const rightElLeftTop = this._viewport.getInverseScreenPoint(maxYEl.left, maxYEl.bottom);\r\n        posX = rightElLeftTop.x;\r\n        extraY = rightElLeftTop.y;\r\n        centerY = 60;\r\n      } else {\r\n        posX = bottomRight.x + RIGHT_OFFSET;\r\n        centerY = Math.round(leftTop.y + element.height / 2);\r\n      }\r\n\r\n      switch (elementType) {\r\n        case Config.TASK:\r\n        case Config.SUBPROCESS:\r\n          newElement = this.createElement(\r\n            elementType,\r\n            posX,\r\n            centerY - Config.TASK_SIZE.height / 2 + extraY,\r\n          );\r\n          break;\r\n        case Config.GATEWAY:\r\n        case Config.START_EVENT:\r\n        case Config.INTERMEDIATE_EVENT:\r\n        case Config.END_EVENT:\r\n          newElement = this.createElement(\r\n            elementType,\r\n            posX,\r\n            centerY - Config.GATEWAY_SIZE.height / 2 + extraY,\r\n          );\r\n          break;\r\n        case Config.TEXT:\r\n          newElement = this.createElement(\r\n            Config.TEXT,\r\n            posX,\r\n            leftTop.y - Config.TEXT_SIZE.height * 2,\r\n          );\r\n          break;\r\n        case Config.LANE:\r\n          this._historyManager.save();\r\n          newElement = this._laneManager.createLane(element);\r\n          element.removeResizeHandles();\r\n          element.drawResizeHandles();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      // deselect current element and select new one here\r\n      if (elementType !== Config.LANE && elementType !== Config.CONNECTOR) {\r\n        // create new connection\r\n        let connType;\r\n        let points;\r\n        if (newElement.elementType === Config.TEXT) {\r\n          connType = Config.CONNECTOR_TYPE_ASSOCIATION;\r\n          points = [\r\n            { x: 0, y: 0 },\r\n            { x: 0, y: 0 },\r\n          ];\r\n        } else {\r\n          connType = Config.CONNECTOR_TYPE_TRANSITION;\r\n          if (maxYEl) {\r\n            points = [\r\n              { x: 0, y: 0 },\r\n              {\r\n                x: element.x + element.width / 2 - Config.ELEMENT_SELECT_SIZE / 2,\r\n                y: newElement.y + newElement.height / 2 - Config.ELEMENT_SELECT_SIZE / 2,\r\n              },\r\n              { x: 0, y: 0 },\r\n            ];\r\n          } else {\r\n            points = [\r\n              { x: 0, y: 0 },\r\n              { x: 0, y: 0 },\r\n            ];\r\n          }\r\n        }\r\n        const props = {\r\n          id: ++this.idIndex,\r\n          from: element.id,\r\n          to: newElement.id,\r\n          type: connType,\r\n          points,\r\n        };\r\n        if (connType === Config.CONNECTOR_TYPE_ASSOCIATION) props.direction = 'none';\r\n        if (connType === Config.CONNECTOR_TYPE_TRANSITION) props.class = 'N';\r\n        this.createElement(Config.CONNECTOR, null, null, props, false, false);\r\n        this.unSelectAllElements();\r\n        newElement.selected = true;\r\n      }\r\n    });\r\n\r\n    // snap to grid if not in grid\r\n    if (element.elementType !== Config.WORKFLOW) {\r\n      element.snap(this._isSnapToGridOn, Config.GRID_SIZE);\r\n    }\r\n\r\n    if (saveHistory) {\r\n      this._historyManager.save();\r\n    }\r\n\r\n    // check if element dropped on boundary\r\n    this._boundaryEventsManager.moveEnd(element);\r\n\r\n    if (element.elementType === Config.CONNECTOR) {\r\n      this._connections.push(element);\r\n    }\r\n    this._elements.push(element);\r\n    // Restore Panel Selection from history\r\n    if (numberOfSelectedElements(this._elements) === 1) {\r\n      if (element.selected && this._elementSelected) {\r\n        // hide previous selected\r\n        this._panels.hide(this._elementSelected.elementType);\r\n        // refresh reference for element selected\r\n        this._elementSelected = element;\r\n        // show panel again for selected when undo/redo\r\n        this._panels.show(element.elementType, element);\r\n      } else if (element.selected) {\r\n        // when selecting workflow (paper) and hitting\r\n        // undo should re-show previously selected panel\r\n        this._elementSelected = element;\r\n        this._panels.hide(Config.WORKFLOW);\r\n        this._panels.show(element.elementType, element);\r\n      }\r\n    } else if (this._elementSelected) {\r\n      // none selected, hide previous panel and show Workflow panel\r\n      this._panels.hide(this._elementSelected.elementType);\r\n      this._elementSelected = null;\r\n      this._panels.show(Config.WORKFLOW, this.workflow);\r\n    } else if (numberOfSelectedElements(this._elements) > 1) {\r\n      // redo after deleting more than one el\r\n      this._panels.hide(element.elementType);\r\n    }\r\n\r\n    if (isFromToolbar) {\r\n      // select newly created element\r\n      this.unSelectAllElements();\r\n      element.selected = true;\r\n      this._elementSelected = element;\r\n    }\r\n    // eslint-disable-next-line consistent-return\r\n    return element;\r\n  }\r\n\r\n  createDefMarkers() {\r\n    const startArrow = this._paper\r\n      .polyline('0,8, 4,0, 8,8')\r\n      .attr({ class: 'arrow_marker' })\r\n      .transform('r-90');\r\n    this._startMarker = startArrow.marker(0, 0, 10, 10, 1, 4);\r\n    const endArrow = this._paper\r\n      .polyline('0,8, 4,0, 8,8')\r\n      .attr({ class: 'arrow_marker' })\r\n      .transform('r90');\r\n    this._endMarker = endArrow.marker(0, 0, 10, 10, 7, 4);\r\n    const rhomboid = this._paper\r\n      .polygon(5, 0, 0, 5, 5, 10, 10, 5)\r\n      .attr({ class: 'expression_marker' });\r\n    this._expressionMarker = rhomboid.marker(0, 0, 10, 10, 0, 5);\r\n    const doubleArrow = this._paper\r\n      .polyline('0,8, 4,0, 8,8, 4,8, 12,24, -4,24, 4,8, 0,8')\r\n      .attr({ class: 'arrow_marker' })\r\n      .transform('r90');\r\n    this._wizardMarker = doubleArrow.marker(0, 0, 40, 40, 15, 12);\r\n  }\r\n\r\n  _onPaperClick(e) {\r\n    if (e.target.id === 'app') {\r\n      this.unSelectAllElements();\r\n      this._panels.show(Config.WORKFLOW, this.workflow);\r\n    }\r\n  }\r\n\r\n  _repositionCtxMenu() {\r\n    const elArray = getSelected(this.elements);\r\n    if (elArray.length === 1) elArray[0]._contextMenu.show();\r\n  }\r\n\r\n  unSelectAllElements() {\r\n    for (let i = 0, len = this._elements.length; i < len; i++) {\r\n      this._elements[i].selected = false;\r\n    }\r\n    this._elementSelected = null;\r\n  }\r\n\r\n  selectAllElements() {\r\n    for (let i = 0, len = this._elements.length; i < len; i++) {\r\n      if (this._elements[i].elementType !== Config.WORKFLOW) {\r\n        this._elements[i].selected = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  _moveStartMultipleSelection(element) {\r\n    if (element.elementType === Config.POOL) {\r\n      this._poolManager.moveStart(element);\r\n    } else {\r\n      this._elementsSelectedToMove = getSelected(this.elements);\r\n    }\r\n  }\r\n\r\n  _moveMultipleSelection(element) {\r\n    let el;\r\n    let elType;\r\n    if (element.elementType === Config.POOL) {\r\n      this._poolManager.moving(element);\r\n    } else {\r\n      for (let i = 0, len = this._elementsSelectedToMove.length; i < len; i++) {\r\n        el = this._elementsSelectedToMove[i];\r\n        elType = el.elementType;\r\n        if (\r\n          el.selected\r\n          && elType !== Config.LANE\r\n          && elType !== Config.POOL\r\n          && elType !== Config.CONNECTOR\r\n          && el.id !== element.id\r\n        ) {\r\n          // move all selected elements\r\n          el._contextMenu.hide();\r\n          this._updateElementPosition(el, element);\r\n        } else if (\r\n          this._elementsSelectedToMove.some((e) => e.elementType === Config.POOL)\r\n          && elType === Config.LANE\r\n          && elType === Config.POOL\r\n          && el.id !== element.id\r\n        ) {\r\n          el._contextMenu.hide();\r\n        } else if (el.selected && elType === Config.CONNECTOR) {\r\n          // move control points only if both from and to are selected\r\n          this._updatePointSegments(el, element);\r\n        }\r\n        if (el.selected && elType === Config.TASK && el.id !== element.id) {\r\n          // move boundary event\r\n          for (let a = 0, l = el.boundaryEvents.length; a < l; a++) {\r\n            const bEvent = getProcessElementByID(el.boundaryEvents[a], this._elements);\r\n            if (!bEvent.selected) {\r\n              // move all attached boundary events too\r\n              this._updateElementPosition(bEvent, element);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _moveEndMultipleSelection(element) {\r\n    let el;\r\n    let elType;\r\n    if (element.elementType === Config.POOL) {\r\n      this._poolManager.moveEnd(element);\r\n    } else {\r\n      for (let i = 0, len = this._elementsSelectedToMove.length; i < len; i++) {\r\n        el = this._elementsSelectedToMove[i];\r\n        elType = el.elementType;\r\n        if (\r\n          el.selected\r\n          && elType !== Config.LANE\r\n          && elType !== Config.POOL\r\n          && elType !== Config.CONNECTOR\r\n        ) {\r\n          this._updateElementEndPosition(el, element);\r\n        } else if (\r\n          this._elementsSelectedToMove.some((e) => e.elementType === Config.POOL)\r\n          && elType === Config.LANE\r\n          && elType === Config.POOL\r\n        ) {\r\n          // this._updateElementEndPosition(el, element);\r\n          this.toggleElementConnectorsVisibility(true);\r\n        } else if (el.selected && elType === Config.CONNECTOR) {\r\n          // reset moving element\r\n          el.resetMovingPointSegment();\r\n        }\r\n        if (el.selected && elType === Config.TASK) {\r\n          for (let a = 0, l = el.boundaryEvents.length; a < l; a++) {\r\n            const elB = getProcessElementByID(el.boundaryEvents[a], this._elements);\r\n            if (!elB.selected) {\r\n              this._updateElementEndPosition(elB, element);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this._elementsSelectedToMove = [];\r\n  }\r\n\r\n  _updatePointSegments(connector, element) {\r\n    // when both to and from move together update segment points\r\n    connector.updateSegmentsPosition(element);\r\n  }\r\n\r\n  _updateElementPosition(el, element) {\r\n    el.moveElement(Math.round(element.mx + el.x), Math.round(element.my + el.y));\r\n    this.updateElementConnectors(el);\r\n  }\r\n\r\n  _updateElementEndPosition(el, element) {\r\n    el.moveElementEnd(Math.round(element.mx + el.x), Math.round(element.my + el.y));\r\n  }\r\n\r\n  updateElementConnectors(element, offset = { x: 0, y: 0 }, isStart = false, isPoolMoving = false) {\r\n    const elMovedID = element.properties.id;\r\n    for (let c = 0, len = this._connections.length; c < len; ++c) {\r\n      const props = this._connections[c].properties;\r\n      if (\r\n        parseInt(props.from, 10) === parseInt(elMovedID, 10)\r\n        || parseInt(props.to, 10) === parseInt(elMovedID, 10)\r\n      ) {\r\n        if (!isStart) {\r\n          this._connections[c].updateConnection(offset, isPoolMoving);\r\n        } else {\r\n          this._connections[c].updateConnectionStart();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleElementConnectorsVisibility(isVisible) {\r\n    for (let c = 0, len = this._connections.length; c < len; ++c) {\r\n      if (!isVisible) {\r\n        this._connections[c].graphic.addClass('connector--hidden');\r\n      } else {\r\n        this._connections[c].graphic.removeClass('connector--hidden');\r\n      }\r\n    }\r\n  }\r\n\r\n  _deleteElement(element, saveHistory = true) {\r\n    for (let i = 0, len = this._elements.length; i < len; i++) {\r\n      if (this._elements[i] === element) {\r\n        if (saveHistory) {\r\n          this._historyManager.save();\r\n        }\r\n        this._elements.splice(i, 1);\r\n        this._graph.removeNode(element.id);\r\n        // delete all connectors attached to element\r\n        this._deleteAttachedConnectors(element);\r\n        // delete all boundary events as well\r\n        if (element.elementType === Config.TASK) {\r\n          for (let b = 0, lenB = element.boundaryEvents.length; b < lenB; b++) {\r\n            const bEvent = getProcessElementByID(element.boundaryEvents[b], this._elements);\r\n            this._deleteElement(bEvent, false);\r\n          }\r\n        }\r\n        element.deleteEl();\r\n        if (element.elementType === Config.CONNECTOR) {\r\n          this._deleteFromConnectorsList(element);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _deleteAttachedConnectors(element) {\r\n    const elMovedID = element.properties.id;\r\n    let i = this._connections.length;\r\n    while (i--) {\r\n      // delete from connections array\r\n      if (\r\n        this._connections[i].properties.from === elMovedID\r\n        || this._connections[i].properties.to === elMovedID\r\n      ) {\r\n        const connector = this._connections[i];\r\n        this._graph.removeEdge(\r\n          this._connections[i].properties.from,\r\n          this._connections[i].properties.to,\r\n        );\r\n        this._connections.splice(i, 1);\r\n        let e = this._elements.length;\r\n        // delete also from elements array\r\n        while (e--) {\r\n          if (this._elements[e] === connector) {\r\n            this._elements.splice(e, 1);\r\n          }\r\n        }\r\n        connector.deleteEl();\r\n      }\r\n    }\r\n  }\r\n\r\n  _deleteFromConnectorsList(element) {\r\n    for (let c = 0, connLen = this._connections.length; c < connLen; c++) {\r\n      if (this._connections[c] === element) {\r\n        this._connections.splice(c, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteMultipleSelectedElements() {\r\n    this._historyManager.save();\r\n    let i = this._elements.length;\r\n    while (i--) {\r\n      if (this._elements[i]) {\r\n        if (this._elements[i].selected) {\r\n          const el = this._elements[i];\r\n          this._deleteElement(el, false);\r\n          this._graph.removeNode(el.id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  zoomIn() {\r\n    this._panZoomManager.zoomIn();\r\n  }\r\n\r\n  zoomOut() {\r\n    this._panZoomManager.zoomOut();\r\n  }\r\n\r\n  resetView() {\r\n    this._panZoomManager.resetViewPort();\r\n    this._repositionCtxMenu();\r\n  }\r\n\r\n  undoAction() {\r\n    this._historyManager.undo();\r\n  }\r\n\r\n  redoAction() {\r\n    this._historyManager.redo();\r\n  }\r\n\r\n  alignSelectionLeft() {\r\n    this._alignManager.alignLeft();\r\n  }\r\n\r\n  alignSelectionRight() {\r\n    this._alignManager.alignRight();\r\n  }\r\n\r\n  alignSelectionTop() {\r\n    this._alignManager.alignTop();\r\n  }\r\n\r\n  alignSelectionBottom() {\r\n    this._alignManager.alignBottom();\r\n  }\r\n\r\n  alignSelectionHorizontal() {\r\n    this._alignManager.alignHorizontalCenter(getSelected(this.elements), true);\r\n  }\r\n\r\n  alignSelectionVertical() {\r\n    this._alignManager.alignVerticalCenter();\r\n  }\r\n\r\n  distSelectionHorizontal() {\r\n    this._alignManager.distHorizontal();\r\n  }\r\n\r\n  distSelectionVertical() {\r\n    this._alignManager.distVertical();\r\n  }\r\n\r\n  copyElements() {\r\n    this._clipboardManager.copy();\r\n  }\r\n\r\n  pasteElements() {\r\n    this._clipboardManager.paste();\r\n  }\r\n\r\n  showGrid(toShow) {\r\n    if (toShow) {\r\n      this._gridManager.show();\r\n    } else {\r\n      this._gridManager.hide();\r\n    }\r\n  }\r\n\r\n  snapToGrid(value) {\r\n    this._isSnapToGridOn = value;\r\n  }\r\n\r\n  _clearEditorElements() {\r\n    // remove all svg child nodes but keep grid\r\n    const viewportElements = this._viewport.children();\r\n    for (let i = 0, len = viewportElements.length; i < len; i++) {\r\n      const el = viewportElements[i];\r\n      if (!el.hasClass('grid_bg')) {\r\n        el.remove();\r\n      }\r\n    }\r\n    // clean ctx menu layer\r\n    this._ctxMenuLayer.clear();\r\n    this._elements = [];\r\n    this._connections = [];\r\n    this._graph = Graph();\r\n    this._workflow = null;\r\n  }\r\n\r\n  doTabProcessElements() {\r\n    const selected = getSelected(this.elements)[0] || this.elements[0];\r\n    const graphArr = this._graph.topologicalSort();\r\n    let index = graphArr.findIndex((el) => parseInt(el, 10) === parseInt(selected.id, 10));\r\n    index++;\r\n    if (index === graphArr.length) {\r\n      index = 0;\r\n    }\r\n    getProcessElementByID(selected.id, this.elements).selected = false;\r\n    getProcessElementByID(parseInt(graphArr[index], 10), this.elements).selected = true;\r\n    getProcessElementByID(parseInt(graphArr[index], 10), this.elements).toFront();\r\n  }\r\n\r\n  loadLocalXPDL(evt) {\r\n    // loads xpdl file from file input\r\n    const { files } = evt.target;\r\n    if (files[0]) {\r\n      const reader = new FileReader();\r\n      reader.readAsText(files[0], 'UTF-8');\r\n      reader.onload = (event) => {\r\n        this.buildProcess(event.target.result);\r\n      };\r\n      reader.onerror = () => {\r\n        console.warn('error reading file');\r\n      };\r\n    }\r\n  }\r\n\r\n  saveLocalXPDL() {\r\n    // downloads xpdl file directly to browser\r\n    this._docManager.generateXPDLFile();\r\n  }\r\n\r\n  saveToPDF() {\r\n    // downloads PDF Documentation directly to browser\r\n    this._docManager.generateProcessDocumentation();\r\n  }\r\n\r\n  getPDF() {\r\n    // for facilis\r\n    return this._docManager.generateProcessDocumentation();\r\n  }\r\n\r\n  saveToImage() {\r\n    // downloads PNG directly to browser\r\n    this._docManager.generateProcessPNG();\r\n  }\r\n\r\n  async getPNGData() {\r\n    // for facilis\r\n    const pngDataURL = await this._docManager.getPNGDataURL();\r\n    return pngDataURL;\r\n  }\r\n\r\n  _openSubprocess(el) {\r\n    // for facilis integration\r\n    this.emit('editor_on_open_subprocess', el.properties);\r\n  }\r\n\r\n  _openProcessInNewTab(element) {\r\n    if (element && Config.ENV !== 'Offline') {\r\n      const subprocessId = element.properties.activitySetId || element.properties.subprocessId;\r\n      if (subprocessId !== 1 && element.name.toLowerCase() !== 'default_process') {\r\n        const { tabContainer } = window.top;\r\n        const baseUrl = Config.SUBPROCESS_OPEN_NEW_TAB_URL;\r\n        const [, tokenId] = Config.TAB_KEYS.split('&tokenId=');\r\n        const tabId = Date.now();\r\n        const subpUrl = `${baseUrl}&tokenId=${tokenId}&tabId=${tabId}&id=${subprocessId}_0`;\r\n        tabContainer.addNewTab(element.name, subpUrl, null);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\n\r\nexport default class ButtonBar extends EventEmitter {\r\n  constructor(editor) {\r\n    super();\r\n    this._editor = editor;\r\n    // Undo/Redo Bar\r\n    document.getElementById('undo_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.undoAction();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('redo_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.redoAction();\r\n      },\r\n      false,\r\n    );\r\n\r\n    // Alignment\r\n    document.getElementById('align_left_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.alignSelectionLeft();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('align_right_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.alignSelectionRight();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('align_top_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.alignSelectionTop();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('align_bottom_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.alignSelectionBottom();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('align_horizontal_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.alignSelectionHorizontal();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('align_vertical_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.alignSelectionVertical();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('dist_horizontal_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.distSelectionHorizontal();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('dist_vertical_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.distSelectionVertical();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('grid_btn').addEventListener('click', (event) => {\r\n      const element = event.currentTarget;\r\n      element.setAttribute(\r\n        'data-state',\r\n        element.getAttribute('data-state') === 'on' ? 'off' : 'on',\r\n      );\r\n      if (element.getAttribute('data-state') === 'on') {\r\n        editor.showGrid(true);\r\n      } else {\r\n        editor.showGrid(false);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import Config from 'config';\r\nimport key from 'mousetrap';\r\nimport { getElementsOfType, getViewPortBBox } from '../../utils/util';\r\n\r\nexport default class ToolBar {\r\n  constructor(editor) {\r\n    this._editor = editor;\r\n    this._isDraggingElement = false;\r\n    this._toolBarClone = null;\r\n\r\n    this._onToolBarElMouseMove = this._onToolBarElMouseMove.bind(this);\r\n    this._onToolBarElMouseUp = this._onToolBarElMouseUp.bind(this);\r\n    this._onToolBarElMouseDown = this._onToolBarElMouseDown.bind(this);\r\n\r\n    document.addEventListener(\r\n      'dragstart',\r\n      (event) => {\r\n        this._onToolDragStart(event);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.addEventListener('drop', (event) => {\r\n      this._onToolDrop(event);\r\n    });\r\n\r\n    document.addEventListener(\r\n      'dragover',\r\n      (event) => {\r\n        event.preventDefault();\r\n        this._onToolDragOver(event);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.addEventListener('dragover', (event) => {\r\n      // needed for drop event to fire\r\n      event.preventDefault();\r\n    });\r\n\r\n    document.getElementById('task_btn').addEventListener(\r\n      'click',\r\n      (event) => {\r\n        this._clickToolbarElement(event, Config.TASK);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('task_btn').draggable = true;\r\n\r\n    document.getElementById('start_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.START_EVENT);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('start_btn').draggable = true;\r\n\r\n    document.getElementById('end_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.END_EVENT);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('end_btn').draggable = true;\r\n\r\n    document.getElementById('intermediate_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.INTERMEDIATE_EVENT);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('intermediate_btn').draggable = true;\r\n\r\n    document.getElementById('gateway_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.GATEWAY);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('gateway_btn').draggable = true;\r\n\r\n    document.getElementById('subprocess_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.SUBPROCESS);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('subprocess_btn').draggable = true;\r\n\r\n    document.getElementById('pool_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.POOL);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('pool_btn').draggable = true;\r\n\r\n    document.getElementById('group_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.GROUP);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('group_btn').draggable = true;\r\n\r\n    document.getElementById('data_obj_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.DATA_OBJECT);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('data_obj_btn').draggable = true;\r\n\r\n    document.getElementById('data_store_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.DATA_STORE);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('data_store_btn').draggable = true;\r\n\r\n    document.getElementById('data_input_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.DATA_INPUT);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('data_input_btn').draggable = true;\r\n\r\n    document.getElementById('data_output_btn').addEventListener(\r\n      'click',\r\n      () => {\r\n        this._clickToolbarElement(event, Config.DATA_OUTPUT);\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('data_output_btn').draggable = true;\r\n\r\n    document.getElementById('hand_btn').addEventListener(\r\n      'click',\r\n      (event) => {\r\n        const element = event.currentTarget;\r\n        const connectorBtn = document.querySelector('#connector_btn');\r\n        const lassoBtn = document.querySelector('#lasso_btn');\r\n        lassoBtn.setAttribute('data-state', 'off');\r\n        connectorBtn.setAttribute('data-state', 'off');\r\n        element.setAttribute('data-state', 'on');\r\n        editor.mode = Config.HAND_MODE;\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('lasso_btn').addEventListener(\r\n      'click',\r\n      (event) => {\r\n        const element = event.currentTarget;\r\n        const handBtn = document.querySelector('#hand_btn');\r\n        const connectorBtn = document.querySelector('#connector_btn');\r\n        handBtn.setAttribute('data-state', 'off');\r\n        connectorBtn.setAttribute('data-state', 'off');\r\n        element.setAttribute('data-state', 'on');\r\n        editor.mode = Config.LASSO_MODE;\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('connector_btn').addEventListener(\r\n      'click',\r\n      (event) => {\r\n        const element = event.currentTarget;\r\n        const handBtn = document.querySelector('#hand_btn');\r\n        const lassoBtn = document.querySelector('#lasso_btn');\r\n        lassoBtn.setAttribute('data-state', 'off');\r\n        handBtn.setAttribute('data-state', 'off');\r\n        element.setAttribute('data-state', 'on');\r\n        editor.mode = Config.CONNECTOR_MODE;\r\n      },\r\n      false,\r\n    );\r\n\r\n    // Zoom Bar\r\n    document.getElementById('zoom_in').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.zoomIn();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('zoom_out').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.zoomOut();\r\n      },\r\n      false,\r\n    );\r\n\r\n    document.getElementById('reset_view').addEventListener(\r\n      'click',\r\n      () => {\r\n        editor.resetView();\r\n      },\r\n      false,\r\n    );\r\n  }\r\n\r\n  _clickToolbarElement(event, elementType) {\r\n    if (!this._isDraggingElement) {\r\n      this._isDraggingElement = true;\r\n      event.target.blur();\r\n      // change cloned icon color to blue\r\n      // const style = window.getComputedStyle(document.documentElement);\r\n      // change color before cloning el\r\n      // event.target.style.color = style.getPropertyValue(\r\n      //   '--icon-dragging-color',\r\n      // );\r\n      event.target.style = 'opacity: 0.7';\r\n      this._toolBarClone = document.body.appendChild(\r\n        this._cloneWithStyles(event.target),\r\n      );\r\n      this._toolBarClone.style.position = 'absolute';\r\n      this._toolBarClone.style.left = `${\r\n        event.clientX - event.target.offsetWidth / 2\r\n      }px`;\r\n      this._toolBarClone.style.top = `${\r\n        event.clientY - event.target.offsetHeight / 2\r\n      }px`;\r\n      document.elementType = elementType;\r\n      // restore color back to normal\r\n      // event.target.style.color = style.getPropertyValue('--icons-color');\r\n      event.target.style = 'opacity: 1';\r\n      // set bg color of editor depending if element allowed\r\n      this._giveVisualClueIfDropNotOK(elementType);\r\n\r\n      document.addEventListener('mouseup', this._onToolBarElMouseUp);\r\n      document.addEventListener('mousedown', this._onToolBarElMouseDown);\r\n      document.addEventListener('mousemove', this._onToolBarElMouseMove);\r\n      // bind esc key to cancel\r\n      key.bind('esc', (evt) => {\r\n        if (evt.target.tagName === 'BODY' || evt.target.tagName === 'A') {\r\n          this._toolbarDraggingDone();\r\n          evt.preventDefault();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _onToolDragStart(evt) {\r\n    let type = null;\r\n    evt.target.style = 'opacity: 0.7;';\r\n    switch (evt.target.id) {\r\n      case 'task_btn':\r\n        type = Config.TASK;\r\n        break;\r\n      case 'end_btn':\r\n        type = Config.END_EVENT;\r\n        break;\r\n      case 'start_btn':\r\n        type = Config.START_EVENT;\r\n        break;\r\n      case 'intermediate_btn':\r\n        type = Config.INTERMEDIATE_EVENT;\r\n        break;\r\n      case 'gateway_btn':\r\n        type = Config.GATEWAY;\r\n        break;\r\n      case 'subprocess_btn':\r\n        type = Config.SUBPROCESS;\r\n        break;\r\n      case 'pool_btn':\r\n        type = Config.POOL;\r\n        break;\r\n      case 'group_btn':\r\n        type = Config.GROUP;\r\n        break;\r\n      case 'data_obj_btn':\r\n        type = Config.DATA_OBJECT;\r\n        break;\r\n      case 'data_store_btn':\r\n        type = Config.DATA_STORE;\r\n        break;\r\n      case 'data_input_btn':\r\n        type = Config.DATA_INPUT;\r\n        break;\r\n      case 'data_output_btn':\r\n        type = Config.DATA_OUTPUT;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this._dataType = type;\r\n    this._dragBtnId = evt.target.id;\r\n  }\r\n\r\n  _onToolDragOver() {\r\n    this._giveVisualClueIfDropNotOK(this._dataType);\r\n  }\r\n\r\n  _onToolDrop(evt) {\r\n    evt.preventDefault();\r\n    const btn = document.getElementById(this._dragBtnId);\r\n    btn.style = 'opacity: 1;';\r\n    const p = this._editor._viewport.getInverseScreenPoint(\r\n      evt.clientX,\r\n      evt.clientY,\r\n    );\r\n    const pos = this._getElementPosition(p, this._dataType);\r\n    if (\r\n      this._validateCreate(this._dataType)\r\n      && this._isDropZoneOk(\r\n        document.elementFromPoint(evt.clientX, evt.clientY),\r\n        evt.currentTarget.elementType,\r\n      )\r\n    ) {\r\n      this._editor.createElement(\r\n        this._dataType,\r\n        pos.x,\r\n        pos.y,\r\n        null,\r\n        true,\r\n        true,\r\n      );\r\n    }\r\n    this._editor._paper.removeClass('dragging_element');\r\n    this._editor._paper.removeClass('dragging_element_not_allowed');\r\n  }\r\n\r\n  _onToolBarElMouseDown() {}\r\n\r\n  _onToolBarElMouseMove(event) {\r\n    this._toolBarClone.style.left = `${\r\n      event.clientX - parseInt(this._toolBarClone.style.width, 10) / 2\r\n    }px`;\r\n    this._toolBarClone.style.top = `${\r\n      event.clientY - parseInt(this._toolBarClone.style.height, 10) / 2\r\n    }px`;\r\n  }\r\n\r\n  _onToolBarElMouseUp() {\r\n    const p = this._editor._viewport.getInverseScreenPoint(\r\n      event.clientX,\r\n      event.clientY,\r\n    );\r\n    const pos = this._getElementPosition(p, event.currentTarget.elementType);\r\n    this._toolbarDraggingDone();\r\n\r\n    if (\r\n      this._validateCreate(event.currentTarget.elementType)\r\n      && this._isDropZoneOk(\r\n        document.elementFromPoint(event.clientX, event.clientY),\r\n        event.currentTarget.elementType,\r\n      )\r\n    ) {\r\n      this._editor.createElement(\r\n        event.currentTarget.elementType,\r\n        pos.x,\r\n        pos.y,\r\n        null,\r\n        true,\r\n        true,\r\n      );\r\n    }\r\n  }\r\n\r\n  _toolbarDraggingDone() {\r\n    this._isDraggingElement = false;\r\n    this._toolBarClone.remove();\r\n    document.removeEventListener('mousemove', this._onToolBarElMouseMove);\r\n    document.removeEventListener('mouseup', this._onToolBarElMouseUp);\r\n    document.removeEventListener('mousedown', this._onToolBarElMouseDown);\r\n    key.unbind('esc');\r\n    this._editor._paper.removeClass('dragging_element');\r\n    this._editor._paper.removeClass('dragging_element_not_allowed');\r\n  }\r\n\r\n  _giveVisualClueIfDropNotOK(elementType) {\r\n    switch (elementType) {\r\n      case Config.START_EVENT:\r\n        if (\r\n          getElementsOfType(Config.START_EVENT, this._editor.elements).length\r\n          > 0\r\n        ) {\r\n          this._editor._paper.addClass('dragging_element_not_allowed');\r\n        } else {\r\n          this._editor._paper.addClass('dragging_element');\r\n        }\r\n        break;\r\n      case Config.POOL:\r\n        if (getElementsOfType(Config.POOL, this._editor.elements).length > 0) {\r\n          this._editor._paper.addClass('dragging_element_not_allowed');\r\n        } else {\r\n          this._editor._paper.addClass('dragging_element');\r\n        }\r\n        break;\r\n      default:\r\n        this._editor._paper.addClass('dragging_element');\r\n        break;\r\n    }\r\n  }\r\n\r\n  _getElementPosition(p, type) {\r\n    let x;\r\n    let y;\r\n    switch (type) {\r\n      case Config.TASK:\r\n      case Config.SUBPROCESS:\r\n        x = p.x - Config.TASK_SIZE.width / 2;\r\n        y = p.y - Config.TASK_SIZE.height / 2;\r\n        break;\r\n      case Config.GATEWAY:\r\n        x = p.x - Config.GATEWAY_SIZE.width / 2;\r\n        y = p.y - Config.GATEWAY_SIZE.height / 2;\r\n        break;\r\n      case Config.START_EVENT:\r\n      case Config.INTERMEDIATE_EVENT:\r\n      case Config.END_EVENT:\r\n        x = p.x - Config.EVENT_SIZE.radius;\r\n        y = p.y - Config.EVENT_SIZE.radius;\r\n        break;\r\n      case Config.DATA_OBJECT:\r\n      case Config.DATA_INPUT:\r\n      case Config.DATA_OUTPUT:\r\n      case Config.DATA_STORE:\r\n        x = p.x - Config.DATA_SIZE.width / 2;\r\n        y = p.y - Config.DATA_SIZE.height / 2;\r\n        break;\r\n      case Config.POOL:\r\n        const vx = getViewPortBBox(this._editor._viewport);\r\n        if (vx.x === Number.POSITIVE_INFINITY) {\r\n          x = 200;\r\n          y = 200;\r\n        } else {\r\n          x = vx.x - 80;\r\n          y = vx.y - 40;\r\n        }\r\n        break;\r\n      case Config.GROUP:\r\n        x = p.x - Config.GROUP_SIZE.width / 2;\r\n        y = p.y - Config.GROUP_SIZE.height / 2;\r\n        break;\r\n      case Config.TEXT:\r\n        x = p.x - Config.TEXT_SIZE.width / 2;\r\n        y = p.y - Config.TEXT_SIZE.height / 2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return { x, y };\r\n  }\r\n\r\n  _cloneWithStyles(node) {\r\n    const clone = node.cloneNode(true);\r\n    const styles = window.getComputedStyle(node);\r\n    if (styles.cssText !== '') {\r\n      clone.style.cssText = styles.cssText;\r\n    } else {\r\n      const cssText = Object.values(styles).reduce(\r\n        (css, propertyName) => `${css}${propertyName}:${styles.getPropertyValue(propertyName)};`,\r\n      );\r\n      clone.style.cssText = cssText;\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  _isDropZoneOk(target, src) {\r\n    if (target.id === 'app') {\r\n      return true;\r\n    }\r\n    if (src === Config.INTERMEDIATE_EVENT && target.closest('.task')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _validateCreate(type) {\r\n    let canCreateElement = false;\r\n    // validate element can be created\r\n    switch (type) {\r\n      case Config.START_EVENT:\r\n        if (\r\n          getElementsOfType(Config.START_EVENT, this._editor.elements).length\r\n          > 0\r\n        ) {\r\n          canCreateElement = false;\r\n        } else {\r\n          canCreateElement = true;\r\n        }\r\n        break;\r\n      case Config.POOL:\r\n        if (getElementsOfType(Config.POOL, this._editor.elements).length > 0) {\r\n          canCreateElement = false;\r\n        } else {\r\n          canCreateElement = true;\r\n        }\r\n        break;\r\n      default:\r\n        canCreateElement = true;\r\n        break;\r\n    }\r\n    return canCreateElement;\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\n\r\nimport './style.css';\r\nimport Config from 'config';\r\nimport MicroModal from 'micromodal';\r\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport i18next from 'i18next';\r\nimport locI18next from 'loc-i18next';\r\nimport Backend from 'i18next-http-backend';\r\n\r\n// Free Solid\r\nimport { faUndo } from '@fortawesome/free-solid-svg-icons/faUndo';\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons/faRedo';\r\nimport { faTh } from '@fortawesome/free-solid-svg-icons/faTh';\r\nimport { faVectorSquare } from '@fortawesome/free-solid-svg-icons/faVectorSquare';\r\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons/faSearchPlus';\r\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons/faSearchMinus';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons/faPlus';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons/faArrowDown';\r\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons/faArrowUp';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons/faInfoCircle';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\r\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons/faQuestion';\r\nimport { faPen } from '@fortawesome/free-solid-svg-icons/faPen';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons/faCheckCircle';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons/faExclamationCircle';\r\nimport { faTasks } from '@fortawesome/free-solid-svg-icons/faTasks';\r\nimport { faGripLinesVertical } from '@fortawesome/free-solid-svg-icons/faGripLinesVertical';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons/faSave';\r\nimport { faCrosshairs } from '@fortawesome/free-solid-svg-icons/faCrosshairs';\r\n\r\n// Free Regular\r\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons/faCheckSquare';\r\nimport { faSquare } from '@fortawesome/free-regular-svg-icons/faSquare';\r\nimport { faKeyboard } from '@fortawesome/free-regular-svg-icons/faKeyboard';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons/faTrashAlt';\r\nimport { faClock } from '@fortawesome/free-regular-svg-icons/faClock';\r\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons/faCalendarAlt';\r\nimport { faHandPointer } from '@fortawesome/free-regular-svg-icons/faHandPointer';\r\n\r\nimport axios from 'axios';\r\nimport Editor from './js/editor';\r\nimport ButtonBar from './js/ui/controls/buttonBar';\r\nimport ToolBar from './js/ui/controls/toolBar';\r\nimport supportedBrowsers from './js/utils/supportedBrowsers';\r\n\r\nlibrary.add(\r\n  faUndo,\r\n  faRedo,\r\n  faTh,\r\n  faVectorSquare,\r\n  faHandPointer,\r\n  faSearchPlus,\r\n  faSearchMinus,\r\n  faSearch,\r\n  faPlus,\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faTasks,\r\n  faTimes,\r\n  faCheckSquare,\r\n  faSquare,\r\n  faQuestion,\r\n  faKeyboard,\r\n  faPen,\r\n  faInfoCircle,\r\n  faCheckCircle,\r\n  faExclamationTriangle,\r\n  faExclamationCircle,\r\n  faGripLinesVertical,\r\n  faTrashAlt,\r\n  faCalendarAlt,\r\n  faClock,\r\n  faSave,\r\n  faCrosshairs,\r\n);\r\ndom.watch();\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  let editor;\r\n  let toolBar;\r\n  let buttonBar;\r\n\r\n  const localize = locI18next.init(i18next);\r\n  i18next.use(Backend).init(\r\n    {\r\n      backend: {\r\n        loadPath: Config.LOCALIZATION_URL,\r\n        crossDomain: true,\r\n      },\r\n      lng: 'en',\r\n      fallbackLng: 'en',\r\n      debug: Config.LOCALIZATION_DEBUG,\r\n    },\r\n    (t) => {\r\n      // localizing all html data tags\r\n      localize('[data-i18n]');\r\n      editor = new Editor();\r\n      editor.on('editor_on_open_subprocess', (props) => {\r\n        // subprocess clicked\r\n        console.log(props);\r\n      });\r\n      toolBar = new ToolBar(editor);\r\n      buttonBar = new ButtonBar(editor);\r\n      MicroModal.init();\r\n      // Load XPDL if on Dev mode\r\n      if (Config.ENV === 'Development') {\r\n        // -- For test the XPDL Parser -- //\r\n        const url = process.env.MY_IP || 'localhost';\r\n        const xpdl = process.env.DEV_XPDL || 'xpdl';\r\n        axios.get(`http://${url}:3000/${xpdl}`).then((resp) => {\r\n          // call editor with response\r\n          editor.buildProcess(resp.data);\r\n        });\r\n        // Empty Process\r\n        // editor.buildEmptyProcess();\r\n      } else {\r\n        // for apia integration when built for prod.\r\n        const txtMap = window.parent.document.getElementById('txtMap').innerText;\r\n        if (txtMap === '') {\r\n          // Get value of action combo for the process ['C' || 'A' || 'Z']\r\n          const action = window.parent.document.getElementById('cmbAction');\r\n          const proAction = action ? action.value : 'C';\r\n          editor.buildEmptyProcess(null, null, proAction);\r\n        } else {\r\n          editor.buildProcess(txtMap);\r\n        }\r\n      }\r\n    },\r\n  );\r\n\r\n  // ------------------------------ //\r\n  // global functions for apia\r\n  // ------------------------------ //\r\n  const map = {\r\n    loadXPDL(xml) {\r\n      editor.buildProcess(xml);\r\n    },\r\n    newXPDL() {\r\n      editor.buildEmptyProcess();\r\n    },\r\n    getXPDL() {\r\n      return editor.buildXMLProcess();\r\n    },\r\n    getPDF() {\r\n      editor.saveToPDF();\r\n    },\r\n    getPNG() {\r\n      editor.saveToImage();\r\n    },\r\n    getElements() {\r\n      return editor.elements;\r\n    },\r\n    getElementsProperties() {\r\n      return editor.elements.map((value) => value.properties);\r\n    },\r\n    getSelectedElement() {\r\n      for (let i = 0, len = editor.elements.length; i < len; i++) {\r\n        const el = editor.elements[i];\r\n        if (el.selected) {\r\n          return el;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    getSelectedElementProperties() {\r\n      for (let i = 0, len = editor.elements.length; i < len; i++) {\r\n        const el = editor.elements[i];\r\n        if (el.selected) {\r\n          return el.properties;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    getVersion() {\r\n      return {\r\n        version: VERSION,\r\n        commit: COMMITHASH,\r\n        branch: BRANCH,\r\n        env: ENVIRONMENT,\r\n        app_target: APP_TARGET,\r\n        timestamp: TIMESTAMP,\r\n        package: PACKAGE_VERSION,\r\n      };\r\n    },\r\n  };\r\n  window.top.map = map;\r\n\r\n  const confirmBtn = window.parent.document.querySelector('#btnConf button');\r\n  const genDocBtn = window.parent.document.querySelector('#btnGenDoc button');\r\n  // const frmData = window.parent.document.querySelector('#frmData');\r\n  if (confirmBtn && Config.ENV === 'Production') {\r\n    const txtMap = window.parent.document.getElementById('txtMap');\r\n    confirmBtn.addEventListener('click', () => {\r\n      txtMap.value = map.getXPDL();\r\n    });\r\n    genDocBtn.addEventListener('click', () => {\r\n      map.getPDF();\r\n    });\r\n  }\r\n\r\n  // write version to keyboard shorcuts modal\r\n  const modalFooterDiv = document.querySelector('.modal__footer');\r\n  modalFooterDiv.innerText = `Build: ${VERSION.substr(-8)}`;\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  const mainDiv = document.querySelector('.main');\r\n  const spinner = document.querySelector('.spinner');\r\n  spinner.style.display = 'none';\r\n  if (supportedBrowsers.test(navigator.userAgent)) {\r\n    // to combat FOUC, make main div visible\r\n    mainDiv.setAttribute('data-state', 'on');\r\n  } else {\r\n    // eslint-disable-next-line no-alert\r\n    alert(i18next.t('messages.proDesBrowserNotSupportedMsg'));\r\n  }\r\n});\r\n"],"sourceRoot":""}